<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="http://www.martinholub.com//feed.xml" rel="self" type="application/atom+xml" /><link href="http://www.martinholub.com//" rel="alternate" type="text/html" /><updated>2018-05-05T11:15:30+02:00</updated><id>http://www.martinholub.com//</id><title type="html">martin-holub.github.io</title><subtitle>Personal Blog</subtitle><author><name>Martin Holub</name></author><entry><title type="html">Using Deep Learning Libraries to Solve Stochastic Differential Equations</title><link href="http://www.martinholub.com//eth/code/2018/05/01/TheanoTensorflowSDE.html" rel="alternate" type="text/html" title="Using Deep Learning Libraries to Solve Stochastic Differential Equations" /><published>2018-05-01T16:42:00+02:00</published><updated>2018-05-01T16:42:00+02:00</updated><id>http://www.martinholub.com//eth/code/2018/05/01/TheanoTensorflowSDE</id><content type="html" xml:base="http://www.martinholub.com//eth/code/2018/05/01/TheanoTensorflowSDE.html">&lt;div class=&quot;img_row&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/dlbio_header.png&quot; alt=&quot;&quot; title=&quot;Using Deep Learning Libraries to Solve Stochastic Differential Equations&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
&lt;/div&gt;

&lt;p&gt;I am sure that most of you have heard about many of the deep learning libraries out there including &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;TensorFlow&lt;/code&gt;, &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;Theano&lt;/code&gt;, &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;Keras&lt;/code&gt; and &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;PyTorch&lt;/code&gt;. They facilitate building of layered and potentially complex neural network models for areas as diverse as automatic image captioning, speech recognition, and drug design. Undoubtedly and for better or worse, the deep learning field is riding on a wave of hype. The good thing about it is definitely that the deep learning libraries keep developing at astonishing pace. In this article, I will make use of these developments to implement two stochastic models from systems biology and solve them efficiently using the &lt;a href=&quot;http://www.cs.cornell.edu/courses/cs5740/2017sp/lectures/04-nn-compgraph.pdf&quot;&gt;computational graph paradigm&lt;/a&gt; of &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;Theano&lt;/code&gt; and &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;TensorFlow&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;generalized-diffusion-process&quot;&gt;Generalized diffusion process&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
In systems biology, quantitative finance, statistical physics and beyond, one often needs to solve a &lt;em&gt;stochastic differential equation (SDE)&lt;/em&gt; to obtain a trustworthy model of the dynamics of studied system. This equation often takes the form of a generalized diffusion process:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;dX(t) = A\big(X(t)\big) \cdot dt + B\big(X(t)\big) \cdot W(t) \tag{1}&lt;/script&gt;

&lt;p&gt;where the first term on the right-hand side is &lt;em&gt;drift term&lt;/em&gt; and the second term is &lt;em&gt;diffusion term&lt;/em&gt;. You can think about this as pouring few drops of dyed liquid into a river stream. The color will both be carried along with the current (drift) and, to great delight of all witnessing environmental activists, gradually spread across the river width (diffusion). Diffusion is a random process and this is why the model term includes \(W(t)\), &lt;a href=&quot;https://en.wikipedia.org/wiki/Wiener_process&quot;&gt;&lt;em&gt;Wiener process&lt;/em&gt;&lt;/a&gt; which follows normal distribution with mean \(0\) and variance \(\Delta t\) (white noise).&lt;/p&gt;

&lt;p&gt;In my &lt;a href=&quot;http://www.martinholub.com/eth/code/2018/04/15/stochsim.html&quot;&gt;previous blog post&lt;/a&gt;, I discussed modeling of biochemical reaction networks using the &lt;em&gt;chemical master equation&lt;/em&gt; (CME). One of its drawbacks was significant computational cost. It turns out that the equation \((1)\) is a &lt;em&gt;Fokker-Planck equation&lt;/em&gt;, continuous approximation of the system state dynamics (goodbye copy numbers, welcome back concentrations) and as such, it is cheaper to draw samples from.&lt;/p&gt;

&lt;h2 id=&quot;numerical-methods-for-sdes&quot;&gt;Numerical methods for SDEs&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
Solution to such type of equations can be found analytically only in rare (and usually pretty boring) cases. Luckily, we can adapt some of the workhorses of numerical mathematics for solutions of ordinary differential equations (ODEs) like &lt;a href=&quot;https://render.githubusercontent.com/view/ipynb?commit=db14f71f8b87cd9292cd15425de9bf9a512f4584&amp;amp;enc_url=68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6d617274696e686f6c75622f73746f636861737469632d70726f6365737365732d6b796f746f5578303039782f646231346637316638623837636439323932636431353432356465396266396135313266343538342f30312e6970796e62&amp;amp;nwo=martinholub%2Fstochastic-processes-kyotoUx009x&amp;amp;path=01.ipynb&amp;amp;repository_id=129758771&amp;amp;repository_type=Repository#Euler-Scheme&quot;&gt;&lt;em&gt;Euler&lt;/em&gt; or &lt;em&gt;Runge-Kutta&lt;/em&gt;&lt;/a&gt; methods to obtain a numerical solution.&lt;/p&gt;

&lt;h4 id=&quot;euler-method&quot;&gt;Euler method&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;
The &lt;strong&gt;Euler&lt;/strong&gt; method (also &lt;a href=&quot;https://en.wikipedia.org/wiki/Euler%E2%80%93Maruyama_method&quot;&gt;&lt;strong&gt;Euler-Maruyama&lt;/strong&gt;&lt;/a&gt;) is straightforward extension of the deterministic variant that you have likely already heard of. Namely, given initial state \(x(0)\) it obtains consecutive states with the following rule:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;x(t+1) - x(t) = A\big(x(t)\big) \delta t + B\big(x(t)\big) \xi \delta t \tag{2}&lt;/script&gt;

&lt;p&gt;with \(\delta t\)&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\delta t = \frac{t_{total}}{n_{steps}}&lt;/script&gt;

&lt;p&gt;being size of the time interval and \(\xi \) standard normal random numbers.&lt;/p&gt;

&lt;p&gt;Being as straightforward as it is, the method has &lt;a href=&quot;http://snovit.math.umu.se/~david/Des2010/em_basel.pdf&quot;&gt;strong convergence&lt;/a&gt; only of the order of \(\delta t ^{\frac{1}{2}}\) (this basically says that to get twice as small error you need to make your time steps four times that small), which is poor.&lt;/p&gt;

&lt;h4 id=&quot;4th-order-runge-kutta-method&quot;&gt;4th order Runge-Kutta method&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;
To come up with an improvement, we have to look no further than at the familiar &lt;a href=&quot;https://en.wikipedia.org/wiki/Runge%E2%80%93Kutta_method_(SDE)&quot;&gt;&lt;strong&gt;4th order Runge-Kutta&lt;/strong&gt;&lt;/a&gt; numerical scheme that offers strong convergence of the order of \(\delta t \). This is why I will be using this method in the following examples. The implementation here is slightly more involved, so checkout the code itself or the &lt;a href=&quot;http://people.sc.fsu.edu/~jburkardt/m_src/stochastic_rk/rk4_ti_step.m&quot;&gt;reference&lt;/a&gt; if you are interested in details.&lt;/p&gt;

&lt;h2 id=&quot;biological-system&quot;&gt;Biological system&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
Now that I have described the tools for solving the involved equations, let’s take a look at some examples of biological systems and model their dynamics!&lt;/p&gt;

&lt;h3 id=&quot;bistable-gene-circuit&quot;&gt;Bistable gene circuit&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
Let’s consider a system composed of two genes that express transcription factors that inhibit each other (see figure 1). Careful analysis shows that such system has three equilibria, one of which being unstable. As a result, if I initialize the system close to the unstable one, it will eventually tend to one of the two stable points. At these two equilibrium points, concentration of one of the species is low whereas of the other is high. (Think about it as trying to fit a clone of Chuck Norris into a room where the original one already resides. Any room would be too small to contain awesomeness of both and thus one needs to leave for the other to thrive.)&lt;/p&gt;

&lt;div class=&quot;img_row&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/bistable_circuit.png&quot; alt=&quot;&quot; title=&quot;Bistable Gene Circuit&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
(a) Schematics of bistable gene circuit with two genes. (b) Phase diagram showing several trajectories converging to either one of the two stable equilibria. Along the dashed line, concentrations of both expressed transcription factors are equal, corresponding to unstable equilibrium. [1]
&lt;/div&gt;

&lt;p&gt;The system is described by following pair of equations:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{x_1}{dt} = \frac{\beta_1}{1+(x_2 / K_2)^n} - \gamma x_1
\qquad
\frac{x_2}{dt} = \frac{\beta_2}{1+(x_1 / K_1)^n} - \gamma x_2
\tag{3}&lt;/script&gt;

&lt;p&gt;where \(\beta_i\), \(K_i\) and \(\gamma\) are some constants (which values are not really important as long as they provide for \(\dot{x}_i \approx 0\) around the the unstable equilibrium) and \(n\) is the &lt;em&gt;Hill coefficient&lt;/em&gt;. I will set \(n \geq 2\) which assures &lt;em&gt;cooperativity&lt;/em&gt; of binding sites (which serves the purpose of making the response of the system faster).&lt;/p&gt;

&lt;p&gt;Starting from unstable initial condition \(x_1 = x_2\), I let the noise (the Wiener process term in Fokker-Planck equation) determine which stable equilibrium will the system state find.&lt;/p&gt;

&lt;h3 id=&quot;the-repressilator&quot;&gt;The Repressilator&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
The “&lt;em&gt;repressilator&lt;/em&gt;” is the simplest model of genetic circuit that permits sustained oscillations. It is due to the pioneering work of Elowitz and Leibler (&lt;a href=&quot;http://www.elowitz.caltech.edu/publications/Repressilator.pdf&quot;&gt;Nature, 2000&lt;/a&gt;) that devised the circuit and implemented it in living bacteria. You may think of this as very simple system, but be aware that oscillatory patterns are indeed present in nature and crucial to how we as organisms function. Prominent example being &lt;a href=&quot;https://en.wikipedia.org/wiki/Circadian_rhythm&quot;&gt;circadian rhythm&lt;/a&gt; that makes us function optimally on 24-hour day with sleeping time during the night (elucidation of its mechanism was honored by &lt;a href=&quot;https://en.wikipedia.org/wiki/Nobel_Prize_in_Physiology_or_Medicine&quot;&gt;2017 Nobel prize&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;The model itself is not anyhow more complex than the one for bistable gene circuit. In fact, the repressilator (only one of multiple setups that permit oscillations), can be obtained from the bistable genetic circuit just by adding third repressing element. This gives the following set of equations:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{x_i}{dt} = \frac{\beta_i}{1+(x_j / K_j)^n} - \gamma x_i
\qquad
i = {1,2,3},\quad j = (i + 1)~\%~3
\tag{4}&lt;/script&gt;

&lt;div class=&quot;img_row&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/repressilator_full2.png&quot; alt=&quot;&quot; title=&quot;The Represillator Circuit&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
&lt;i&gt;Left&lt;/i&gt;: Schematics of the represillator circuit where three genes express transcription factors that repress each other in turn. &lt;i&gt;Right&lt;/i&gt;: An original simulation (Elowitz, 2000) showing oscillations of individual protein concentrations. Here with specific proteins cI, lacI, tetR replacing the general A, B, C notation. [1]
&lt;/div&gt;

&lt;h2 id=&quot;simulation-with-theano-and-tensorflow&quot;&gt;Simulation with Theano and TensorFlow&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
As I am using a stochastic method for modelling the two systems, I will have to generate many individual realizations to obtain good representation of the system’s behavior. In order to do this efficiently, I will leverage the deep learning libraries that come with optimized implementations of &lt;a href=&quot;https://en.wikipedia.org/wiki/Basic_Linear_Algebra_Subprograms&quot;&gt;BLAS&lt;/a&gt; (Basic Linear Algebra Subprograms) libraries. In particular, I can run tens of thousands of individual paths simultaneously in just one or two seconds and that on my clunky old laptop’s CPU. This is nice, especially if you need to debug your model and could use short development cycles or if your model comprises many species.&lt;/p&gt;

&lt;h4 id=&quot;selection-of-dl-library&quot;&gt;Selection of DL library&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;
When it comes to selection of a deep learning library, one has multiple choices. As here I am not building any complex deep learning model but rather want to use the low level functions, I have the main choice between &lt;a href=&quot;http://deeplearning.net/software/theano/&quot;&gt;&lt;em&gt;Theano&lt;/em&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.tensorflow.org/&quot;&gt;&lt;em&gt;TensorFlow&lt;/em&gt;&lt;/a&gt;. I find the former slightly more intuitive to use and this why it would be my initial choice. However, late 2017 its core developers at LISA/MILA lab at the University of Montreal have announced that they &lt;a href=&quot;https://groups.google.com/forum/#!msg/theano-users/7Poq8BZutbY/rNCIfvAEAwAJ&quot;&gt;cease its further development&lt;/a&gt;. This is why I also implemented a version that runs on &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;Tensorflow&lt;/code&gt;, currently the most popular deep learning framework (as per number of stars on &lt;a href=&quot;https://github.com&quot;&gt;github&lt;/a&gt;).&lt;/p&gt;

&lt;h3 id=&quot;building-and-running-a-computational-graph&quot;&gt;Building and running a computational graph&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
As I have already briefly mentioned in the introduction, the main point with using libraries like &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;Theano&lt;/code&gt; and &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;TensorFlow&lt;/code&gt; is that they implement different approach to computations compared to what you are probably used to. This can get pretty complicated so just keep in mind that working with &lt;em&gt;computational graphs&lt;/em&gt; in these libraries boils down to two phases: &lt;em&gt;building&lt;/em&gt; and &lt;em&gt;execution&lt;/em&gt;.&lt;/p&gt;

&lt;h4 id=&quot;building&quot;&gt;Building&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;
Specifically, both libraries first express the mathematical operations symbolically, in a &lt;strong&gt;computational graph&lt;/strong&gt; and optimize it for better performance and memory usage.  Computational graph (or &lt;em&gt;data flow graph&lt;/em&gt;) is a directed acyclic graph (&lt;a href=&quot;https://en.wikipedia.org/wiki/Directed_acyclic_graph&quot;&gt;DAG&lt;/a&gt;) in which nodes correspond to mathematical operations (“&lt;em&gt;Ops&lt;/em&gt;”) and edges correspond to flow of intermediary values in between the nodes. The graph structure defines the dependencies between the operations (each node’s output depends only on the node itself and its incoming edges) and thus their order of execution &lt;a href=&quot;http://u.cs.biu.ac.il/~yogo/nnlp.pdf&quot;&gt;[2]&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;execution&quot;&gt;Execution&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;
Once the graph has been built (which can take some time as here is where the optimization happens), computing the &lt;em&gt;forward pass&lt;/em&gt; through it is straightforward and usually quite swift. It amounts to traversing the nodes and computing the output of each node given the outputs of its predecessors. If parts of the graph are independent from the rest of the structure, they can be evaluated in parallel.&lt;/p&gt;

&lt;p&gt;Great, now you know the basics of working with computational graphs! Let’s go back to our examples from systems biology and build some models! Here, I will focus on the higher level implementation and results and omit the unnecessary details. Any time you feel like you need more context, you can grab the code in the &lt;a href=&quot;https://github.com/martinholub/demos-blogs-examples/tree/master/dl-bio&quot;&gt;github repo&lt;/a&gt; and have some fun with it.&lt;/p&gt;

&lt;h3 id=&quot;bistable-gene-circuit-with-theano&quot;&gt;Bistable gene circuit with Theano&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
First, I import the modules, including custom classes &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;Simulator&lt;/code&gt; and &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;ModelParameters&lt;/code&gt; (see full code on github), and set up some basic plotting parameters. Next, I initialize the &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;ModelParameters&lt;/code&gt; and &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;Simulator&lt;/code&gt; class objects with some parameters for the simulation&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load_ext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;autoreload&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;autoreload&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;theano&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sde_theano&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Simulator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ModelParameters&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.gridspec&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gridspec&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ggplot'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# use &quot;ggplot&quot; style for graphs&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pltparams&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'legend.fontsize'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'axes.labelsize'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'axes.titlesize'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             &lt;span class=&quot;s&quot;&gt;'xtick.labelsize'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ytick.labelsize'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'figure.figsize'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;7.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;7.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rcParams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pltparams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;theano&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__version__&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;'0.9.0.dev'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;total_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;num_samples&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5e4&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dt0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;switch&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ModelParameters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num_samples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model_type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dt0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dt0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                     &lt;span class=&quot;n&quot;&gt;t_end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nspecies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sde_solver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Simulator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;56&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rv_shape&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As introduced above, I first build a computational graph of the mathematical operations using &lt;a href=&quot;http://deeplearning.net/software/theano/library/scan.html&quot;&gt;&lt;code class=&quot;language-html highlighter-rouge&quot;&gt;theano.scan&lt;/code&gt;&lt;/a&gt; that is used for defining looping-like operations in the graph. Next, I compile it into a Python callable &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;sim&lt;/code&gt; with &lt;a href=&quot;http://deeplearning.net/software/theano/library/compile/function.html&quot;&gt;&lt;code class=&quot;language-html highlighter-rouge&quot;&gt;theano.function&lt;/code&gt;&lt;/a&gt; such that I can call it as any other function.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Define loop: symbolic description of the result and how to obtain it&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# x_out ... 3D Tensor, updates ... dict ,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;updates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;theano&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sde_solver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rk4_sde&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;#stepping function&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;outputs_info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;#output shape&lt;/span&gt;
                            &lt;span class=&quot;c&quot;&gt;# set taps to [-1], dont specify IC&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;non_sequences&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#fixed parameters&lt;/span&gt;
                            &lt;span class=&quot;n&quot;&gt;n_steps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nsteps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;       &lt;span class=&quot;c&quot;&gt;# number of iterations&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Compile symbolic graph representation into callable function&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;theano&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inputs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;# args to function&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;outputs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;        &lt;span class=&quot;c&quot;&gt;# symbolic outputs&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;givens&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# set initial value&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;updates&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;updates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;      &lt;span class=&quot;c&quot;&gt;# how to obtain the outputs&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;allow_input_downcast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;         &lt;span class=&quot;c&quot;&gt;# get time spent in ops&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Subsequently, I can execute the compiled graph as usual. I also use &lt;a href=&quot;http://www.graphviz.org/&quot;&gt;&lt;code class=&quot;language-html highlighter-rouge&quot;&gt;graphviz&lt;/code&gt;&lt;/a&gt; to obtain nice visual rendering of the nodes and edges in the graph and even the results of profiling the code execution.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;running sim...&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x_out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;diff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;done in&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;diff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;s at &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;diff&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num_samples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;s per path&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;running sim...
done in 3.0696229474693153 s at  6.13924589493863e-05 s per path
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;theano.printing&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pydotprint&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;theano.d3viz&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d3viz&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;pydotprint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;pics/switch_graph.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var_with_name_simple&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;d3viz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;pics/switch_graph.html&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;The output file is available at pics/switch_graph.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here is the resulting visualization and here you can check the interactive &lt;a href=&quot;/img/switch_graph.html&quot; target=&quot;_blank&quot;&gt;&lt;code class=&quot;language-html highlighter-rouge&quot;&gt;html&lt;/code&gt;&lt;/a&gt; output.&lt;/p&gt;

&lt;div class=&quot;img_row&quot;&gt;
    &lt;a href=&quot;/img/switch_graph.png&quot; target=&quot;_blank&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/switch_graph.png&quot; alt=&quot;Graph Switch&quot; title=&quot;Graph Switch&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
Image of the computational graph with nodes representing mathematical operations or variables and edges representing flow of data (&quot;tensors&quot;).
&lt;/div&gt;

&lt;p&gt;Next, let’s plot the results:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;## for model SWITCH , nspecies = 2&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;downsample_factor_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# show 10 points per time unit, here no downs.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;downsample_factor_p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num_samples&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;## show every 50th path&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linspace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nsteps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;downsample_factor_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# time axis&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;gs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gridspec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GridSpec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# plot just first of the two species&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;downsample_factor_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;downsample_factor_p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;bins&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linspace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;normed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;histtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'t = 1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;normed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;histtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'t = 2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;normed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;histtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'t = 9'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;img_row&quot; style=&quot;width: 80%;&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/switch_out.png&quot; alt=&quot;&quot; title=&quot;Switch Plots&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
&lt;/div&gt;

&lt;p&gt;In the plot, you can clearly see that the system follows the announced behavior. The concentration of any of the two species (just one shown) starts in the unstable equilibrium  and, based on the stochastic input, it evolves either to the high or the low stable equilibrium state. In the lower panel, you can see how the distribution of the concentration values changes in time. The example may seem trivial, but this is &lt;a href=&quot;https://doi.org/10.1016/j.cell.2011.01.030&quot;&gt;indeed one of the mechanisms of cellular differentiation&lt;/a&gt; permitting nongenetic cellular diversity. All things being equal, whether cell takes up fate A or B can be matter of pure chance (given our current level of understanding of determinism in biological systems :) )&lt;/p&gt;

&lt;h3 id=&quot;the-repressilator-with-tensorflow&quot;&gt;The Repressilator with TensorFlow&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
For the repressilator model, I will make use of &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;TensorFlow&lt;/code&gt;’s implementation of &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/scan&quot;&gt;&lt;code class=&quot;language-html highlighter-rouge&quot;&gt;scan&lt;/code&gt;&lt;/a&gt; function. Similar to the &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;Theano&lt;/code&gt;’s version, &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;scan&lt;/code&gt; allows to define loops in the computational graph paradigm.
First, we again import the required modules. Note that here I have replaced the custom &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;sde_theano&lt;/code&gt; module with &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;sde_tflow&lt;/code&gt; (full code on github). I then initialize instances of the custom classes &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;ModelParameters&lt;/code&gt; and &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;Simulator&lt;/code&gt; with some parameters for the simulation.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load_ext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;autoreload&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;autoreload&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tensorflow&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sde_tflow&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Simulator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ModelParameters&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.gridspec&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gridspec&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ggplot'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# use &quot;ggplot&quot; style for graphs&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pltparams&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'legend.fontsize'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'axes.labelsize'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'axes.titlesize'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             &lt;span class=&quot;s&quot;&gt;'xtick.labelsize'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ytick.labelsize'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'figure.figsize'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;7.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;7.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rcParams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pltparams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__version__&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;'1.5.1'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;total_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;num_samples&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.5e4&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dt0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;rep&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ModelParameters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_samples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model_type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                      &lt;span class=&quot;n&quot;&gt;dt0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dt0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t_end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sde_solver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Simulator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;56&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next, I build the computational graph and let &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;TensorFlow&lt;/code&gt; optimize its structure. As I am using similar functionality as &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;Theano&lt;/code&gt; the call does not differ much. I supply the function to evaluate at each execution, initial state and elements to loop over.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Define loop: symbolic description of the result and how to obtain it&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x_scan&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sde_solver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rk4_sde&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;        &lt;span class=&quot;c&quot;&gt;# stepping function&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;elems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sde_solver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rv_n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;     &lt;span class=&quot;c&quot;&gt;# inputs for all steps&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;initializer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sde_solver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# initial condition&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With the graph built, I proceed to its execution (the forward pass through it). In &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;TensorFlow&lt;/code&gt;, you run a graph in a &lt;a href=&quot;https://www.tensorflow.org/programmers_guide/graphs#executing_a_graph_in_a_wzxhzdk132wzxhzdk133tfsessionwzxhzdk134wzxhzdk135&quot;&gt;&lt;code class=&quot;language-html highlighter-rouge&quot;&gt;tf.Session()&lt;/code&gt;&lt;/a&gt; that encapsulates the environment the operations and tensors live in. Since a &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;tf.Session&lt;/code&gt; owns a physical  resources, it is recommendable to use it as a context manager (in a &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;with&lt;/code&gt; block) that automatically closes the session at the exit of the block.&lt;/p&gt;

&lt;p&gt;Note that I also write the graph that is run in the session to a file in &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;log&lt;/code&gt; folder. This graph can then be interactively visualized with &lt;a href=&quot;https://www.tensorflow.org/programmers_guide/summaries_and_tensorboard&quot;&gt;&lt;code class=&quot;language-html highlighter-rouge&quot;&gt;TensorBoard&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;running sim...&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# open a Session&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# Write the graph to file&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FileWriter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;log/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x_out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_scan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# execute the graph&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# close the FileWriter&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;diff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;done in&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;diff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;s at &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;diff&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num_samples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;s per path&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;running sim...
done in 3.599450070369931 s at  0.00014397800281479723 s per path
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;## for model REPRESILLATOR&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;downsample_factor_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dt0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#always show 10 points per time unit&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;downsample_factor_p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num_samples&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linspace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nsteps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;downsample_factor_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;gs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gridspec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GridSpec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;width_ratios&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;downsample_factor_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;downsample_factor_p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;downsample_factor_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;downsample_factor_p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x_out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;downsample_factor_t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;downsample_factor_p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,:,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;normed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;histtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,:,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;normed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;histtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subplot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,:,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;normed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;histtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;img_row&quot; style=&quot;width: 80%;&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/repressilator_out.png&quot; alt=&quot;&quot; title=&quot;Repressilator Plots&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
&lt;/div&gt;

&lt;p&gt;Here are the results. You can nicely see the oscillatory pattern that however slowly degrades in time (this makes sense as the noise makes the paths more different). The paths for individual species are phase shifted such that each of the three reaches its maximum at different time. You can even save the histograms at couple of time steps and create an animation like this:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;## Save plots for animation&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;bins&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linspace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x_out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,:,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;normed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;histtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'bar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xlim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ylim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;savefig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pics/tf/rep&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.png&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;img_row&quot; style=&quot;width: 80%;&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/repressilator_anim.gif&quot; alt=&quot;Repressilator Animation&quot; title=&quot;Repressilator Animation&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
Animation showing temporal evolution of concentrations of protein B in the repressilator model.
&lt;/div&gt;

&lt;p&gt;And here is a screenshot from the &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;TensorBoard&lt;/code&gt; application. Unfortunately it is quite crowded and thus not well readable (it is much better inside &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;TensorBoard&lt;/code&gt; as the graph is interactive).&lt;/p&gt;

&lt;div class=&quot;img_row&quot;&gt;
    &lt;a href=&quot;/img/tensorboard_repressilator.png&quot; target=&quot;_blank&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/tensorboard_repressilator.png&quot; alt=&quot;&quot; title=&quot;Tensorboard Represillator&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
Image of the computational graph with nodes representing mathematical operations or variables and edges representing flow of data (&quot;tensors&quot;) as rendered by TensorBoard.
&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
In this post, I have shown you how to efficiently solve stochastic differential equations using computational graph approach implemented in deep learning libraries like &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;Theano&lt;/code&gt; or &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;TensorFlow&lt;/code&gt;. You can now develop these examples further and build a stochastic model of your own or even implement a neural network model in &lt;a href=&quot;https://caffe2.ai/docs/applications-of-deep-learning.html&quot;&gt;virtually any domain of your interest&lt;/a&gt;. If you will do so, let me know, I am interested to hear about your experience.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;[1]: Del Vecchio, D., Murray, R. M.; Biomolecular Feedback Systems&lt;br /&gt;
  [2]: Goldber, Y.; A Primer on Neural Network Models for Natural Language Processing&lt;/p&gt;</content><author><name>Martin Holub</name></author><category term="ETH" /><category term="projects" /><category term="code" /><summary type="html">I am sure that most of you have heard about many of the deep learning libraries out there including TensorFlow, Theano, Keras and PyTorch. They facilitate building of layered and potentially complex neural network models for areas as diverse as automatic image captioning, speech recognition, and drug design. Undoubtedly and for better or worse, the deep learning field is riding on a wave of hype. The good thing about it is definitely that the deep learning libraries keep developing at astonishing pace. In this article, I will make use of these developments to implement two stochastic models from systems biology and solve them efficiently using the computational graph paradigm of Theano and TensorFlow. Generalized diffusion process In systems biology, quantitative finance, statistical physics and beyond, one often needs to solve a stochastic differential equation (SDE) to obtain a trustworthy model of the dynamics of studied system. This equation often takes the form of a generalized diffusion process: where the first term on the right-hand side is drift term and the second term is diffusion term. You can think about this as pouring few drops of dyed liquid into a river stream. The color will both be carried along with the current (drift) and, to great delight of all witnessing environmental activists, gradually spread across the river width (diffusion). Diffusion is a random process and this is why the model term includes \(W(t)\), Wiener process which follows normal distribution with mean \(0\) and variance \(\Delta t\) (white noise). In my previous blog post, I discussed modeling of biochemical reaction networks using the chemical master equation (CME). One of its drawbacks was significant computational cost. It turns out that the equation \((1)\) is a Fokker-Planck equation, continuous approximation of the system state dynamics (goodbye copy numbers, welcome back concentrations) and as such, it is cheaper to draw samples from. Numerical methods for SDEs Solution to such type of equations can be found analytically only in rare (and usually pretty boring) cases. Luckily, we can adapt some of the workhorses of numerical mathematics for solutions of ordinary differential equations (ODEs) like Euler or Runge-Kutta methods to obtain a numerical solution. Euler method The Euler method (also Euler-Maruyama) is straightforward extension of the deterministic variant that you have likely already heard of. Namely, given initial state \(x(0)\) it obtains consecutive states with the following rule: with \(\delta t\) being size of the time interval and \(\xi \) standard normal random numbers. Being as straightforward as it is, the method has strong convergence only of the order of \(\delta t ^{\frac{1}{2}}\) (this basically says that to get twice as small error you need to make your time steps four times that small), which is poor. 4th order Runge-Kutta method To come up with an improvement, we have to look no further than at the familiar 4th order Runge-Kutta numerical scheme that offers strong convergence of the order of \(\delta t \). This is why I will be using this method in the following examples. The implementation here is slightly more involved, so checkout the code itself or the reference if you are interested in details. Biological system Now that I have described the tools for solving the involved equations, let’s take a look at some examples of biological systems and model their dynamics! Bistable gene circuit Let’s consider a system composed of two genes that express transcription factors that inhibit each other (see figure 1). Careful analysis shows that such system has three equilibria, one of which being unstable. As a result, if I initialize the system close to the unstable one, it will eventually tend to one of the two stable points. At these two equilibrium points, concentration of one of the species is low whereas of the other is high. (Think about it as trying to fit a clone of Chuck Norris into a room where the original one already resides. Any room would be too small to contain awesomeness of both and thus one needs to leave for the other to thrive.) (a) Schematics of bistable gene circuit with two genes. (b) Phase diagram showing several trajectories converging to either one of the two stable equilibria. Along the dashed line, concentrations of both expressed transcription factors are equal, corresponding to unstable equilibrium. [1] The system is described by following pair of equations: where \(\beta_i\), \(K_i\) and \(\gamma\) are some constants (which values are not really important as long as they provide for \(\dot{x}_i \approx 0\) around the the unstable equilibrium) and \(n\) is the Hill coefficient. I will set \(n \geq 2\) which assures cooperativity of binding sites (which serves the purpose of making the response of the system faster). Starting from unstable initial condition \(x_1 = x_2\), I let the noise (the Wiener process term in Fokker-Planck equation) determine which stable equilibrium will the system state find. The Repressilator The “repressilator” is the simplest model of genetic circuit that permits sustained oscillations. It is due to the pioneering work of Elowitz and Leibler (Nature, 2000) that devised the circuit and implemented it in living bacteria. You may think of this as very simple system, but be aware that oscillatory patterns are indeed present in nature and crucial to how we as organisms function. Prominent example being circadian rhythm that makes us function optimally on 24-hour day with sleeping time during the night (elucidation of its mechanism was honored by 2017 Nobel prize). The model itself is not anyhow more complex than the one for bistable gene circuit. In fact, the repressilator (only one of multiple setups that permit oscillations), can be obtained from the bistable genetic circuit just by adding third repressing element. This gives the following set of equations: Left: Schematics of the represillator circuit where three genes express transcription factors that repress each other in turn. Right: An original simulation (Elowitz, 2000) showing oscillations of individual protein concentrations. Here with specific proteins cI, lacI, tetR replacing the general A, B, C notation. [1] Simulation with Theano and TensorFlow As I am using a stochastic method for modelling the two systems, I will have to generate many individual realizations to obtain good representation of the system’s behavior. In order to do this efficiently, I will leverage the deep learning libraries that come with optimized implementations of BLAS (Basic Linear Algebra Subprograms) libraries. In particular, I can run tens of thousands of individual paths simultaneously in just one or two seconds and that on my clunky old laptop’s CPU. This is nice, especially if you need to debug your model and could use short development cycles or if your model comprises many species. Selection of DL library When it comes to selection of a deep learning library, one has multiple choices. As here I am not building any complex deep learning model but rather want to use the low level functions, I have the main choice between Theano and TensorFlow. I find the former slightly more intuitive to use and this why it would be my initial choice. However, late 2017 its core developers at LISA/MILA lab at the University of Montreal have announced that they cease its further development. This is why I also implemented a version that runs on Tensorflow, currently the most popular deep learning framework (as per number of stars on github). Building and running a computational graph As I have already briefly mentioned in the introduction, the main point with using libraries like Theano and TensorFlow is that they implement different approach to computations compared to what you are probably used to. This can get pretty complicated so just keep in mind that working with computational graphs in these libraries boils down to two phases: building and execution. Building Specifically, both libraries first express the mathematical operations symbolically, in a computational graph and optimize it for better performance and memory usage. Computational graph (or data flow graph) is a directed acyclic graph (DAG) in which nodes correspond to mathematical operations (“Ops”) and edges correspond to flow of intermediary values in between the nodes. The graph structure defines the dependencies between the operations (each node’s output depends only on the node itself and its incoming edges) and thus their order of execution [2]. Execution Once the graph has been built (which can take some time as here is where the optimization happens), computing the forward pass through it is straightforward and usually quite swift. It amounts to traversing the nodes and computing the output of each node given the outputs of its predecessors. If parts of the graph are independent from the rest of the structure, they can be evaluated in parallel. Great, now you know the basics of working with computational graphs! Let’s go back to our examples from systems biology and build some models! Here, I will focus on the higher level implementation and results and omit the unnecessary details. Any time you feel like you need more context, you can grab the code in the github repo and have some fun with it. Bistable gene circuit with Theano First, I import the modules, including custom classes Simulator and ModelParameters (see full code on github), and set up some basic plotting parameters. Next, I initialize the ModelParameters and Simulator class objects with some parameters for the simulation %load_ext autoreload %autoreload 2 import theano import numpy as np import matplotlib.pyplot as plt import time from sde_theano import Simulator, ModelParameters import matplotlib.gridspec as gridspec plt.style.use('ggplot') # use &quot;ggplot&quot; style for graphs pltparams = {'legend.fontsize':14,'axes.labelsize':18,'axes.titlesize':18, 'xtick.labelsize':12,'ytick.labelsize':12,'figure.figsize':(7.5,7.5),} plt.rcParams.update(pltparams) theano.__version__.split(&quot;-&quot;)[0] '0.9.0.dev' total_time = 9 num_samples = 5e4 dt0 = 0.1 model = &quot;switch&quot; mp = ModelParameters(num_samples, model_type = model, dt0 = dt0, t_end = total_time, nspecies = 2) sde_solver = Simulator(seed = 56, rv_shape = mp.x0.shape) As introduced above, I first build a computational graph of the mathematical operations using theano.scan that is used for defining looping-like operations in the graph. Next, I compile it into a Python callable sim with theano.function such that I can call it as any other function. # Define loop: symbolic description of the result and how to obtain it # x_out ... 3D Tensor, updates ... dict , (x_out,updates)=theano.scan(fn = sde_solver.rk4_sde, #stepping function outputs_info = [mp.x], #output shape # set taps to [-1], dont specify IC non_sequences = mp.params, #fixed parameters n_steps = mp.nsteps) # number of iterations # Compile symbolic graph representation into callable function sim=theano.function(inputs=mp.params, # args to function outputs=x_out, # symbolic outputs givens={mp.x:mp.x0}, # set initial value updates=updates, # how to obtain the outputs allow_input_downcast=True, profile=True) # get time spent in ops Subsequently, I can execute the compiled graph as usual. I also use graphviz to obtain nice visual rendering of the nodes and edges in the graph and even the results of profiling the code execution. print(&quot;running sim...&quot;) start = time.clock() x_out = sim(*mp.params0) diff = (time.clock() - start) print(&quot;done in&quot;, diff, &quot;s at &quot;, diff/num_samples, &quot;s per path&quot;) running sim... done in 3.0696229474693153 s at 6.13924589493863e-05 s per path from theano.printing import pydotprint from theano.d3viz import d3viz pydotprint(sim, &quot;pics/switch_graph.png&quot;, var_with_name_simple=True) d3viz(sim, &quot;pics/switch_graph.html&quot;) The output file is available at pics/switch_graph.png Here is the resulting visualization and here you can check the interactive html output. Image of the computational graph with nodes representing mathematical operations or variables and edges representing flow of data (&quot;tensors&quot;). Next, let’s plot the results: ## for model SWITCH , nspecies = 2 downsample_factor_t = int(0.1/dt0) # show 10 points per time unit, here no downs. downsample_factor_p = int(num_samples//50) ## show every 50th path t = np.linspace(0, total_time, mp.nsteps//downsample_factor_t) # time axis gs = gridspec.GridSpec(2, 1) plt.subplot(gs[0, 0]) # plot just first of the two species plt.plot(t, x_out[::downsample_factor_t, ::downsample_factor_p, 0]) plt.subplot(gs[1, 0]) bins = np.linspace(0, 1.2, 50) plt.hist(x_out[int(1/dt0), :, 0], bins, alpha = 0.5, normed=True, histtype='bar', label=['t = 1']) plt.hist(x_out[int(2/dt0), :, 0], bins, alpha = 0.5, normed=True, histtype='bar', label=['t = 2']) plt.hist(x_out[-1, :, 0], bins, alpha = 0.5, normed=True, histtype='bar', label=['t = 9']) plt.legend() plt.show() In the plot, you can clearly see that the system follows the announced behavior. The concentration of any of the two species (just one shown) starts in the unstable equilibrium and, based on the stochastic input, it evolves either to the high or the low stable equilibrium state. In the lower panel, you can see how the distribution of the concentration values changes in time. The example may seem trivial, but this is indeed one of the mechanisms of cellular differentiation permitting nongenetic cellular diversity. All things being equal, whether cell takes up fate A or B can be matter of pure chance (given our current level of understanding of determinism in biological systems :) ) The Repressilator with TensorFlow For the repressilator model, I will make use of TensorFlow’s implementation of scan function. Similar to the Theano’s version, scan allows to define loops in the computational graph paradigm. First, we again import the required modules. Note that here I have replaced the custom sde_theano module with sde_tflow (full code on github). I then initialize instances of the custom classes ModelParameters and Simulator with some parameters for the simulation. %load_ext autoreload %autoreload 2 import tensorflow as tf import numpy as np import matplotlib.pyplot as plt from sde_tflow import Simulator, ModelParameters import matplotlib.gridspec as gridspec import time plt.style.use('ggplot') # use &quot;ggplot&quot; style for graphs pltparams = {'legend.fontsize':14,'axes.labelsize':18,'axes.titlesize':18, 'xtick.labelsize':12,'ytick.labelsize':12,'figure.figsize':(7.5,7.5),} plt.rcParams.update(pltparams) tf.__version__ '1.5.1' total_time = 9 num_samples = 2.5e4 dt0 = 0.1 model = &quot;rep&quot; mp = ModelParameters( num_samples, model_type = model, dt0 = dt0, t_end = total_time) sde_solver = Simulator(mp, seed = 56) Next, I build the computational graph and let TensorFlow optimize its structure. As I am using similar functionality as Theano the call does not differ much. I supply the function to evaluate at each execution, initial state and elements to loop over. # Define loop: symbolic description of the result and how to obtain it x_scan = tf.scan(fn = sde_solver.rk4_sde, # stepping function elems = sde_solver.rv_n, # inputs for all steps initializer = sde_solver.x0) # initial condition With the graph built, I proceed to its execution (the forward pass through it). In TensorFlow, you run a graph in a tf.Session() that encapsulates the environment the operations and tensors live in. Since a tf.Session owns a physical resources, it is recommendable to use it as a context manager (in a with block) that automatically closes the session at the exit of the block. Note that I also write the graph that is run in the session to a file in log folder. This graph can then be interactively visualized with TensorBoard. print(&quot;running sim...&quot;) start = time.clock() with tf.Session() as sess: # open a Session # Write the graph to file writer = tf.summary.FileWriter(&quot;log/&quot;, sess.graph) x_out = sess.run(x_scan) # execute the graph writer.close() # close the FileWriter diff = (time.clock() - start) print(&quot;done in&quot;, diff, &quot;s at &quot;, diff/num_samples, &quot;s per path&quot;) running sim... done in 3.599450070369931 s at 0.00014397800281479723 s per path ## for model REPRESILLATOR downsample_factor_t = int(0.1/dt0) #always show 10 points per time unit downsample_factor_p = int(num_samples//50) t = np.linspace(0, total_time, mp.nsteps//downsample_factor_t) gs = gridspec.GridSpec(3, 2, width_ratios=[4,1]) plt.subplot(gs[0, 0]) plt.plot(t, x_out[::downsample_factor_t, ::downsample_factor_p, 0]) plt.subplot(gs[1, 0]) plt.plot(t, x_out[::downsample_factor_t, ::downsample_factor_p, 1]) plt.subplot(gs[2, 0]) plt.plot(t, x_out[::downsample_factor_t, ::downsample_factor_p, 2]) plt.subplot(gs[0, 1]) plt.hist(x_out[-1,:,0], 30, normed=True, histtype='bar') plt.subplot(gs[1, 1]) plt.hist(x_out[-1,:,1], 30, normed=True, histtype='bar') plt.subplot(gs[2, 1]) plt.hist(x_out[-1,:,2], 30, normed=True, histtype='bar') plt.show() Here are the results. You can nicely see the oscillatory pattern that however slowly degrades in time (this makes sense as the noise makes the paths more different). The paths for individual species are phase shifted such that each of the three reaches its maximum at different time. You can even save the histograms at couple of time steps and create an animation like this: ## Save plots for animation plt.clf() bins = np.linspace(0.1 , 1.1, 50) for i in np.arange(x_out.shape[0]): plt.hist(x_out[i,:,1], bins, normed=True, histtype='bar') plt.xlim([0.1, 1.1]) plt.ylim([0, 10]) plt.savefig(&quot;pics/tf/rep&quot;+str(i)+&quot;.png&quot;) plt.clf() Animation showing temporal evolution of concentrations of protein B in the repressilator model. And here is a screenshot from the TensorBoard application. Unfortunately it is quite crowded and thus not well readable (it is much better inside TensorBoard as the graph is interactive). Image of the computational graph with nodes representing mathematical operations or variables and edges representing flow of data (&quot;tensors&quot;) as rendered by TensorBoard. Conclusion In this post, I have shown you how to efficiently solve stochastic differential equations using computational graph approach implemented in deep learning libraries like Theano or TensorFlow. You can now develop these examples further and build a stochastic model of your own or even implement a neural network model in virtually any domain of your interest. If you will do so, let me know, I am interested to hear about your experience. References [1]: Del Vecchio, D., Murray, R. M.; Biomolecular Feedback Systems [2]: Goldber, Y.; A Primer on Neural Network Models for Natural Language Processing</summary></entry><entry><title type="html">Stochastic Modeling in Biology</title><link href="http://www.martinholub.com//eth/code/2018/04/15/stochsim.html" rel="alternate" type="text/html" title="Stochastic Modeling in Biology" /><published>2018-04-15T10:42:00+02:00</published><updated>2018-04-15T10:42:00+02:00</updated><id>http://www.martinholub.com//eth/code/2018/04/15/stochsim</id><content type="html" xml:base="http://www.martinholub.com//eth/code/2018/04/15/stochsim.html">&lt;div class=&quot;img_row&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/stochsim_header2.png&quot; alt=&quot;&quot; title=&quot;header_img&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
&lt;a href=&quot;http://www.elowitz.caltech.edu/&quot; target=&quot;_blank&quot;&gt;Source&lt;/a&gt;
&lt;/div&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
Genetically engineered cells and organisms are being used to produce array of commonplace commercial products including &lt;a href=&quot;http://www.madehow.com/Volume-7/Insulin.html&quot;&gt;drugs&lt;/a&gt; and &lt;a href=&quot;https://www.bio.org/articles/current-uses-synthetic-biology&quot;&gt;materials&lt;/a&gt;. Biological engineering is being employed to enhance nutrition content of various foods and yield of crops. Recently, &lt;a href=&quot;https://en.wikipedia.org/wiki/Cultured_meat&quot;&gt;lab-grown meat&lt;/a&gt; represents an interesting alternative to traditional production and &lt;a href=&quot;https://www.nature.com/news/2010/100120/full/463288a.html&quot;&gt;synthetic biology&lt;/a&gt; is being &lt;a href=&quot;https://www.ginkgobioworks.com/2018/04/11/creative-in-residence/&quot;&gt;explored even by artists&lt;/a&gt;.  These successes are, however, just baby steps in face of the richness and complexity of “products” nature is so adept in engineering. Like what you ask? Like YOU, for example.&lt;/p&gt;

&lt;p&gt;In the meantime, development is ongoing at rapid pace. We are getting finer understanding of molecular-scale processes by which the life is implemented and by extension, we are becoming more adept in exercising control over them. Biology is becoming easier to analyze and design using established engineering approaches. At different system levels, from molecular to cellular to populational, mathematical modeling and abstraction in design are becoming possible. (&lt;em&gt;If this abstraction thing is too abstract for you, think about this as if in your Arduino project (like &lt;a href=&quot;http://www.instructables.com/id/The-EyeWriter-20/&quot;&gt;this one&lt;/a&gt;) you had to build and debug the microcontroller first. Before you could do that, you would have to do the same for all the resistors, transistors and other elements of the board. Instead, and luckily, you just need to have the board shipped and plug it into your laptotp to boot it up. You don’t have to think of all the possibly very intricate details that make it work and can focus on building some application on top of it. This is the power of abstraction in design when put to work.&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;This is exciting, fun and hugely relevant because, take it from &lt;del&gt;Elon Musk&lt;/del&gt; Steve Jobs:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;[…] the biggest innovations of the 21st century will be at the intersection of biology and technology.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Of course this topic is about as broad as an average statement of a politician so I will not try to cover it all here (&lt;em&gt;If you are interested in some slightly more scientific peek into the topic, a good place to start is &lt;a href=&quot;https://www.youtube.com/watch?v=lNttxYdGHs4&quot;&gt;this video&lt;/a&gt; where Chris Voigt first gives general of the field and later explains his idea of programming genetic circuits the way we program computers&lt;/em&gt;), rather I want to focus on the mathematical modeling part. I find it really nice how this helps me to think about the biological process in more rigorous and engineering way and believe you may benefit from this as well.&lt;/p&gt;

&lt;p&gt;First, I will give you lightweight introduction to some theory behind and then show some code I wrote for simulating simple transcription and translation processes. It is all on &lt;a href=&quot;https://github.com/martinholub/gillespie-notebook&quot;&gt;github&lt;/a&gt; so feel free to grab it afterwards to have some fun with it.&lt;/p&gt;

&lt;h2 id=&quot;biochemical-reaction-systems&quot;&gt;Biochemical Reaction Systems&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;img_row&quot;&gt;
    &lt;a href=&quot;/img/copy_numbers.png&quot; target=&quot;_blank&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/copy_numbers.png&quot; alt=&quot;Copy Numbers&quot; title=&quot;Copy Numbers&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
Illustrative example of copy numbers at different levels of biochemical hierarchy. Low copy numbers, i.e. these at genome to proteome levels, are affected by stochasticity and cannot be faithfully modeled using Ordinary Differential Equation (ODE) models.
&lt;/div&gt;

&lt;p&gt;In what follows we are looking at distinct biochemical species present in a cell. Additionally, these species are present in low &lt;a href=&quot;https://medical-dictionary.thefreedictionary.com/copy+number&quot;&gt;copy numbers&lt;/a&gt; that are significantly influenced by stochastic (random) events. You can think about this as having a big parking lot under your kitchen window (poor you) and not having a calendar. In the morning when you make your breakfast, you can very reliably say if it is a normal working day or a public holiday based on occupancy of the parking lot. Conversely, you friend, who has just two parking places within sight of his kitchen window cannot make a good guess of whether it is a public holiday or not based on if the two spots are empty. This could just as well be because somebody’s child got sick (which is as random event as it gets).&lt;/p&gt;

&lt;p&gt;In biology, there are multiple sources of such randomness, including external environmental perturbations and inherent stochasticity stemming from statistical thermodynamics of molecular reactions. To account for this, we leave the familiar realm of concentrations and enter the world of single-molecule counts. In mathematical terms this means, that instead of writing differential equations for average concentration levels, we keep track of individual reaction events that have some probability of occurring on some time interval. Conceptually, the modeling framework is depicted in the following figure:&lt;/p&gt;

&lt;div class=&quot;img_row&quot;&gt;
    &lt;a href=&quot;/img/modelling_framework.png&quot; target=&quot;_blank&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/modelling_framework.png&quot; alt=&quot;Modeling Framework&quot; title=&quot;Modeling Framework&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
Conceptual modeling framework for biochemical reaction systems. &lt;it&gt;TX&lt;/it&gt; and &lt;it&gt;TL&lt;/it&gt; refer to transcription and translation respectively. (&lt;a href=&quot;http://www.cds.caltech.edu/~murray/BFSwiki/index.php/Main_Page&quot; target=&quot;_blank&quot;&gt;Source&lt;/a&gt;)
&lt;/div&gt;

&lt;h3 id=&quot;the-chemical-master-equation&quot;&gt;The Chemical Master Equation&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;We want to resolve dynamics of a system at very fine scale both in space and time. Further, the system does not have equilibrium configuration. It turns out that we are interested in probability $P(\mathbf{q}, t)$ of a system to be in &lt;em&gt;microstate&lt;/em&gt; $\mathbf{q}$ at time $t$. Microstate is somewhat elusive term, but in the case of &lt;em&gt;chemical reaction systems&lt;/em&gt; this is just a vector of number of molecules of each species in the system.&lt;/p&gt;

&lt;p&gt;Next, we assume that there are $M$ reactions $R_j$, $j = 1, …, M$ in total and that $\boldsymbol{\nu}_j$ is a change in state (i.e. change in number of molecules, e.g. $\pm 1$ for unimolecular reaction) associated with reaction $R_j$. If we look at sufficiently small time interval, we can write $a_j (\mathbf{q})dt$ for the probability that a reaction $j$ “fires” in interval $dt$, given that current microstate of the system is $\mathbf{q}$. The $a_j (\mathbf{q})$ is called &lt;em&gt;propensity function&lt;/em&gt; and we have dropped the time dependence as we assume this is accounted for by the dependence on microstate (that itself changes in time).&lt;/p&gt;

&lt;p&gt;The above definitions allow us to calculate the change of the probability distribution function over an interval $dt$:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{array}{lcl}
P(\mathbf{q}, t + dt ~|~ \mathbf{q}_0, t_0) &amp; = &amp;
P(\mathbf{q}, t ~|~ \mathbf{q}_0, t_0)\prod_{j=1}^{M}{(1-a_j(\mathbf{q})dt)} \\
&amp; + &amp; \prod_{j=1}^{M}{P(\mathbf{q} - \boldsymbol{\nu}_j, t ~|~\mathbf{q}_0, t_0)(a_j(\mathbf{q} -\boldsymbol{\nu}_j)dt)} \\
&amp; = &amp; P(\mathbf{q}, t ~|~ \mathbf{q}_0, t_0) \\
&amp; + &amp; \sum_{j=1}^{M}{\bigg(P(\mathbf{q} - \boldsymbol{\nu}_j, t ~|~\mathbf{q}_0, t_0)a_j(\mathbf{q} -\boldsymbol{\nu}_j) - P(\mathbf{q}, t ~|~ \mathbf{q}_0, t_0)a_j(\mathbf{q})\bigg)dt} \\
&amp; + &amp; \mathscr{O}(dt^{2})\\
\end{array} %]]&gt;&lt;/script&gt;

&lt;p&gt;This may look scary but it really just states that the probability to get to state $\mathbf{q}$ is equal to probability that we are already in that state + the probability that we are one reaction away from that state and the matching reaction fires in the interval $dt$.
After dropping higher order terms in $dt$ and simplifying the notation we get:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{\partial P}{\partial t} (\mathbf{q}, t) = \sum_{j=1}^{M}{\bigg(P(\mathbf{q} - \boldsymbol{\nu}_j, t)a_j(\mathbf{q} -\boldsymbol{\nu}_j) - P(\mathbf{q}, t)a_j(\mathbf{q})\bigg)}.&lt;/script&gt;

&lt;p&gt;This is the &lt;em&gt;chemical master equation (CME)&lt;/em&gt;, which is an example of &lt;em&gt;forward Kolmogorov equation&lt;/em&gt; for a discrete state, continuous time random process (phew, quite some terminology here). The discrete state here is described by the vector $\mathbf{q}$ with numbers of molecules of species in the system. To be able to calculate anything with it we will need to specify the initial condition $P(\mathbf{q}_0, t_0)$. To help you put this into bigger picture, see the two following figures that show where the CME is positioned with respect to other (more approximate) approaches to model biological system dynamics.&lt;/p&gt;

&lt;div class=&quot;img_row&quot;&gt;
    &lt;a href=&quot;/img/modeling_approaches1.png&quot; target=&quot;_blank&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/modeling_approaches1.png&quot; alt=&quot;Modeling Approaches 1&quot; title=&quot;Modeling Approaches 1&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
Different methods for modeling biochemical reaction systems. (&lt;a href=&quot;http://www.cds.caltech.edu/~murray/BFSwiki/index.php/Main_Page&quot; target=&quot;_blank&quot;&gt;Source&lt;/a&gt;)
&lt;/div&gt;

&lt;div class=&quot;img_row&quot;&gt;
    &lt;a href=&quot;/img/modeling_approaches2.png&quot; target=&quot;_blank&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/modeling_approaches2.png&quot; alt=&quot;Modeling Approaches 2&quot; title=&quot;Modeling Approaches 2&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
Hierarchy of methods for modeling biochemical reactions. CME - Chemical Master Equation, SSA - Stochastic Simulation Algorithm, CLE - Chemical Langevin Equation, CFPE - Chemical Fokker-Planck Equation, RRE - Reaction Rate Equation. (&lt;a href=&quot;https://www.annualreviews.org/doi/abs/10.1146/annurev.physchem.58.032806.104637&quot; target=&quot;_blank&quot;&gt;Source&lt;/a&gt;)
&lt;/div&gt;

&lt;p&gt;The main reason for why there is such a wide palette of approaches is because the chemical master equation does not have analytical solution and its numerical solution quickly becomes computationally expensive for systems with more than few distinct species. Its advantage is that building a model from set of reactions is very transparent and straightforward and this is why we will focus on precisely this approach, keeping in mind its limitations.&lt;/p&gt;

&lt;h2 id=&quot;the-stochastic-simulation-algorithm&quot;&gt;The Stochastic Simulation Algorithm&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
We have already mentioned that &lt;em&gt;CME&lt;/em&gt; doesn’t have analytical soltion. The straightforward approach how to obtain some representative description of the system is to draw samples from the probability distribution $P(\mathbf{q}, t ~|~ \mathbf{q}_0, t_0)$ governed by the &lt;em&gt;CME&lt;/em&gt;. This is  &lt;a href=&quot;https://www.quora.com/What-is-an-intuitive-explanation-of-Monte-Carlo-simulations&quot;&gt;&lt;em&gt;Monte Carlo simulation&lt;/em&gt;&lt;/a&gt;. We will be able to determine &lt;a href=&quot;https://en.wikipedia.org/wiki/Moment_(mathematics)&quot;&gt;moments of the distribution&lt;/a&gt; (e.g. mean and variance) by averaging over many independent realizations of single trajectories (under identical initial conditions).
&lt;!-- Can actually implement stochastic collocation here!! --&gt;&lt;/p&gt;

&lt;h4 id=&quot;state-update&quot;&gt;State update&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;
To implement this in code, we will follow approach as developed by &lt;a href=&quot;https://en.wikipedia.org/wiki/Daniel_Gillespie&quot;&gt;Daniel Gillespie&lt;/a&gt;, i.e. the &lt;em&gt;stochastic simulation algorithm (SSA)&lt;/em&gt;. Given an arbitrary state $\mathbf{q} = (n_1, n_2, …)$, for computation of the next state we need an index of next reaction that occurs (“fires”) and $\Delta t$ in which this happens. The probability that the next reaction to fire is the reaction $j$ is directly proportional to the corresponding propensity $a_j$ (intuitively, reactions with high reaction rates will occur more often). Therefore finding an index $j$ of such reaction is just matter of drawing a random integer from a weighted distribution on $[1, M]$ where the weights are given as:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{a_j}{\sum_{i}^{M} a_i} \qquad j = 1, ..., M.&lt;/script&gt;

&lt;p&gt;Note that this is equivalent to drawing a uniform random number on $[0,1]$, scaling it by the total propensity $a = \sum_{i}^{M}a_i$ and finding the first integer $j$ for which this scaled random number is less then $\sum_{i}^{j}a_i$.&lt;/p&gt;

&lt;h4 id=&quot;time-update&quot;&gt;Time update&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;
Finding a $\Delta t$ in which this reaction occurs is more involved. You can find the derivation at the &lt;a href=&quot;#Time-step-size-derivation-for-SSA&quot;&gt;end of this post&lt;/a&gt;, but for now we will take for granted that the &lt;em&gt;cumulative distribution function (CDF)&lt;/em&gt; for $\Delta t$ is:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\int_{0}^{\Delta t} \mathrm{f}_T(\tau) d\tau = \int_{0}^{\Delta t} a \mathrm{e}^{-a\tau}d \tau = 1 - \mathrm{e}^{-a\Delta t}.&lt;/script&gt;

&lt;p&gt;This is nice because we draw samples from this distribution by drawing a random number $\xi$ on $[0, 1]$ and &lt;a href=&quot;https://en.wikipedia.org/wiki/Inverse_transform_sampling&quot;&gt;inverse-sampling&lt;/a&gt; from the CDF. In this case, the CDF can be even inverted analytically to obtain:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\Delta t = \frac{1}{a} \mathrm{ln}\bigg(\frac{1}{1 - \xi}\bigg).&lt;/script&gt;

&lt;h4 id=&quot;python-code&quot;&gt;Python code&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;
If the previous two sections sounded complicated to you, have no worry, it is actually dead simple to implement them in code:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;draw_ssa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;propensities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total_prop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Draw random samples according to prescriptions of SSA

    Parameters
    -------
    propensities: array, propensities of all reactions
    total_prop: float, total propensity

    Returns
    ---------
    idx: int, index into the state change matrix to determine updated
              state
    tau: float, time step size
    &quot;&quot;&quot;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;xi1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;prop_rank&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cumsum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;propensities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total_prop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;int32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argmax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prop_rank&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xi1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;xi2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uniform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tau&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total_prop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xi2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tau&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;the-algorithm&quot;&gt;The Algorithm&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
Now we are armed for the stochastic simulation algorithm that proceeds as follows:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{alignat}{0}
\textbf{initialize} \\
\qquad \textrm{choose}\ \mathbf{q}_0,\ \textrm{e.g.}\ (n_{mRNA,0}, n_{protein, 0})\\
\textbf{while}\ t\ &lt; \ t_{stop}:\\
\qquad \textrm{calculate}\ a_i(\mathbf{q}),\ \forall\ i = 1, ..., M \\
\qquad \textrm{draw}\ \xi_1 \in [0, 1]\ \textrm{and compute}\ \Delta t \\
\qquad \textrm{draw}\ \xi_2 \in [0, 1]\ \textrm{and find index}\ j \\
\qquad \textrm{update}\ \mathbf{q}\\
\end{alignat} %]]&gt;&lt;/script&gt;

&lt;p&gt;This algorithm is also called &lt;a href=&quot;https://www.sciencedirect.com/science/article/pii/0021999176900413?via%3Dihub&quot;&gt;Gillespie’s direct method&lt;/a&gt; as it was D.T. Gillespie who proved that this method samples from the probability distribution governed by the CME. The method is derived based on &lt;a href=&quot;http://cmt.dur.ac.uk/sjc/thesis_mcg/node6.html&quot;&gt;first principles&lt;/a&gt;. This makes it an exact approach to stochastic simulation, consequently, time step $\tau$ is not mere finite approximation (as in ODE models).&lt;/p&gt;

&lt;h4 id=&quot;python-code-1&quot;&gt;Python code&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;
Implementation in code is again quite simple:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ssa_routine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;q0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;psi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot; Stochastic Simulation Algorithm

    Performs sampling from distribution governed by chemical master equation.

    Parameters
    --------------
    k: array, vector stochastic reaction constants
    t_end: int, number of steps for the simulation
    q0: array, initial number of molecules for each species
    nu: ndarray, stoichiometric matrix, with state change vectors in columns
    psi: ndarray, reactant molecularity matrix

    Returns
    --------------
    Q: array, all states q at times t
    time: array, vector of times t
    tot_props: array, total propensities at times t
    is_success: bool, flag indicating if simulation ran to completion
    &quot;&quot;&quot;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;#Initialize arrays to store states, tick times&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;Q&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;q0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# Calculate propensities for current state&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;propensities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total_prop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_propensities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;psi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;# Draw random samples for update of state and time step&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tau&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;draw_ssa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;propensities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total_prop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;## Find random change in state - see theory&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;## Find random time step size - see theory&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tau&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_propensities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;populations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;psi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Return propensities given rates and populations

    Computes the value of propensity for all reactions. Generalizes to various systems

    Parameters
    ----------
    rates: array, vector of stochastic reaction constants
    populations: array, vector of number of molecules of each species

    Returns
    ---------------
    propensities: array, vector of propensiites for all reactions
    total_propensity: float, sum of all propensiites
    &quot;&quot;&quot;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# See model description&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;propensities&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;psi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;psi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;populations&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;psi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,:]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;propensities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;total_propensity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;propensities&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;propensities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total_propensity&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The apparent drawback of this method is its computational complexity. As the systems become of somewhat more practical size (larger number of different species), the time step becomes very small (reactions occur often). As on each time step, two random numbers have to be generated, this leads to significant computational cost. To circumvent this issue, approximations of the SSA  become useful (see Figure &lt;em&gt;Hierarchy of methods for modeling biochemical reactions&lt;/em&gt;).&lt;/p&gt;

&lt;h2 id=&quot;easy-example-the-central-dogma&quot;&gt;Easy example: The Central Dogma&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
To make this discussion more concrete, let’s look at the minimal example of &lt;a href=&quot;https://www.dnalc.org/resources/3d/central-dogma.html&quot;&gt;&lt;em&gt;central dogma of molecular biology&lt;/em&gt;&lt;/a&gt;. This can be concisely represented as:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\require{AMScd}
\begin{CD}
    DNA @&gt;\beta_m&gt;&gt; mRNA @&gt;{\beta_p \cdot n_m(t)}&gt;&gt; protein\\
    @. @VV{\gamma_m \cdot n_m(t)}V @VV{\gamma_p \cdot n_p(t)}V\\
    @. \varnothing @. \varnothing
\end{CD}&lt;/script&gt;

&lt;p&gt;Here the microstate is simply the vector $\mathbf{q} = (1, n_m, n_p)$, where $n_m$ and $n_p$ are the copy numbers of transcripts and proteins respectively that depend on time. The DNA is present in single copy throughout (as such, we do not need to include it in our calculations, but will do so for consistency). The propensities (or &lt;em&gt;transition probabilities&lt;/em&gt;) are:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;a_1 = \beta_m \qquad a_2 = \gamma_m \cdot n_m \qquad a_3 = \beta_p \cdot n_m \qquad a_4 = \gamma_p \cdot n_p,&lt;/script&gt;

&lt;p&gt;where $\beta_i$ corresponds to &lt;em&gt;production&lt;/em&gt; and $\gamma_i$ to &lt;em&gt;degradation&lt;/em&gt;. We can see that propensity, in case of unimolecular reaction ($A \rightarrow B$) directly corresponds to the reaction rate constant (Things get only bit more complicated for bimolecular reactions as you will see later).&lt;/p&gt;

&lt;p&gt;Each state change vector corresponds to one reaction in the system and together they are concatenated as columns of &lt;em&gt;stoichiometric matrix&lt;/em&gt; $\mathbf{N}$:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\mathbf{N}= (\boldsymbol{\nu}_1^T, \boldsymbol{\nu}_2^T, \boldsymbol{\nu}_3^T, \boldsymbol{\nu}_4^T) =
\begin{bmatrix}
0 &amp; 0 &amp; ~0 &amp; ~0 \\
1 &amp; 0 &amp; -1 &amp; ~0 \\
0 &amp; 1 &amp; ~0 &amp; -1
\end{bmatrix} %]]&gt;&lt;/script&gt;

&lt;p&gt;The dynamics of the system are described by &lt;em&gt;Chemical master equation (CME)&lt;/em&gt; for probability $P\big((n_m, n_p), t\big)$:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{array}{lcl}
\frac{\partial P}{\partial t}\big((n_m, n_p), t\big) &amp; = &amp; P\big((n_m-1, n_p\big), t)\beta_m - P\big((n_m, n_p), t\big)\beta_m \\
&amp; + &amp; P\big((n_m+1, n_p), t\big)\gamma_m (n_m+1) - P\big((n_m, n_p), t\big)\gamma_m n_m \\
&amp; + &amp; P\big((n_m, n_p-1), t\big)\beta_p (n_m) - P\big((n_m, n_p), t\big)\beta_p n_m \\
&amp; + &amp; P\big((n_m, n_p+1), t\big)\gamma_p (n_p+1) - P\big((n_m, n_p), t\big)\gamma_p n_p \\
\end{array} %]]&gt;&lt;/script&gt;

&lt;p&gt;Phew! This has been quite some theory we have covered, let’s now take a look how we can translate all this into code to simulate a real biological system.&lt;/p&gt;

&lt;h3 id=&quot;simulation&quot;&gt;Simulation&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load_ext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;autoreload&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;autoreload&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ssa_routine&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ssa&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ggplot'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# use &quot;ggplot&quot; style for graphs&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pltparams&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'legend.fontsize'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'axes.labelsize'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'axes.titlesize'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             &lt;span class=&quot;s&quot;&gt;'xtick.labelsize'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ytick.labelsize'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'figure.figsize'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;7.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;7.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rcParams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pltparams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;model-parameters&quot;&gt;Model Parameters&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;
We set the initial conditions as following:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$DNA$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$mRNAs$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$Proteins$&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;For the reaction rates we select:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$\beta_m$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$\beta_p$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$\gamma_m$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$\gamma_p$&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;10&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;10&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.4&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;This means, for example, that the “birth” of a molecule of mRNA is 10-times more likely than its “death”.&lt;/p&gt;

&lt;p&gt;Additionally we define matrix of reactant (species entering each reaction) molecularity $\mathbf{\psi}$:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\mathbf{\psi}=
\begin{bmatrix}
1 &amp; 0 &amp; 0 &amp; 0 \\
0 &amp; 1 &amp; 1 &amp; 0 \\
0 &amp; 0 &amp; 0 &amp; 1
\end{bmatrix}. %]]&gt;&lt;/script&gt;

&lt;p&gt;We will also simulate multiple independent evolutions (paths) such that we can obtain mean evolution.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ssa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;modelParameters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt;
                         &lt;span class=&quot;n&quot;&gt;nu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])),&lt;/span&gt;
                         &lt;span class=&quot;n&quot;&gt;psi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])),&lt;/span&gt;
                         &lt;span class=&quot;n&quot;&gt;q0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt;
                         &lt;span class=&quot;n&quot;&gt;t_end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                         &lt;span class=&quot;n&quot;&gt;names&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;gene&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;mRNA&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;protein&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                         &lt;span class=&quot;n&quot;&gt;dist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;none&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;poiss&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;gauss&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;n_paths&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ssa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_paths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;do_load&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;do_save&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2018-04-15 09:33:39,299:ssa_routine:INFO: Starting simulation with n_paths=30
2018-04-15 09:34:14,563:ssa_routine:INFO: Calculating statistics for all species.
2018-04-15 09:34:15,376:ssa_routine:INFO: Simulation finished.
2018-04-15 09:34:21,556:ssa_routine:INFO: Program execution finished.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style&gt;
    .dataframe thead tr:only-child th {
        text-align: center;
    }

    .dataframe thead th {
        text-align: left;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }
&lt;/style&gt;
&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: center;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;var&lt;/th&gt;
      &lt;th&gt;CV&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;gene&lt;/th&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;mRNA&lt;/th&gt;
      &lt;td&gt;10.431053&lt;/td&gt;
      &lt;td&gt;10.262420&lt;/td&gt;
      &lt;td&gt;0.307112&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;protein&lt;/th&gt;
      &lt;td&gt;252.870719&lt;/td&gt;
      &lt;td&gt;2027.642923&lt;/td&gt;
      &lt;td&gt;0.178073&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h3 id=&quot;results&quot;&gt;Results&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
We obtain statistics for distribution of number of species. The mRNAs reach steady-state value of around 10 copies whereas the proteins level off at around 260 copies. The $CV$ is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Coefficient_of_variation&quot;&gt;coefficient of variation&lt;/a&gt;, normalized measure of dispersion of a distribution defined as a ratio of standard deviation to mean $CV = \frac{\sigma}{\mu}.$&lt;/p&gt;

&lt;p&gt;We can look at the development of species numbers in time in the following plot in the left panel. On the right hand is then all-time histogram estimate of distribution of copy numbers together with empirical cumulative distribution function and KDE - &lt;a href=&quot;https://www.quora.com/What-is-kernel-density-estimation&quot;&gt;kernel density estimate&lt;/a&gt;. We observe that the distribution of number of mRNAs well follows the theoretical &lt;a href=&quot;https://en.wikipedia.org/wiki/Poisson_distribution&quot;&gt;Poisson distribution&lt;/a&gt; with rate parameter $\lambda = \beta_m$.&lt;/p&gt;

&lt;div class=&quot;img_row&quot;&gt;
    &lt;a href=&quot;/img/easy_example_evolution.png&quot; target=&quot;_blank&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/easy_example_evolution.png&quot; alt=&quot;Easy Example&quot; title=&quot;Easy Example&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
Temporal evolution of species' copy numbers. Red line indicates mean evolution for 30 independent realizations. Right panel displays marginal distribution for all times both as empirical estimate (histogram and KDE - Kernel Density Estimate) and theoretical predictions (Poisson for mRNAs and Gaussian for proteins). Green line in the right panel represents empirical cumulative distribution function.
&lt;/div&gt;

&lt;h3 id=&quot;note-on-speed&quot;&gt;Note on speed&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
Even in this simple version, the algorithm takes quite some time to finish. I looked into it and improved the performance using &lt;a href=&quot;https://numba.pydata.org/&quot;&gt;numba&lt;/a&gt;. You can find details on this in the &lt;a href=&quot;#Optimizing-the-sampling-in-SSA&quot;&gt;supplementary note&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;advanced-example-noise-induced-switch&quot;&gt;Advanced Example: Noise Induced Switch&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
OK, once we have the simulation and visualization functions ready and once we can draw samples reasonably fast, we can start working on a more complex model. We will look at set of reactions that will allow us to simulate effects of noise on gene expression levels. In particular we are interested in rapid switching between two significantly different levels of expression. This interesting phenomenon, referred as bistability, is often present in real biological circuits but cannot be captured by a deterministic ODE model. Whereas in previous easy example we may have as well used a deterministic ODE to obtain good estimate of time evolution, in this case we need a stochastic model to get representative picture of system dynamics.&lt;/p&gt;

&lt;h3 id=&quot;the-model&quot;&gt;The model&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;G_1 \xrightarrow{\beta_1} G_1 + P_1 \qquad \qquad P_1 \xrightarrow{\gamma_1} \varnothing \tag{1a, 1b}&lt;/script&gt;&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;G_2 \xrightarrow{\beta_2} G_2 + 2\,P_2 \qquad \qquad P_2 \xrightarrow{\gamma_1} \varnothing \tag{2a, 2b}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\require{mhchem}
\ce{G1 + P2 &lt;=&gt;[{\kappa_{c1}^{+}}][{\kappa_{c1}^{-}}] \xi_{1}^{I}} \tag{3} %]]&gt;&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\ce{G2 + P1 &lt;=&gt;[{\kappa_{c2}^{+}}][{\kappa_{c2}^{-}}] \xi_{2}^{I_1}} \tag{4} %]]&gt;&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\ce{\xi_{2}^{I_1} + P1 &lt;=&gt;[{\kappa_{c3}^{+}}][{\kappa_{c3}^{-}}] \xi_{2}^{I_2}} \tag{5} %]]&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Reactions $(1a)$ and $(2a)$ represent expression of proteins $P_1$ and $P_2$ originating from genes $G_1$ and $G_2$ ($G_2$ codes for &lt;a href=&quot;https://en.wikipedia.org/wiki/Messenger_RNA#Monocistronic_versus_polycistronic_mRNA&quot;&gt;bicistronic&lt;/a&gt; mRNA). They reflect the fact that the genes are left unchanged and available for transcription.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;$(2a)$ and $(2b)$ correspond to protein degradation, where reaction rate is proportional to current number of molecules of given protein $n_i, ~ i={P_1, P_2}$.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In equation $(3)$, the expression of protein $P_1$ is inhibited by $P_2$ which binds to promoter region of $G_1$ and acts as &lt;em&gt;inhibitor&lt;/em&gt;, forming complex $\xi_1^I$.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The expression of from gene $G_2$ is repressed by protein $P_1$ which together form an intermediate transcription-inhibiting complex $\xi_2^{I_1}$ (reaction $(4)$)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Protein $P_1$ is inactivated by binding to complex $\xi_2^{I_1}$ and forming $\xi_2^{I_2}$ (reaction $(5)$). Note that reactions $(4)$ and $(5)$ work antagonistically.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will model &lt;a href=&quot;https://en.wikipedia.org/wiki/Cooperativity&quot;&gt;cooperativity&lt;/a&gt; of the enzyme binding sites with:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\kappa_{c3}^{+} = \sigma \kappa_{c2}^{+} \qquad \sigma &gt;&gt; 1.&lt;/script&gt;

&lt;p&gt;This essentially says that the inhibitory binding to $P_1$ becomes easier after the first complexation reaction. This, at the first sight not very interesting feature of the system, is actually essential in our simulation. Repression with cooperativity is namely &lt;a href=&quot;https://www.sciencedirect.com/science/article/pii/S0022519300910683&quot;&gt;one of ways how to achieve switch-like behavior&lt;/a&gt; in biological systems.&lt;/p&gt;

&lt;!---
This is a very nice property of the system that can be analytically proved from deterministic ODE model. This however requires careful mathematical analysis, so we will not do it here (if you are interested checkout [this website](https://mathbio.colorado.edu/index.php/MBW:How_to_make_a_Biological_Switch)).
---&gt;

&lt;p&gt;The system in question has 7 distinct biochemical species: $[G_1, P_1, G_2, P_2, \xi_{1}^{I}, \xi_{2}^{I_1}, \xi_{2}^{I_2}]$ and comprises of in total 10 reactions (as we consider each reversible reaction as two).&lt;/p&gt;

&lt;h4 id=&quot;stochastic-reaction-constants&quot;&gt;Stochastic reaction constants&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;
As previously we will define an array of stochastic reaction rates $k$. We will have to be careful about units here. First, we note that for &lt;em&gt;unimolecular&lt;/em&gt; reactions, the reaction rates are identical to the deterministic ones with unit ${min}^{-1}$. This is good because we are already familiar with them from previous example.&lt;/p&gt;

&lt;p&gt;For &lt;em&gt;bimolecular&lt;/em&gt; (two species) reactions, the stochastic reaction rate relates to the reaction rate of deterministic model by scaling with inverse volume $\Omega$.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\hat{k}_i = \frac{k_i}{\Omega}.&lt;/script&gt;

&lt;p&gt;To obtain same units as in the case of &lt;em&gt;unimolecular&lt;/em&gt; reaction, we include also scaling by Avogardo’s number $N_A [mol^{-1}]$, such that $\Omega = V\,
N_A$ and $k_i = [M \cdot min^{-1}]$. $N_A$ is the old familiar $6.022\cdot10^{23} mol^{-1}.$ For the volume, we make a &lt;a href=&quot;http://book.bionumbers.org/how-big-is-an-e-coli-cell-and-what-is-its-mass/&quot;&gt;ballpark estimate&lt;/a&gt; for &lt;em&gt;E.coli&lt;/em&gt; as a cylinder with diameter $1\mu m$ and length $2\mu m$ yielding $V \approx 1.5 \mu m^3 = 1.5\cdot 10^{-14} dm^3$.&lt;/p&gt;

&lt;p&gt;For our model, we will select the following values of stochastic reaction constants:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$\beta_1$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$\beta_2$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$\gamma_1$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$\gamma_2$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$\kappa_{c1}^{+}$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$\kappa_{c1}^{-}$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$\kappa_{c2}^{+} $&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$\kappa_{c2}^{-}$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$\kappa_{c3}^{+}$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$\kappa_{c3}^{-}$&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$100$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$1000$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$10$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$4$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$\frac{2}{\Omega}$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$1$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$\frac{4}{\Omega}$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$1$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$\frac{4\sigma}{\Omega}$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$1$&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The choice here is less arbitrary then it may look, because only certain parameters of the system will lead to noise-induced switch-like behavior. Here we require $\kappa_{c1}^{-} = \kappa_{c2}^{-} = \kappa_{c3}^{-}$, $2 \kappa_{c1}^{+} = \kappa_{c2}^{+}$ and $\sigma = 10$.&lt;/p&gt;

&lt;p&gt;This leads to following set of propensities:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$a_1$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$a_2$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$a_3$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$a_4$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$a_5$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$a_6$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$a_7$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$a_8$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$a_9$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$a_{10}$&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$\beta_1~n_{G1}$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$\beta_2~n_{G2}$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$\gamma_1~n_{P_1}$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$\gamma_2~n_{P_2}$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$\kappa_{c1}^{+}n_{P2}n_{G1}$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$\kappa_{c1}^{-}~\xi_{1}^{I}$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$\kappa_{c2}^{+}n_{P1}n_{G2}$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$\kappa_{c2}^{-}~\xi_{2}^{I_1}$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$\kappa_{c3}^{+}n_{P1}\xi_{2}^{I_1}$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$\kappa_{c3}^{-}~\xi_{2}^{I_2}$&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;As previously we assume, that DNA &lt;a href=&quot;https://www.quora.com/Why-is-DNA-stable-but-RNA-is-not&quot;&gt;does not degrade&lt;/a&gt;, although the transcription from it can be inhibited by binding with respective protein (reactions $3$ and $4$).&lt;/p&gt;

&lt;p&gt;Further we set the initial conditions as following:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$G_1$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$P_1$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$G_2$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$P_2$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$\xi_{1}^{I}$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$\xi_{2}^{I_1}$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$\xi_{2}^{I_2}$&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;10&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;10&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;simulation-1&quot;&gt;Simulation&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
As the code in previous example was written with to be generalizable, we will be able to almost entirely reuse it, we just need to update the model parameters as follows:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Model Parameters&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;V&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.5e-14&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;to_nanomolar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1e-9&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;omega&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;6.02214086e23&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_nanomolar&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;t_end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30000&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asarray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;omega&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;omega&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;omega&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;q0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;names&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'$G_1$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;r'$P_1$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;r'$G_2$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;r'$P_2$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
         &lt;span class=&quot;s&quot;&gt;r'$\xi_1^{I}$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;r'$\xi_2^{I_1}$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;r'$\xi_2^{I_2}$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;none&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;## State change matrix associated with each reaction&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;nu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#G1    -&amp;gt; G1+P1&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#G2    -&amp;gt; G2+P2&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#P1    -&amp;gt; _&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#P2    -&amp;gt; _&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#G1+P2 -&amp;gt; C1&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#C1    -&amp;gt; G1+P2&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#P1+G2 -&amp;gt; C2a&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#C2a   -&amp;gt; P1+G2&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#P1+C2a-&amp;gt; C2b&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;#C2b   -&amp;gt; P1+C2a&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;## Molecularity of species entering each reaction&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;psi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;mp_toggle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ssa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;modelParameters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;psi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;q0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#Simulation Parameters&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;n_paths&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;do_load&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# default 0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;do_save&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# default 1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;ssa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mp_toggle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_paths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;do_load&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;do_save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2018-04-15 09:43:40,516:ssa_routine:INFO: Starting simulation with n_paths=1
2018-04-15 09:43:40,524:ssa_routine:INFO: Start of simulation for path # 1 out of 1.
2018-04-15 09:45:07,171:ssa_routine:INFO: Relative time: 0.20.
2018-04-15 09:46:01,920:ssa_routine:INFO: Relative time: 0.40.
2018-04-15 09:48:00,145:ssa_routine:INFO: Relative time: 0.60.
2018-04-15 09:49:25,028:ssa_routine:INFO: Relative time: 0.80.
2018-04-15 09:52:52,343:ssa_routine:INFO: Data saved to file results~/data/out_20180415-095212.
2018-04-15 09:52:52,605:ssa_routine:INFO: Calculating statistics for all species.
2018-04-15 09:53:29,373:ssa_routine:INFO: Simulation finished.
2018-04-15 09:54:03,614:ssa_routine:INFO: Program execution finished.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style&gt;
    .dataframe thead tr:only-child th {
        text-align: center;
    }

    .dataframe thead th {
        text-align: left;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }
&lt;/style&gt;
&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: center;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;var&lt;/th&gt;
      &lt;th&gt;CV&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;$G_1$&lt;/th&gt;
      &lt;td&gt;0.678624&lt;/td&gt;
      &lt;td&gt;0.218094&lt;/td&gt;
      &lt;td&gt;0.688165&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;$P_1$&lt;/th&gt;
      &lt;td&gt;7.137714&lt;/td&gt;
      &lt;td&gt;31.071102&lt;/td&gt;
      &lt;td&gt;0.780943&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;$G_2$&lt;/th&gt;
      &lt;td&gt;0.320242&lt;/td&gt;
      &lt;td&gt;0.217687&lt;/td&gt;
      &lt;td&gt;1.456927&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;$P_2$&lt;/th&gt;
      &lt;td&gt;159.794211&lt;/td&gt;
      &lt;td&gt;54399.408869&lt;/td&gt;
      &lt;td&gt;1.459607&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;$\xi_1^{I}$&lt;/th&gt;
      &lt;td&gt;0.321376&lt;/td&gt;
      &lt;td&gt;0.218094&lt;/td&gt;
      &lt;td&gt;1.453140&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;$\xi_2^{I_1}$&lt;/th&gt;
      &lt;td&gt;0.005893&lt;/td&gt;
      &lt;td&gt;0.005858&lt;/td&gt;
      &lt;td&gt;12.988131&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;$\xi_2^{I_2}$&lt;/th&gt;
      &lt;td&gt;0.673865&lt;/td&gt;
      &lt;td&gt;0.219771&lt;/td&gt;
      &lt;td&gt;0.695685&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h3 id=&quot;results-1&quot;&gt;Results&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
From the statistics, we may conclude that there is not much going on in our system, but look at the following plots of temporal evolution of protein copy numbers is more interesting. We see that the system manifests bistability when there are significant and  abrupt jumps in copy numbers of both proteins. This is the expected effect of noise-induced switching that is not tractable in deterministic model. The bistable behavior is due to the fact that the copy numbers of the proteins are dependent on presence or absence of complexes $\xi_1^{I}$, $\xi_2^{I_1}$, $\xi_2^{I_2}$ that in turn acquire copy numbers only in set $\{0,1\}$. Such binary state is significantly affected by stochastic events (recall the previous example with parking lot).&lt;/p&gt;

&lt;div class=&quot;img_row&quot;&gt;
    &lt;a href=&quot;/img/advanced_example_evolution_P1.png&quot; target=&quot;_blank&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/advanced_example_evolution_P1.png&quot; alt=&quot;Easy Example&quot; title=&quot;Easy Example&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;div class=&quot;img_row&quot;&gt;
    &lt;a href=&quot;/img/advanced_example_evolution_P2.png&quot; target=&quot;_blank&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/advanced_example_evolution_P2.png&quot; alt=&quot;Easy Example&quot; title=&quot;Easy Example&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
Copy number evolution for proteins 1 and 2. Both species exhibit bistability in state space that is the best seen in the marginal distribution on the right panel. Although the copy numbers are mostly around 10 and 0, this can suddenly and randomly change to 0 and 500 for proteins 1 and 2 respectively.
&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;
If you have made it all the way here, pat yourself on the back. It has been quite some math we have covered and it allows you to faithfully simulate dynamical systems as intriguing and complicated as genetic circuits. Now you know something about the phenomenon of bistability, which is a crucial element of building a toggle-switch, one of the elemental parts in synthetic-biology. You  also understand the important role of noise in gene expression and that the inherent stochasticity is not purely a complication in our design but can be efficiently exploited to drive patterns in molecular ‘decision-making’. In addition to &lt;em&gt;Stochastic Simulation Algorithm&lt;/em&gt;, you are now also aware of other, more approximate, approaches for modeling biochemical (or other stochastic) systems like &lt;em&gt;Chemical Langevin&lt;/em&gt; or &lt;em&gt;Fokker-Planck&lt;/em&gt; equations that can allow you to inspect systems of larger size.&lt;/p&gt;

&lt;p&gt;Last but not least, after inspecting the code in the &lt;a href=&quot;https://github.com/martinholub/gillespie-notebook&quot;&gt;github repository&lt;/a&gt;, you will have seen examples of some advanced python capabilities including function decorators, just-in-time compilation and logging.&lt;/p&gt;

&lt;p&gt;I hope reading this post was as enjoyable for you as much as it was for me to write it. If you feel like you want to find more about the exciting field of synthetic biology, you can start with &lt;a href=&quot;https://www.youtube.com/watch?v=lNttxYdGHs4&quot;&gt;this video&lt;/a&gt;. In any case, stay tuned for upcoming posts on cool interdisciplinary and engineering topics.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&quot;suplementary-notes&quot;&gt;Suplementary Notes&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;time-step-size-derivation-for-ssa&quot;&gt;Time step size derivation for SSA&lt;/h3&gt;

&lt;p&gt;Define $p(\tau, j |\mathbf{q}, t)d\tau$ as the probability that the reaction $j$ occurs in the time interval $[t + \tau, t + \tau + d\tau]$, then we have:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;p(\tau, j ~|~ \mathbf{q}, t)d\tau = P_0 (\tau ~|~ \mathbf{q}, t) \cdot a_j(\mathbf{q})d\tau,&lt;/script&gt;

&lt;p&gt;where $P_0 (\tau ~|~ \mathbf{q}, t)$ is the probability that &lt;em&gt;no&lt;/em&gt; reaction fires on time interval $[t, \tau + t]$. We note that starting time $t$ is arbitrary and we may set it to zero.
Corresponding probability that &lt;em&gt;no&lt;/em&gt; reaction occurs in time interval $[t + \tau, t + \tau + d\tau]$:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;P_0 (\tau + d\tau\ |\ \mathbf{q}, t) = P_0 (\tau\ |\ \mathbf{q}, t) \cdot (1-ad\tau),&lt;/script&gt;

&lt;p&gt;where $a = \sum_{i}^{M}a_i.$&lt;/p&gt;

&lt;p&gt;It then immediately follows that:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{d P_0}{d \tau} (\tau\ |\ \mathbf{q}, t) = -P_0 (\tau\ |\ \mathbf{q}, t) \cdot a.&lt;/script&gt;

&lt;p&gt;Solving this differential equation with initial condition $P_0 (0\ | \mathbf{q}, t) = 1$ yields:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;P_0 (\tau\ | \mathbf{q}, t) = \mathrm{exp}(-a\tau).&lt;/script&gt;

&lt;p&gt;Going back to previous definition, this gives us:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;p(\tau, j\ |\ \mathbf{q}, t) =  \mathrm{exp}(-a\tau) \cdot a_j(\mathbf{q}).&lt;/script&gt;

&lt;p&gt;To obtain index of next reaction $j$ we &lt;em&gt;marginalize&lt;/em&gt; over all $\tau$ and obtain:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\int_{0}^{\infty}p(\tau, j\ |\ \mathbf{q}, t) d\tau = a_j(\mathbf{q}) \int_{0}^{\infty} \mathrm{exp}(-a\tau)d\tau = \frac{a_j(\mathbf{q})}{a}.&lt;/script&gt;

&lt;p&gt;Similarly, to find time that next reaction occurs, we integrate over all reactions $j$ and obtain:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;p(\tau\ |\ \mathbf{q}, t) =  \mathrm{exp}(-a\tau) \cdot a.&lt;/script&gt;

&lt;p&gt;The probability that the reaction occurs on time interval $[0, \Delta t]$ is then given by the &lt;em&gt;cumulative distribution function (CDF)&lt;/em&gt;:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\int_{0}^{\Delta t}p(\tau\ | \mathbf{q}, t) d\tau = a \int_{0}^{\Delta t} \mathrm{exp}(-a\tau)d\tau = 1 - \mathrm{exp}(-a\Delta t).&lt;/script&gt;

&lt;p&gt;The CDF is bounded on $[0, 1]$ and we can easily generate samples from corresponding PDF by inverse-sampling when we draw uniformly distributed numbers $\xi$ which finally yields:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\Delta t = \frac{1}{a} \mathrm{ln}\bigg(\frac{1}{1 - \xi}\bigg),&lt;/script&gt;

&lt;p&gt;as stated before.&lt;/p&gt;

&lt;h3 id=&quot;optimizing-the-sampling-in-ssa&quot;&gt;Optimizing the sampling in SSA&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
The computational burden of the direct method for SSA hits us pretty early. This can be troubling as it prolongs development cycles and limits number of species we can track. To alleviate this at least marginally, we can try to speed up our current code without making any conceptual changes to what is being computed and how (in contrast to more approximate approaches like &lt;em&gt;Chemical Langevin Equation(CLE)&lt;/em&gt; and &lt;em&gt;Fokker-Planck Equation (FPE)&lt;/em&gt;).&lt;/p&gt;

&lt;h4 id=&quot;use-profiler-to-find-where-the-most-time-is-spent&quot;&gt;Use profiler to find where the most time is spent&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;
First, we profile our code to see where the most time is being spend.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load_ext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line_profiler&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ssa_routine&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ssa&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lprun&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;profiler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ssa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ssa_routine&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ssa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ssa_routine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;q0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;psi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;\*\*\* Profile printout saved to text file 'profiler.out'.

Timer unit: 4.46227e-07 s
Total time: 3.26368 s
Function: ssa_routine at line 92

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    92                                           def ssa_routine(k, t_end, q0, nu):

    119     20580        71930      3.5      1.0      while t &lt;span class=&quot;nt&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;_end:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;120&lt;/span&gt;     &lt;span class=&quot;na&quot;&gt;20579&lt;/span&gt;      &lt;span class=&quot;na&quot;&gt;2325960&lt;/span&gt;    &lt;span class=&quot;na&quot;&gt;113&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;na&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;8&lt;/span&gt;          &lt;span class=&quot;na&quot;&gt;propensities&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;total_prop =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;get_propensities(k,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;na&quot;&gt;125&lt;/span&gt;                                                   &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Draw&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;random&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;samples&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;step&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;126&lt;/span&gt;     &lt;span class=&quot;na&quot;&gt;20579&lt;/span&gt;      &lt;span class=&quot;na&quot;&gt;3574266&lt;/span&gt;    &lt;span class=&quot;na&quot;&gt;173&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;7&lt;/span&gt;     &lt;span class=&quot;na&quot;&gt;48&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;9&lt;/span&gt;          &lt;span class=&quot;na&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tau =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;draw_ssa(propensities,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;total_prop&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;na&quot;&gt;141&lt;/span&gt;         &lt;span class=&quot;na&quot;&gt;1&lt;/span&gt;            &lt;span class=&quot;na&quot;&gt;3&lt;/span&gt;      &lt;span class=&quot;na&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;0&lt;/span&gt;      &lt;span class=&quot;na&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;0&lt;/span&gt;      &lt;span class=&quot;na&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Q&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;time&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;use-numba-to-speed-up-the-calculations&quot;&gt;Use numba to speed up the calculations&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;
We have found out that absolute majority of the time is spent in computing propensities and drawing samples for update with a respective reaction in given time interval. Unsurprisingly, as these occur on each and every time-step. Clearly, we can get the most ‘bang for the buck’ by making these two steps faster. To this end, we place them into individual functions and use &lt;a href=&quot;https://numba.pydata.org/&quot;&gt;&lt;code class=&quot;language-html highlighter-rouge&quot;&gt;numba&lt;/code&gt;’s&lt;/a&gt; &lt;code class=&quot;language-html highlighter-rouge&quot;&gt;@jit&lt;/code&gt; decorator for just-in-time (JIT) compilation. This allows us to get about five-fold speed-up in calculations which I think is fair given the simplicity of implementation. This boils down to &lt;a href=&quot;https://wiki.python.org/moin/PythonDecorators&quot;&gt;decorating&lt;/a&gt; the function as:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@numba.jit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nopython&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;some_function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here is the speed comparison:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_env&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NUMBA_DISABLE_JIT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#os.environ[&quot;NUMBA_DISABLE_JIT&quot;] = &quot;1&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timeit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ssa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;simulate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_paths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style&gt;
    .dataframe thead tr:only-child th {
        text-align: right;
    }

    .dataframe thead th {
        text-align: left;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }
&lt;/style&gt;
&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;var&lt;/th&gt;
      &lt;th&gt;CV&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;mRNA&lt;/th&gt;
      &lt;td&gt;10.394067&lt;/td&gt;
      &lt;td&gt;9.208149&lt;/td&gt;
      &lt;td&gt;3.425306&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Protein&lt;/th&gt;
      &lt;td&gt;249.466942&lt;/td&gt;
      &lt;td&gt;1694.715664&lt;/td&gt;
      &lt;td&gt;6.059888&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div&gt;
&lt;style&gt;
    .dataframe thead tr:only-child th {
        text-align: right;
    }

    .dataframe thead th {
        text-align: left;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }
&lt;/style&gt;
&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;var&lt;/th&gt;
      &lt;th&gt;CV&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;mRNA&lt;/th&gt;
      &lt;td&gt;10.688117&lt;/td&gt;
      &lt;td&gt;9.27994&lt;/td&gt;
      &lt;td&gt;3.508558&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Protein&lt;/th&gt;
      &lt;td&gt;257.408644&lt;/td&gt;
      &lt;td&gt;1726.12629&lt;/td&gt;
      &lt;td&gt;6.195650&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div&gt;
&lt;style&gt;
    .dataframe thead tr:only-child th {
        text-align: right;
    }

    .dataframe thead th {
        text-align: left;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }
&lt;/style&gt;
&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;var&lt;/th&gt;
      &lt;th&gt;CV&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;mRNA&lt;/th&gt;
      &lt;td&gt;10.467691&lt;/td&gt;
      &lt;td&gt;8.531862&lt;/td&gt;
      &lt;td&gt;3.583678&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Protein&lt;/th&gt;
      &lt;td&gt;255.014802&lt;/td&gt;
      &lt;td&gt;1703.876616&lt;/td&gt;
      &lt;td&gt;6.177977&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;13.7 s ± 225 ms per loop (mean ± std. dev. of 3 runs, 1 loop each)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_env&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NUMBA_DISABLE_JIT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#os.environ[&quot;NUMBA_DISABLE_JIT&quot;] = &quot;0&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timeit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ssa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;simulate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_paths&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style&gt;
    .dataframe thead tr:only-child th {
        text-align: right;
    }

    .dataframe thead th {
        text-align: left;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }
&lt;/style&gt;
&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;var&lt;/th&gt;
      &lt;th&gt;CV&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;gene&lt;/th&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;mRNA&lt;/th&gt;
      &lt;td&gt;10.999584&lt;/td&gt;
      &lt;td&gt;11.375058&lt;/td&gt;
      &lt;td&gt;3.261365&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Protein&lt;/th&gt;
      &lt;td&gt;263.212386&lt;/td&gt;
      &lt;td&gt;2612.338753&lt;/td&gt;
      &lt;td&gt;5.149814&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div&gt;
&lt;style&gt;
    .dataframe thead tr:only-child th {
        text-align: right;
    }

    .dataframe thead th {
        text-align: left;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }
&lt;/style&gt;
&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;var&lt;/th&gt;
      &lt;th&gt;CV&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;gene&lt;/th&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;mRNA&lt;/th&gt;
      &lt;td&gt;10.532080&lt;/td&gt;
      &lt;td&gt;10.249184&lt;/td&gt;
      &lt;td&gt;3.289800&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Protein&lt;/th&gt;
      &lt;td&gt;253.934811&lt;/td&gt;
      &lt;td&gt;1920.826411&lt;/td&gt;
      &lt;td&gt;5.793996&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div&gt;
&lt;style&gt;
    .dataframe thead tr:only-child th {
        text-align: right;
    }

    .dataframe thead th {
        text-align: left;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }
&lt;/style&gt;
&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;var&lt;/th&gt;
      &lt;th&gt;CV&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;gene&lt;/th&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;mRNA&lt;/th&gt;
      &lt;td&gt;10.366590&lt;/td&gt;
      &lt;td&gt;9.328903&lt;/td&gt;
      &lt;td&gt;3.394069&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Protein&lt;/th&gt;
      &lt;td&gt;249.273439&lt;/td&gt;
      &lt;td&gt;1465.737686&lt;/td&gt;
      &lt;td&gt;6.511003&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2.41 s ± 580 ms per loop (mean ± std. dev. of 3 runs, 1 loop each)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Martin Holub</name></author><category term="ETH" /><category term="projects" /><category term="code" /><summary type="html">Source Introduction Genetically engineered cells and organisms are being used to produce array of commonplace commercial products including drugs and materials. Biological engineering is being employed to enhance nutrition content of various foods and yield of crops. Recently, lab-grown meat represents an interesting alternative to traditional production and synthetic biology is being explored even by artists. These successes are, however, just baby steps in face of the richness and complexity of “products” nature is so adept in engineering. Like what you ask? Like YOU, for example. In the meantime, development is ongoing at rapid pace. We are getting finer understanding of molecular-scale processes by which the life is implemented and by extension, we are becoming more adept in exercising control over them. Biology is becoming easier to analyze and design using established engineering approaches. At different system levels, from molecular to cellular to populational, mathematical modeling and abstraction in design are becoming possible. (If this abstraction thing is too abstract for you, think about this as if in your Arduino project (like this one) you had to build and debug the microcontroller first. Before you could do that, you would have to do the same for all the resistors, transistors and other elements of the board. Instead, and luckily, you just need to have the board shipped and plug it into your laptotp to boot it up. You don’t have to think of all the possibly very intricate details that make it work and can focus on building some application on top of it. This is the power of abstraction in design when put to work.). This is exciting, fun and hugely relevant because, take it from Elon Musk Steve Jobs: […] the biggest innovations of the 21st century will be at the intersection of biology and technology. Of course this topic is about as broad as an average statement of a politician so I will not try to cover it all here (If you are interested in some slightly more scientific peek into the topic, a good place to start is this video where Chris Voigt first gives general of the field and later explains his idea of programming genetic circuits the way we program computers), rather I want to focus on the mathematical modeling part. I find it really nice how this helps me to think about the biological process in more rigorous and engineering way and believe you may benefit from this as well. First, I will give you lightweight introduction to some theory behind and then show some code I wrote for simulating simple transcription and translation processes. It is all on github so feel free to grab it afterwards to have some fun with it. Biochemical Reaction Systems Illustrative example of copy numbers at different levels of biochemical hierarchy. Low copy numbers, i.e. these at genome to proteome levels, are affected by stochasticity and cannot be faithfully modeled using Ordinary Differential Equation (ODE) models. In what follows we are looking at distinct biochemical species present in a cell. Additionally, these species are present in low copy numbers that are significantly influenced by stochastic (random) events. You can think about this as having a big parking lot under your kitchen window (poor you) and not having a calendar. In the morning when you make your breakfast, you can very reliably say if it is a normal working day or a public holiday based on occupancy of the parking lot. Conversely, you friend, who has just two parking places within sight of his kitchen window cannot make a good guess of whether it is a public holiday or not based on if the two spots are empty. This could just as well be because somebody’s child got sick (which is as random event as it gets). In biology, there are multiple sources of such randomness, including external environmental perturbations and inherent stochasticity stemming from statistical thermodynamics of molecular reactions. To account for this, we leave the familiar realm of concentrations and enter the world of single-molecule counts. In mathematical terms this means, that instead of writing differential equations for average concentration levels, we keep track of individual reaction events that have some probability of occurring on some time interval. Conceptually, the modeling framework is depicted in the following figure: Conceptual modeling framework for biochemical reaction systems. TX and TL refer to transcription and translation respectively. (Source) The Chemical Master Equation We want to resolve dynamics of a system at very fine scale both in space and time. Further, the system does not have equilibrium configuration. It turns out that we are interested in probability $P(\mathbf{q}, t)$ of a system to be in microstate $\mathbf{q}$ at time $t$. Microstate is somewhat elusive term, but in the case of chemical reaction systems this is just a vector of number of molecules of each species in the system. Next, we assume that there are $M$ reactions $R_j$, $j = 1, …, M$ in total and that $\boldsymbol{\nu}_j$ is a change in state (i.e. change in number of molecules, e.g. $\pm 1$ for unimolecular reaction) associated with reaction $R_j$. If we look at sufficiently small time interval, we can write $a_j (\mathbf{q})dt$ for the probability that a reaction $j$ “fires” in interval $dt$, given that current microstate of the system is $\mathbf{q}$. The $a_j (\mathbf{q})$ is called propensity function and we have dropped the time dependence as we assume this is accounted for by the dependence on microstate (that itself changes in time). The above definitions allow us to calculate the change of the probability distribution function over an interval $dt$: This may look scary but it really just states that the probability to get to state $\mathbf{q}$ is equal to probability that we are already in that state + the probability that we are one reaction away from that state and the matching reaction fires in the interval $dt$. After dropping higher order terms in $dt$ and simplifying the notation we get: This is the chemical master equation (CME), which is an example of forward Kolmogorov equation for a discrete state, continuous time random process (phew, quite some terminology here). The discrete state here is described by the vector $\mathbf{q}$ with numbers of molecules of species in the system. To be able to calculate anything with it we will need to specify the initial condition $P(\mathbf{q}_0, t_0)$. To help you put this into bigger picture, see the two following figures that show where the CME is positioned with respect to other (more approximate) approaches to model biological system dynamics. Different methods for modeling biochemical reaction systems. (Source) Hierarchy of methods for modeling biochemical reactions. CME - Chemical Master Equation, SSA - Stochastic Simulation Algorithm, CLE - Chemical Langevin Equation, CFPE - Chemical Fokker-Planck Equation, RRE - Reaction Rate Equation. (Source) The main reason for why there is such a wide palette of approaches is because the chemical master equation does not have analytical solution and its numerical solution quickly becomes computationally expensive for systems with more than few distinct species. Its advantage is that building a model from set of reactions is very transparent and straightforward and this is why we will focus on precisely this approach, keeping in mind its limitations. The Stochastic Simulation Algorithm We have already mentioned that CME doesn’t have analytical soltion. The straightforward approach how to obtain some representative description of the system is to draw samples from the probability distribution $P(\mathbf{q}, t ~|~ \mathbf{q}_0, t_0)$ governed by the CME. This is Monte Carlo simulation. We will be able to determine moments of the distribution (e.g. mean and variance) by averaging over many independent realizations of single trajectories (under identical initial conditions). State update To implement this in code, we will follow approach as developed by Daniel Gillespie, i.e. the stochastic simulation algorithm (SSA). Given an arbitrary state $\mathbf{q} = (n_1, n_2, …)$, for computation of the next state we need an index of next reaction that occurs (“fires”) and $\Delta t$ in which this happens. The probability that the next reaction to fire is the reaction $j$ is directly proportional to the corresponding propensity $a_j$ (intuitively, reactions with high reaction rates will occur more often). Therefore finding an index $j$ of such reaction is just matter of drawing a random integer from a weighted distribution on $[1, M]$ where the weights are given as: Note that this is equivalent to drawing a uniform random number on $[0,1]$, scaling it by the total propensity $a = \sum_{i}^{M}a_i$ and finding the first integer $j$ for which this scaled random number is less then $\sum_{i}^{j}a_i$. Time update Finding a $\Delta t$ in which this reaction occurs is more involved. You can find the derivation at the end of this post, but for now we will take for granted that the cumulative distribution function (CDF) for $\Delta t$ is: This is nice because we draw samples from this distribution by drawing a random number $\xi$ on $[0, 1]$ and inverse-sampling from the CDF. In this case, the CDF can be even inverted analytically to obtain: Python code If the previous two sections sounded complicated to you, have no worry, it is actually dead simple to implement them in code: def draw_ssa(propensities, total_prop): &quot;&quot;&quot;Draw random samples according to prescriptions of SSA Parameters ------- propensities: array, propensities of all reactions total_prop: float, total propensity Returns --------- idx: int, index into the state change matrix to determine updated state tau: float, time step size &quot;&quot;&quot; xi1 = np.random.uniform(0,1) prop_rank = np.sort(np.cumsum(propensities)/total_prop) idx = np.int32(np.argmax(prop_rank &amp;gt; xi1)) xi2 = np.random.uniform(0,1) tau = np.float32(1/total_prop * np.log(1/(1-xi2))) return idx, tau The Algorithm Now we are armed for the stochastic simulation algorithm that proceeds as follows: This algorithm is also called Gillespie’s direct method as it was D.T. Gillespie who proved that this method samples from the probability distribution governed by the CME. The method is derived based on first principles. This makes it an exact approach to stochastic simulation, consequently, time step $\tau$ is not mere finite approximation (as in ODE models). Python code Implementation in code is again quite simple: def ssa_routine(k, t_end, q0, nu, psi): &quot;&quot;&quot; Stochastic Simulation Algorithm Performs sampling from distribution governed by chemical master equation. Parameters -------------- k: array, vector stochastic reaction constants t_end: int, number of steps for the simulation q0: array, initial number of molecules for each species nu: ndarray, stoichiometric matrix, with state change vectors in columns psi: ndarray, reactant molecularity matrix Returns -------------- Q: array, all states q at times t time: array, vector of times t tot_props: array, total propensities at times t is_success: bool, flag indicating if simulation ran to completion &quot;&quot;&quot; #Initialize arrays to store states, tick times time = [] t = 0 time.append(t) Q = [] state = q0 Q.append(state) while t &amp;lt; t_end: # Calculate propensities for current state propensities, total_prop = get_propensities(k, state, psi) # Draw random samples for update of state and time step idx, tau = draw_ssa(propensities, total_prop) ## Find random change in state - see theory state = state + nu[idx, :] ## Find random time step size - see theory t = t + tau return Q, time def get_propensities(rates, populations, psi): &quot;&quot;&quot;Return propensities given rates and populations Computes the value of propensity for all reactions. Generalizes to various systems Parameters ---------- rates: array, vector of stochastic reaction constants populations: array, vector of number of molecules of each species Returns --------------- propensities: array, vector of propensiites for all reactions total_propensity: float, sum of all propensiites &quot;&quot;&quot; # See model description propensities = np.empty(psi.shape[0], dtype = np.float32) for r in range(psi.shape[0]): temp = populations ** psi[r,:] propensities[r] = temp.prod() * rates[r] total_propensity = np.float32(propensities.sum()) return propensities, total_propensity The apparent drawback of this method is its computational complexity. As the systems become of somewhat more practical size (larger number of different species), the time step becomes very small (reactions occur often). As on each time step, two random numbers have to be generated, this leads to significant computational cost. To circumvent this issue, approximations of the SSA become useful (see Figure Hierarchy of methods for modeling biochemical reactions). Easy example: The Central Dogma To make this discussion more concrete, let’s look at the minimal example of central dogma of molecular biology. This can be concisely represented as: Here the microstate is simply the vector $\mathbf{q} = (1, n_m, n_p)$, where $n_m$ and $n_p$ are the copy numbers of transcripts and proteins respectively that depend on time. The DNA is present in single copy throughout (as such, we do not need to include it in our calculations, but will do so for consistency). The propensities (or transition probabilities) are: where $\beta_i$ corresponds to production and $\gamma_i$ to degradation. We can see that propensity, in case of unimolecular reaction ($A \rightarrow B$) directly corresponds to the reaction rate constant (Things get only bit more complicated for bimolecular reactions as you will see later). Each state change vector corresponds to one reaction in the system and together they are concatenated as columns of stoichiometric matrix $\mathbf{N}$: The dynamics of the system are described by Chemical master equation (CME) for probability $P\big((n_m, n_p), t\big)$: Phew! This has been quite some theory we have covered, let’s now take a look how we can translate all this into code to simulate a real biological system. Simulation %load_ext autoreload %autoreload 2 import ssa_routine as ssa import numpy as np import matplotlib.pyplot as plt plt.style.use('ggplot') # use &quot;ggplot&quot; style for graphs pltparams = {'legend.fontsize':14,'axes.labelsize':18,'axes.titlesize':18, 'xtick.labelsize':12,'ytick.labelsize':12,'figure.figsize':(7.5,7.5),} plt.rcParams.update(pltparams) Model Parameters We set the initial conditions as following: $DNA$ $mRNAs$ $Proteins$ 1 0 0 For the reaction rates we select: $\beta_m$ $\beta_p$ $\gamma_m$ $\gamma_p$ 10 10 1 0.4 This means, for example, that the “birth” of a molecule of mRNA is 10-times more likely than its “death”. Additionally we define matrix of reactant (species entering each reaction) molecularity $\mathbf{\psi}$: We will also simulate multiple independent evolutions (paths) such that we can obtain mean evolution. mp = ssa.modelParameters(k = np.array([10, 10, 1, .4]), nu = np.array(([0, 1, 0], [0, 0, 1], [0,-1, 0], [0, 0,-1])), psi = np.array(([1, 0, 0], [0, 1, 0], [0, 1, 0], [0, 0, 1])), q0 = np.array([1,0, 0]), t_end = 100, names = [&quot;gene&quot;, &quot;mRNA&quot;, &quot;protein&quot;], dist = [&quot;none&quot;, &quot;poiss&quot;, &quot;gauss&quot;] ) n_paths = 30 np.random.seed(123) ssa.main(mp, n_paths, do_load = 0, do_save = 0) 2018-04-15 09:33:39,299:ssa_routine:INFO: Starting simulation with n_paths=30 2018-04-15 09:34:14,563:ssa_routine:INFO: Calculating statistics for all species. 2018-04-15 09:34:15,376:ssa_routine:INFO: Simulation finished. 2018-04-15 09:34:21,556:ssa_routine:INFO: Program execution finished. mean var CV gene 1.000000 0.000000 0.000000 mRNA 10.431053 10.262420 0.307112 protein 252.870719 2027.642923 0.178073 Results We obtain statistics for distribution of number of species. The mRNAs reach steady-state value of around 10 copies whereas the proteins level off at around 260 copies. The $CV$ is a coefficient of variation, normalized measure of dispersion of a distribution defined as a ratio of standard deviation to mean $CV = \frac{\sigma}{\mu}.$ We can look at the development of species numbers in time in the following plot in the left panel. On the right hand is then all-time histogram estimate of distribution of copy numbers together with empirical cumulative distribution function and KDE - kernel density estimate. We observe that the distribution of number of mRNAs well follows the theoretical Poisson distribution with rate parameter $\lambda = \beta_m$. Temporal evolution of species' copy numbers. Red line indicates mean evolution for 30 independent realizations. Right panel displays marginal distribution for all times both as empirical estimate (histogram and KDE - Kernel Density Estimate) and theoretical predictions (Poisson for mRNAs and Gaussian for proteins). Green line in the right panel represents empirical cumulative distribution function. Note on speed Even in this simple version, the algorithm takes quite some time to finish. I looked into it and improved the performance using numba. You can find details on this in the supplementary note. Advanced Example: Noise Induced Switch OK, once we have the simulation and visualization functions ready and once we can draw samples reasonably fast, we can start working on a more complex model. We will look at set of reactions that will allow us to simulate effects of noise on gene expression levels. In particular we are interested in rapid switching between two significantly different levels of expression. This interesting phenomenon, referred as bistability, is often present in real biological circuits but cannot be captured by a deterministic ODE model. Whereas in previous easy example we may have as well used a deterministic ODE to obtain good estimate of time evolution, in this case we need a stochastic model to get representative picture of system dynamics. The model Reactions $(1a)$ and $(2a)$ represent expression of proteins $P_1$ and $P_2$ originating from genes $G_1$ and $G_2$ ($G_2$ codes for bicistronic mRNA). They reflect the fact that the genes are left unchanged and available for transcription. $(2a)$ and $(2b)$ correspond to protein degradation, where reaction rate is proportional to current number of molecules of given protein $n_i, ~ i={P_1, P_2}$. In equation $(3)$, the expression of protein $P_1$ is inhibited by $P_2$ which binds to promoter region of $G_1$ and acts as inhibitor, forming complex $\xi_1^I$. The expression of from gene $G_2$ is repressed by protein $P_1$ which together form an intermediate transcription-inhibiting complex $\xi_2^{I_1}$ (reaction $(4)$) Protein $P_1$ is inactivated by binding to complex $\xi_2^{I_1}$ and forming $\xi_2^{I_2}$ (reaction $(5)$). Note that reactions $(4)$ and $(5)$ work antagonistically. We will model cooperativity of the enzyme binding sites with: This essentially says that the inhibitory binding to $P_1$ becomes easier after the first complexation reaction. This, at the first sight not very interesting feature of the system, is actually essential in our simulation. Repression with cooperativity is namely one of ways how to achieve switch-like behavior in biological systems. The system in question has 7 distinct biochemical species: $[G_1, P_1, G_2, P_2, \xi_{1}^{I}, \xi_{2}^{I_1}, \xi_{2}^{I_2}]$ and comprises of in total 10 reactions (as we consider each reversible reaction as two). Stochastic reaction constants As previously we will define an array of stochastic reaction rates $k$. We will have to be careful about units here. First, we note that for unimolecular reactions, the reaction rates are identical to the deterministic ones with unit ${min}^{-1}$. This is good because we are already familiar with them from previous example. For bimolecular (two species) reactions, the stochastic reaction rate relates to the reaction rate of deterministic model by scaling with inverse volume $\Omega$. To obtain same units as in the case of unimolecular reaction, we include also scaling by Avogardo’s number $N_A [mol^{-1}]$, such that $\Omega = V\, N_A$ and $k_i = [M \cdot min^{-1}]$. $N_A$ is the old familiar $6.022\cdot10^{23} mol^{-1}.$ For the volume, we make a ballpark estimate for E.coli as a cylinder with diameter $1\mu m$ and length $2\mu m$ yielding $V \approx 1.5 \mu m^3 = 1.5\cdot 10^{-14} dm^3$. For our model, we will select the following values of stochastic reaction constants: $\beta_1$ $\beta_2$ $\gamma_1$ $\gamma_2$ $\kappa_{c1}^{+}$ $\kappa_{c1}^{-}$ $\kappa_{c2}^{+} $ $\kappa_{c2}^{-}$ $\kappa_{c3}^{+}$ $\kappa_{c3}^{-}$ $100$ $1000$ $10$ $4$ $\frac{2}{\Omega}$ $1$ $\frac{4}{\Omega}$ $1$ $\frac{4\sigma}{\Omega}$ $1$ The choice here is less arbitrary then it may look, because only certain parameters of the system will lead to noise-induced switch-like behavior. Here we require $\kappa_{c1}^{-} = \kappa_{c2}^{-} = \kappa_{c3}^{-}$, $2 \kappa_{c1}^{+} = \kappa_{c2}^{+}$ and $\sigma = 10$. This leads to following set of propensities: $a_1$ $a_2$ $a_3$ $a_4$ $a_5$ $a_6$ $a_7$ $a_8$ $a_9$ $a_{10}$ $\beta_1~n_{G1}$ $\beta_2~n_{G2}$ $\gamma_1~n_{P_1}$ $\gamma_2~n_{P_2}$ $\kappa_{c1}^{+}n_{P2}n_{G1}$ $\kappa_{c1}^{-}~\xi_{1}^{I}$ $\kappa_{c2}^{+}n_{P1}n_{G2}$ $\kappa_{c2}^{-}~\xi_{2}^{I_1}$ $\kappa_{c3}^{+}n_{P1}\xi_{2}^{I_1}$ $\kappa_{c3}^{-}~\xi_{2}^{I_2}$ As previously we assume, that DNA does not degrade, although the transcription from it can be inhibited by binding with respective protein (reactions $3$ and $4$). Further we set the initial conditions as following: $G_1$ $P_1$ $G_2$ $P_2$ $\xi_{1}^{I}$ $\xi_{2}^{I_1}$ $\xi_{2}^{I_2}$ 1 10 1 10 0 0 0 Simulation As the code in previous example was written with to be generalizable, we will be able to almost entirely reuse it, we just need to update the model parameters as follows: # Model Parameters sigma = 10 V = 1.5e-14 to_nanomolar = 1e-9 omega = 6.02214086e23*V*to_nanomolar t_end = 30000 k = np.asarray([100, 1000, 10, 4, 2/omega, 1, 4/omega, 1, 4*sigma/omega, 1]) q0 = np.array([ 1, 10,1, 10, 0, 0, 0]) names = [r'$G_1$', r'$P_1$', r'$G_2$', r'$P_2$', r'$\xi_1^{I}$', r'$\xi_2^{I_1}$', r'$\xi_2^{I_2}$'] dist = [&quot;none&quot;]*7 ## State change matrix associated with each reaction nu = np.array([ [0, 1, 0, 0, 0, 0, 0], #G1 -&amp;gt; G1+P1 [0, 0, 0, 2, 0, 0, 0], #G2 -&amp;gt; G2+P2 [0,-1, 0, 0, 0, 0, 0], #P1 -&amp;gt; _ [0, 0, 0,-1, 0, 0, 0], #P2 -&amp;gt; _ [-1,0, 0,-1, 1, 0, 0], #G1+P2 -&amp;gt; C1 [1, 0, 0, 1,-1, 0, 0], #C1 -&amp;gt; G1+P2 [0,-1,-1, 0, 0, 1, 0], #P1+G2 -&amp;gt; C2a [0, 1, 1, 0, 0,-1, 0], #C2a -&amp;gt; P1+G2 [0,-1, 0, 0, 0,-1, 1], #P1+C2a-&amp;gt; C2b [0, 1, 0, 0, 0, 1,-1] #C2b -&amp;gt; P1+C2a ], dtype = np.int) ## Molecularity of species entering each reaction psi = np.array([[1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1]], dtype = np.int) mp_toggle = ssa.modelParameters(k, nu, psi, q0, t_end, names, dist) #Simulation Parameters n_paths = 1 do_load = 0 # default 0 do_save = 1 # default 1 np.random.seed(123) ssa.main(mp_toggle, n_paths, do_load ,do_save) 2018-04-15 09:43:40,516:ssa_routine:INFO: Starting simulation with n_paths=1 2018-04-15 09:43:40,524:ssa_routine:INFO: Start of simulation for path # 1 out of 1. 2018-04-15 09:45:07,171:ssa_routine:INFO: Relative time: 0.20. 2018-04-15 09:46:01,920:ssa_routine:INFO: Relative time: 0.40. 2018-04-15 09:48:00,145:ssa_routine:INFO: Relative time: 0.60. 2018-04-15 09:49:25,028:ssa_routine:INFO: Relative time: 0.80. 2018-04-15 09:52:52,343:ssa_routine:INFO: Data saved to file results~/data/out_20180415-095212. 2018-04-15 09:52:52,605:ssa_routine:INFO: Calculating statistics for all species. 2018-04-15 09:53:29,373:ssa_routine:INFO: Simulation finished. 2018-04-15 09:54:03,614:ssa_routine:INFO: Program execution finished. mean var CV $G_1$ 0.678624 0.218094 0.688165 $P_1$ 7.137714 31.071102 0.780943 $G_2$ 0.320242 0.217687 1.456927 $P_2$ 159.794211 54399.408869 1.459607 $\xi_1^{I}$ 0.321376 0.218094 1.453140 $\xi_2^{I_1}$ 0.005893 0.005858 12.988131 $\xi_2^{I_2}$ 0.673865 0.219771 0.695685 Results From the statistics, we may conclude that there is not much going on in our system, but look at the following plots of temporal evolution of protein copy numbers is more interesting. We see that the system manifests bistability when there are significant and abrupt jumps in copy numbers of both proteins. This is the expected effect of noise-induced switching that is not tractable in deterministic model. The bistable behavior is due to the fact that the copy numbers of the proteins are dependent on presence or absence of complexes $\xi_1^{I}$, $\xi_2^{I_1}$, $\xi_2^{I_2}$ that in turn acquire copy numbers only in set $\{0,1\}$. Such binary state is significantly affected by stochastic events (recall the previous example with parking lot). Copy number evolution for proteins 1 and 2. Both species exhibit bistability in state space that is the best seen in the marginal distribution on the right panel. Although the copy numbers are mostly around 10 and 0, this can suddenly and randomly change to 0 and 500 for proteins 1 and 2 respectively. Conclusion If you have made it all the way here, pat yourself on the back. It has been quite some math we have covered and it allows you to faithfully simulate dynamical systems as intriguing and complicated as genetic circuits. Now you know something about the phenomenon of bistability, which is a crucial element of building a toggle-switch, one of the elemental parts in synthetic-biology. You also understand the important role of noise in gene expression and that the inherent stochasticity is not purely a complication in our design but can be efficiently exploited to drive patterns in molecular ‘decision-making’. In addition to Stochastic Simulation Algorithm, you are now also aware of other, more approximate, approaches for modeling biochemical (or other stochastic) systems like Chemical Langevin or Fokker-Planck equations that can allow you to inspect systems of larger size. Last but not least, after inspecting the code in the github repository, you will have seen examples of some advanced python capabilities including function decorators, just-in-time compilation and logging. I hope reading this post was as enjoyable for you as much as it was for me to write it. If you feel like you want to find more about the exciting field of synthetic biology, you can start with this video. In any case, stay tuned for upcoming posts on cool interdisciplinary and engineering topics. Suplementary Notes Time step size derivation for SSA Define $p(\tau, j |\mathbf{q}, t)d\tau$ as the probability that the reaction $j$ occurs in the time interval $[t + \tau, t + \tau + d\tau]$, then we have: where $P_0 (\tau ~|~ \mathbf{q}, t)$ is the probability that no reaction fires on time interval $[t, \tau + t]$. We note that starting time $t$ is arbitrary and we may set it to zero. Corresponding probability that no reaction occurs in time interval $[t + \tau, t + \tau + d\tau]$: where $a = \sum_{i}^{M}a_i.$ It then immediately follows that: Solving this differential equation with initial condition $P_0 (0\ | \mathbf{q}, t) = 1$ yields: Going back to previous definition, this gives us: To obtain index of next reaction $j$ we marginalize over all $\tau$ and obtain: Similarly, to find time that next reaction occurs, we integrate over all reactions $j$ and obtain: The probability that the reaction occurs on time interval $[0, \Delta t]$ is then given by the cumulative distribution function (CDF): The CDF is bounded on $[0, 1]$ and we can easily generate samples from corresponding PDF by inverse-sampling when we draw uniformly distributed numbers $\xi$ which finally yields: as stated before. Optimizing the sampling in SSA The computational burden of the direct method for SSA hits us pretty early. This can be troubling as it prolongs development cycles and limits number of species we can track. To alleviate this at least marginally, we can try to speed up our current code without making any conceptual changes to what is being computed and how (in contrast to more approximate approaches like Chemical Langevin Equation(CLE) and Fokker-Planck Equation (FPE)). Use profiler to find where the most time is spent First, we profile our code to see where the most time is being spend. %load_ext line_profiler import ssa_routine as ssa import os %lprun -T profiler.out -f ssa.ssa_routine ssa.ssa_routine(mp.k, mp.t_end, mp.q0, mp.nu, mp.psi) \*\*\* Profile printout saved to text file 'profiler.out'. Timer unit: 4.46227e-07 s Total time: 3.26368 s Function: ssa_routine at line 92 Line # Hits Time Per Hit % Time Line Contents ============================================================== 92 def ssa_routine(k, t_end, q0, nu): 119 20580 71930 3.5 1.0 while t &amp;lt; t_end: 120 20579 2325960 113.0 31.8 propensities, total_prop = get_propensities(k, state) 125 # Draw random samples for update of state and time step 126 20579 3574266 173.7 48.9 idx, tau = draw_ssa(propensities, total_prop) 141 1 3 3.0 0.0 return Q, time Use numba to speed up the calculations We have found out that absolute majority of the time is spent in computing propensities and drawing samples for update with a respective reaction in given time interval. Unsurprisingly, as these occur on each and every time-step. Clearly, we can get the most ‘bang for the buck’ by making these two steps faster. To this end, we place them into individual functions and use numba’s @jit decorator for just-in-time (JIT) compilation. This allows us to get about five-fold speed-up in calculations which I think is fair given the simplicity of implementation. This boils down to decorating the function as: @numba.jit(nopython = True) def some_function(x, y): return x + y Here is the speed comparison: %set_env NUMBA_DISABLE_JIT=1 #os.environ[&quot;NUMBA_DISABLE_JIT&quot;] = &quot;1&quot; %timeit -n 1 -r 3 ssa.simulate(mp, n_paths) mean var CV mRNA 10.394067 9.208149 3.425306 Protein 249.466942 1694.715664 6.059888 mean var CV mRNA 10.688117 9.27994 3.508558 Protein 257.408644 1726.12629 6.195650 mean var CV mRNA 10.467691 8.531862 3.583678 Protein 255.014802 1703.876616 6.177977 13.7 s ± 225 ms per loop (mean ± std. dev. of 3 runs, 1 loop each) %set_env NUMBA_DISABLE_JIT=0 #os.environ[&quot;NUMBA_DISABLE_JIT&quot;] = &quot;0&quot; %timeit -n 1 -r 3 ssa.simulate(mp, n_paths) mean var CV gene 1.000000 0.000000 NaN mRNA 10.999584 11.375058 3.261365 Protein 263.212386 2612.338753 5.149814 mean var CV gene 1.000000 0.000000 NaN mRNA 10.532080 10.249184 3.289800 Protein 253.934811 1920.826411 5.793996 mean var CV gene 1.000000 0.000000 NaN mRNA 10.366590 9.328903 3.394069 Protein 249.273439 1465.737686 6.511003 2.41 s ± 580 ms per loop (mean ± std. dev. of 3 runs, 1 loop each)</summary></entry><entry><title type="html">Kdo vydělá na českém penzijním připojištění?</title><link href="http://www.martinholub.com//cze/2018/02/24/3pilir.html" rel="alternate" type="text/html" title="Kdo vydělá na českém penzijním připojištění?" /><published>2018-02-24T18:42:00+01:00</published><updated>2018-02-24T18:42:00+01:00</updated><id>http://www.martinholub.com//cze/2018/02/24/3pilir</id><content type="html" xml:base="http://www.martinholub.com//cze/2018/02/24/3pilir.html">&lt;div class=&quot;img_row&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/header1_3pilir.jpg&quot; alt=&quot;&quot; title=&quot;tretipilir&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
Zdroj: Colourbox.de
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;V následujícím článku popisuji modelový příklad s omezenou platností, a to vzhledem k tomu, že zde operuji s časovým horizontem 40 let během něhož je nepochybné, že se popisované podmínky několikrát změní. Berte jej tedy prosím s rezervou.&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Po dlouhé době se k vám zase vracím s článkem na blogu. Mám mnoho věcí, o které bych se s vámi chtěl podělit, ale v tuto chvíli se omezím jen na jedno téma. Téma, o které mi není zrovna vlastní, ale o kterém jsem přesvědčen, že bude pro každého zajímavé a užitečné, a to sice téma spoření.&lt;/p&gt;

&lt;p&gt;Pomalu se blížím ke konci studia (jupí!!) a už docela těším na dobu, kdy zjistím, jaké to je mít nějaký trvalý příjem. Dlouhá léta jako student mne vycvičila v tom vystačit si s málem, a tak jakákoliv výplata budí pocit že snad i budu mít více peněz, než bych potřeboval. Přirozeně mi tedy na mysl přichází otázka – kam s nimi? Pochopitelně, koupím si nějakou ptákovinu, která mi vlastně k ničemu nebude a kterou s radostí za pár let vychodím nebo někomu věnuji. Co ale s tím zbytkem? No jasně, spořit!&lt;/p&gt;

&lt;h3 id=&quot;penzijní-připojištění&quot;&gt;Penzijní připojištění&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
Jo spořit, ale kde? Třetí pilíř aneb doplňkové penzijní spoření (DPS), aneb penzijní připojištění vypadá okamžitě lákavě – 230 Kč od státu měsíčně ke každé tisícikoruně, potencionální daňové úlevy při vyšších příspěvcích a zhodnocení i 6 % ročně … no pecka! Ale spořit na důchod už teď? No proč ne, s ohledem na pokroky ve zdravotnictví mi hrozí pěkně dlouhé stáří a každá koruna se bude určitě hodit.&lt;/p&gt;

&lt;p&gt;DPS nabízí hned několik poskytovatelů, tak jakého vybrat? Vyhledávač snadno vyplivne tucet článků porovnávajících zhodnocení za poslední rok a velikost fondů. Asi tak užitečné jako předpověď počasí na minulý týden. Většina článků, přestože publikovaná médi, působí spíš jako reklama. V nejlepším případě se pokouší o podprahovost. Když konečně narazím na něco, co vypadá alespoň &lt;a href=&quot;https://www.investujeme.cz/clanky/poplatky-penzijnich-spolecnosti-zakon-stanovil-latku/&quot; target=&quot;_blank&quot;&gt;trochu&lt;/a&gt; &lt;a href=&quot;https://www.finance.cz/duchody-a-davky/penzijni-pripojisteni/srovnani-ucastnickych-fondu/&quot; target=&quot;_blank&quot;&gt;objektivně&lt;/a&gt; tak je to zastaralé.&lt;/p&gt;

&lt;p&gt;No nevadí, vyhrnu si rukávy a vydám se tedy na weby jednotlivých společností nabízejících DPS (AXA, Allianz, PSČS, ČSOB, NN, Conseq, KB, …). Firmy většinou nabízí několik typů fondů. S mým časovým horizontem (velmi dlouhý) mne zajímají jen ty dynamické aka růstové, tedy ty s největším podílem akcií. Do oka mi hned padnou kalkulačky penzijního připojištění! To je přesně to, co potřebuju! Plánuji spořit 40 let, 1000 Kč každý měsíc, tak abych maximalizoval příspěvek do státu, tedy 230 Kč a takto se snadno dozvím kolik z toho bude. Postupně vyzkouším všechny kalkulačky a výsledná částka spadá do intervalu 1.2–2.4 miliónu Kč … něco mi tu nehraje – částky jsou líbivé, to ano ale co ten rozptyl?&lt;/p&gt;

&lt;div class=&quot;img_row&quot;&gt;
    &lt;a href=&quot;/img/overview.png&quot; target=&quot;_blank&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/overview.png&quot; alt=&quot;&quot; title=&quot;Prehled&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
Přehled různých nabídek doplňkového penzijního spoření
&lt;/div&gt;

&lt;h3 id=&quot;něco-tady-nehraje&quot;&gt;Něco tady nehraje&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
Pátrám na webech po informacích o poplatcích. Všude jen chvalozpěvy na zhodnocení, státní příspěvky a daňové úlevy.  Žádná společnost takovéto podstatné informace neumístila na hlavní stranu produktu. Nakonec ale tyto informace nacházím, krčit se v nějakém PDF. Čeká na mne nepříjemné překvapení. Poplatky jsou všude stejné a stejně nehorázné – 1 % za vedení a 15 % z výnosu, navrch ještě poplatek 800 Kč za případnou změnu poskytovatele. Vivat konkurence! Že by nebylo třeba o zákazníka bojovat?&lt;/p&gt;

&lt;p&gt;No dobrá, to ale pořád nevysvětluje ten rozptyl u očekávané uspořené částky, najdu tedy &lt;a href=&quot;https://www.finance.cz/duchody-a-davky/kalkulacky-a-aplikace/doplnkove-penzijni-sporeni/&quot; target=&quot;_blank&quot;&gt;nezávislou kalkulačku na jiném webu&lt;/a&gt;, která umožnuje zadat libovolnou výši zhodnocení, v našem případě 3.39-6.05 % p.a., výsledné výpočty většinou sedí, plus mínus nějaké to procento (takřka výhradně ve prospěch kalkulaček na webech poskytovatelů). To znamená, že rozptyl je vlivem rozdílného očekávaného zhodnocení. To je v pořádku. To je ale asi tak jediná věc, která je v pořádku. Ta nezávislá kalkulačka v hlavičce totiž upozorňuje na skutečnost, že do výsledku nejsou započítány žádné poplatky ani daně. Výsledek po zdanění je uveden separátně. Komerční kalkulačky toto však nedělají&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;, a tedy prezentují klamavé informace, a to bez jakéhokoliv upozornění. A to už, nezlobte se, to už pomalu přestává být vtipné. V první řadě fakt, že něco takového je vůbec legální.&lt;/p&gt;

&lt;div class=&quot;img_row&quot; style=&quot;max-width: 80%;&quot;&gt;
    &lt;a href=&quot;/img/financecz.png&quot; target=&quot;_blank&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/financecz.png&quot; alt=&quot;&quot; title=&quot;Kalkulacka&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
Kalkulačka penzijního připojištění z webu &lt;a href=&quot;https://www.finance.cz/duchody-a-davky/kalkulacky-a-aplikace/doplnkove-penzijni-sporeni/&quot; target=&quot;_blank&quot;&gt;finance.cz&lt;/a&gt;
&lt;/div&gt;

&lt;h3 id=&quot;kdo-na-tom-vydělá&quot;&gt;Kdo na tom vydělá?&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
Po nějaké době je pocit rozhořčení nahrazen zvědavostí – jak tedy asi vypadají skutečné výnosy po započtení poplatků a daní? Pro tohle už jsem žádnou kalkulačku na webu nenašel, a tak jsem vytáhnul kód z webu předešlé nezávislé kalkulačky&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;, &lt;a href=&quot;https://docs.google.com/spreadsheets/d/1TqeApKqU_tCmNqKlq_v9hcn9BKmUiRMe05DWSVdMlAk/edit?usp=sharing&quot; target=&quot;_blank&quot;&gt;transformoval ho do spreadsheetu a doplnil ho o vliv poplatků poskytovateli DPS&lt;/a&gt;. A výsledek? Na třetím pilíři někdo zbohatne ale já ani vy ani stát to nebudeme. Vezměme si příklad v současnosti nejatraktivnějšího DPS, s očekávaným zhodnocením 6.05 % p.a. nás kalkulačka poskytovatele navnadila na úsporu 2‘384‘000 Kč. Po započtení poplatků a zdanění je ale skutečná úspora 1‘346‘600 Kč a pojišťovně připadne krásných 909‘000 Kč. V případě nejnižšího uvažovaného zhodnocení, 3.39 % p.a., se pak slibovaná částka 1‘219‘000 Kč změní v 838‘000 Kč a poskytovatel na nás vydělá „pouze“ 359‘500 Kč. Dobrej deal ne?&lt;/p&gt;

&lt;div class=&quot;img_row&quot;&gt;
    &lt;a href=&quot;/img/conseq_results.png&quot; target=&quot;_blank&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/conseq_results.png&quot; alt=&quot;&quot; title=&quot;max_zhodnoceni&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
Dynamický fond DPS s nejvyšším očekávaným ročním zhodnocením
&lt;/div&gt;

&lt;div class=&quot;img_row&quot;&gt;
    &lt;a href=&quot;/img/kb_results.png&quot; target=&quot;_blank&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/kb_results.png&quot; alt=&quot;&quot; title=&quot;min_zhodnoceni&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
Dynamický fond DPS s nejnižším očekávaným ročním zhodnocením
&lt;/div&gt;

&lt;h3 id=&quot;třetí-pilíř-ve-švýcarsku&quot;&gt;Třetí pilíř ve Švýcarsku&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
Tyhle čísla pro mne jsou jen těžko k uvěření, no ale kdo ví, třeba je to normální? Abych se o tomhle přesvědčil anebo to vyvrátil, použil jsem stejnou hodnotu pro teoretický očekávaný roční výnos jako v prvním případě (6.05 %) a aplikoval ji v případě Švýcarska.  Vybral jsem dle mého názoru v současnosti &lt;a href=&quot;https://viac.ch/&quot; target=&quot;_blank&quot;&gt;nejlepšího poskytovatele 3. pilíře&lt;/a&gt; a uvažoval případ svobodného člověka žijícího v Curychu (zdanění v případě vybrání 3. pilíře ve Švýcarsku &lt;a href=&quot;https://www.postfinance.ch/de/privat/support/tools-rechner/besteuerung-kapitalauszahlung.html&quot; target=&quot;_blank&quot;&gt;závisí na několika faktorech&lt;/a&gt; mezi něž patří bydliště, výška úspory, rodinný status a příslušnost k církvi). Veškeré částky ponechávám v českých korunách, měsíční spořená částka i doba spoření zůstává také beze změny. A výsledek? Čisté úspory 1‘572‘000 Kč po 40 letech. K tomu 1‘800 Kč ročně jakožto sleva na dani (72‘000 Kč za 40 let). Poskytovateli pojištění připadne pak 233‘000 Kč.&lt;/p&gt;

&lt;div class=&quot;img_row&quot; style=&quot;max-width: 80%;&quot;&gt;
    &lt;a href=&quot;/img/viac_global80.png&quot; target=&quot;_blank&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/viac_global80.png&quot; alt=&quot;&quot; title=&quot;viac&quot; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
Nabídka 3. pilíře penzijního spoření od nejatraktivnějšího švýcarského poskytovatele
&lt;/div&gt;

&lt;h3 id=&quot;penzijní-připojištění-ne-děkuji&quot;&gt;Penzijní připojištění? Ne děkuji.&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
Systém spoření ve třetím pilíři, jak je nastavený v ČR očividně normální není. Je zcela zřejmé, že takovýto systém není šitý na míru zákazníkovi, nýbrž poskytovateli. Vypadá to, že snad alespoň stát na tom neprodělá. Do fondu DPS přispěje každý měsíc (celkem 40*12*230 = 110‘400 Kč) s teoretickou vidinou, že zhruba stejnou celkovou částku od vás dostane zpět na daních za 40 let (v případě očekávaného průměrného ročního zhodnocení 6.05 % to je 133‘400 Kč&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;). Takže nula od nuly pojde? Zdaleka ne. Tyhle dvě částky totiž vůbec nejsou ekvivalentní. Čistě orientačně, při průměrné meziroční inflaci 2.63 % (&lt;a href=&quot;https://www.czso.cz/csu/czso/2-inflace_1994_&quot; target=&quot;_blank&quot;&gt;průměr za posledních 20 let&lt;/a&gt;) byste státu měli za 20 let (zde polovina doby spoření) vrátit 185‘000 Kč za 40 let už 315‘000 Kč (viz &lt;a href=&quot;https://www.finance.cz/makrodata-eu/kalkulacky-aplikace/inflace/&quot; target=&quot;_blank&quot;&gt;kalkulačka inflace&lt;/a&gt;). Takže stát defacto poskytuje bezúroční půjčku poskytovateli spoření, který pod vaším jménem peníze investuje a značnou část výnosů si ponechá. Kdybych byl penzijní pojišťovna tak vrním.&lt;/p&gt;

&lt;p&gt;Pro mne osobně z toho plyne jednoduchý závěr, v DPS peníze neutápět.  Neberte toto však okamžitě jako doporoučení pro vás. V tomto modelovém příkladu jsem nevzal v úvahu několik věcí – díky DPS můžete dosáhnout na jisté daňové úlevy. Pokud zvolíte ve stáří výplatu penze po dobu více než 10 let, pak je tato, podle současného znění zákona (!) &lt;a href=&quot;http://www.financnisprava.cz/cs/dane/dane/dan-z-prijmu/fyzicke-osoby-poplatnik/ostatni#osvob-prijmy&quot; target=&quot;_blank&quot;&gt;osvobozena od daně&lt;/a&gt;. Dále vám také může ke spoření přispívat zaměstnavatel a tento příspěvek na vstupu (!) &lt;a href=&quot;https://www.uctovani.net/clanek.php?t=Benefity-prispevek-zamestnavatele-na-penzijni-pripojisteni-a-soukrome-zivotni-pojisteni&amp;amp;idc=203&quot; target=&quot;_blank&quot;&gt;nepodléhá odvodům ani zdanění&lt;/a&gt; (do 30‘000 Kč ročně). Pokud máte silný žaludek tak s pomocí mého spreadsheetu můžete sami vyzkoušet, jak se výsledná situace změní při různých scénářích. Možná, že ve vašem konkrétním případě se to skutečně vyplatí? Na každý pád si ale takový závazek předem dobře zvažte a každou nabídku kriticky zhodnoťte.&lt;/p&gt;

&lt;h3 id=&quot;není-co-zkazit&quot;&gt;Není co zkazit!&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
Situace vypadá černě a je snadné utápět se v pesimismu.  Myslím si ale, že bychom to měli vidět z jiného pohledu – takový fantastický potenciál pro zlepšení! Vím, že vy, kteří čtete tento blog máte kvalitní vzdělání, jste velmi inteligentní, často jste žili/pracovali/studovali v zahraničí a máte chuť realizovat se v projektech které vám osobně dávají smysl. Třeba vás anebo někoho z vašich přátel skutečně baví &lt;a href=&quot;https://en.wikipedia.org/wiki/Financial_technology&quot; target=&quot;_blank&quot;&gt;FinTech&lt;/a&gt; a chtěli byste rozjet vlastní projekt který vytvoří nějakou reálnou konkurenci zavedeným hráčům? Tohle vypadá jako dobrá příležitost. Nebo máte jen chvilku volna a je pro vás snadné doplnit onu &lt;a href=&quot;https://www.finance.cz/duchody-a-davky/kalkulacky-a-aplikace/doplnkove-penzijni-sporeni/&quot; target=&quot;_blank&quot;&gt;nezávislou webovou kalkulačku&lt;/a&gt; o vliv poplatků, tak jak je to uděláno v mém &lt;a href=&quot;https://docs.google.com/spreadsheets/d/1TqeApKqU_tCmNqKlq_v9hcn9BKmUiRMe05DWSVdMlAk/edit?usp=sharing&quot; target=&quot;_blank&quot;&gt;spreadsheetu&lt;/a&gt;? Anebo máte nějaký úplně jiný vlastní nápad, jak změnit něco ve vašem okolí co vám v současnosti připadá přinejmenším stejně pitomé? Pak do toho a udělejte první krok dnes! Zkazit rozhodně nic nemůžete!
&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;Nejsem certifikovaný finanční poradce ani nemám ekonomické vzdělání. Zde vyjadřuji pouze své osobní názory. Jedná se jen o modelový příklad. Nemohu být zodpovědný za vaši případnou finanční ztrátu. Přestože jsem udělal vše pro to, aby zde prezentované informace byly správné, je možné že jsem někde udělal chybu. Pokud ji najdete, budu vděčný dáte-li mi vědět!&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;ČSOB vypadá být světlou výjimkou, když alespoň jasně avizují že částka odpovídající výnosům bude při vybrání zdaněna. Protože ale neuvádí, s jakým očekávaným ročním výnosem je počítáno, není snadné ověřit, zda jsou do výsledku započítány jakékoliv poplatky. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;Svůj přístup jsem ověřil tím, že ze stejných vstupných hodnot dostanu stejné výsledky v spreadsheetu na webu. Pokud si chcete výpočty ověřit, doporučuji vzorečky si sami odvodit, zabere vám to jen chvilku. &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;V případě teoretického zhodnocení 3.39 % p.a. pak daň z výnosu po 40 letech spoření činí 43‘000 Kč, tedy asi 40 % částky kterou do vás stát investoval. &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Martin Holub</name></author><category term="CZE" /><category term="personal-finance" /><summary type="html">Zdroj: Colourbox.de V následujícím článku popisuji modelový příklad s omezenou platností, a to vzhledem k tomu, že zde operuji s časovým horizontem 40 let během něhož je nepochybné, že se popisované podmínky několikrát změní. Berte jej tedy prosím s rezervou. Po dlouhé době se k vám zase vracím s článkem na blogu. Mám mnoho věcí, o které bych se s vámi chtěl podělit, ale v tuto chvíli se omezím jen na jedno téma. Téma, o které mi není zrovna vlastní, ale o kterém jsem přesvědčen, že bude pro každého zajímavé a užitečné, a to sice téma spoření. Pomalu se blížím ke konci studia (jupí!!) a už docela těším na dobu, kdy zjistím, jaké to je mít nějaký trvalý příjem. Dlouhá léta jako student mne vycvičila v tom vystačit si s málem, a tak jakákoliv výplata budí pocit že snad i budu mít více peněz, než bych potřeboval. Přirozeně mi tedy na mysl přichází otázka – kam s nimi? Pochopitelně, koupím si nějakou ptákovinu, která mi vlastně k ničemu nebude a kterou s radostí za pár let vychodím nebo někomu věnuji. Co ale s tím zbytkem? No jasně, spořit! Penzijní připojištění Jo spořit, ale kde? Třetí pilíř aneb doplňkové penzijní spoření (DPS), aneb penzijní připojištění vypadá okamžitě lákavě – 230 Kč od státu měsíčně ke každé tisícikoruně, potencionální daňové úlevy při vyšších příspěvcích a zhodnocení i 6 % ročně … no pecka! Ale spořit na důchod už teď? No proč ne, s ohledem na pokroky ve zdravotnictví mi hrozí pěkně dlouhé stáří a každá koruna se bude určitě hodit. DPS nabízí hned několik poskytovatelů, tak jakého vybrat? Vyhledávač snadno vyplivne tucet článků porovnávajících zhodnocení za poslední rok a velikost fondů. Asi tak užitečné jako předpověď počasí na minulý týden. Většina článků, přestože publikovaná médi, působí spíš jako reklama. V nejlepším případě se pokouší o podprahovost. Když konečně narazím na něco, co vypadá alespoň trochu objektivně tak je to zastaralé. No nevadí, vyhrnu si rukávy a vydám se tedy na weby jednotlivých společností nabízejících DPS (AXA, Allianz, PSČS, ČSOB, NN, Conseq, KB, …). Firmy většinou nabízí několik typů fondů. S mým časovým horizontem (velmi dlouhý) mne zajímají jen ty dynamické aka růstové, tedy ty s největším podílem akcií. Do oka mi hned padnou kalkulačky penzijního připojištění! To je přesně to, co potřebuju! Plánuji spořit 40 let, 1000 Kč každý měsíc, tak abych maximalizoval příspěvek do státu, tedy 230 Kč a takto se snadno dozvím kolik z toho bude. Postupně vyzkouším všechny kalkulačky a výsledná částka spadá do intervalu 1.2–2.4 miliónu Kč … něco mi tu nehraje – částky jsou líbivé, to ano ale co ten rozptyl? Přehled různých nabídek doplňkového penzijního spoření Něco tady nehraje Pátrám na webech po informacích o poplatcích. Všude jen chvalozpěvy na zhodnocení, státní příspěvky a daňové úlevy. Žádná společnost takovéto podstatné informace neumístila na hlavní stranu produktu. Nakonec ale tyto informace nacházím, krčit se v nějakém PDF. Čeká na mne nepříjemné překvapení. Poplatky jsou všude stejné a stejně nehorázné – 1 % za vedení a 15 % z výnosu, navrch ještě poplatek 800 Kč za případnou změnu poskytovatele. Vivat konkurence! Že by nebylo třeba o zákazníka bojovat? No dobrá, to ale pořád nevysvětluje ten rozptyl u očekávané uspořené částky, najdu tedy nezávislou kalkulačku na jiném webu, která umožnuje zadat libovolnou výši zhodnocení, v našem případě 3.39-6.05 % p.a., výsledné výpočty většinou sedí, plus mínus nějaké to procento (takřka výhradně ve prospěch kalkulaček na webech poskytovatelů). To znamená, že rozptyl je vlivem rozdílného očekávaného zhodnocení. To je v pořádku. To je ale asi tak jediná věc, která je v pořádku. Ta nezávislá kalkulačka v hlavičce totiž upozorňuje na skutečnost, že do výsledku nejsou započítány žádné poplatky ani daně. Výsledek po zdanění je uveden separátně. Komerční kalkulačky toto však nedělají1, a tedy prezentují klamavé informace, a to bez jakéhokoliv upozornění. A to už, nezlobte se, to už pomalu přestává být vtipné. V první řadě fakt, že něco takového je vůbec legální. Kalkulačka penzijního připojištění z webu finance.cz Kdo na tom vydělá? Po nějaké době je pocit rozhořčení nahrazen zvědavostí – jak tedy asi vypadají skutečné výnosy po započtení poplatků a daní? Pro tohle už jsem žádnou kalkulačku na webu nenašel, a tak jsem vytáhnul kód z webu předešlé nezávislé kalkulačky2, transformoval ho do spreadsheetu a doplnil ho o vliv poplatků poskytovateli DPS. A výsledek? Na třetím pilíři někdo zbohatne ale já ani vy ani stát to nebudeme. Vezměme si příklad v současnosti nejatraktivnějšího DPS, s očekávaným zhodnocením 6.05 % p.a. nás kalkulačka poskytovatele navnadila na úsporu 2‘384‘000 Kč. Po započtení poplatků a zdanění je ale skutečná úspora 1‘346‘600 Kč a pojišťovně připadne krásných 909‘000 Kč. V případě nejnižšího uvažovaného zhodnocení, 3.39 % p.a., se pak slibovaná částka 1‘219‘000 Kč změní v 838‘000 Kč a poskytovatel na nás vydělá „pouze“ 359‘500 Kč. Dobrej deal ne? Dynamický fond DPS s nejvyšším očekávaným ročním zhodnocením Dynamický fond DPS s nejnižším očekávaným ročním zhodnocením Třetí pilíř ve Švýcarsku Tyhle čísla pro mne jsou jen těžko k uvěření, no ale kdo ví, třeba je to normální? Abych se o tomhle přesvědčil anebo to vyvrátil, použil jsem stejnou hodnotu pro teoretický očekávaný roční výnos jako v prvním případě (6.05 %) a aplikoval ji v případě Švýcarska. Vybral jsem dle mého názoru v současnosti nejlepšího poskytovatele 3. pilíře a uvažoval případ svobodného člověka žijícího v Curychu (zdanění v případě vybrání 3. pilíře ve Švýcarsku závisí na několika faktorech mezi něž patří bydliště, výška úspory, rodinný status a příslušnost k církvi). Veškeré částky ponechávám v českých korunách, měsíční spořená částka i doba spoření zůstává také beze změny. A výsledek? Čisté úspory 1‘572‘000 Kč po 40 letech. K tomu 1‘800 Kč ročně jakožto sleva na dani (72‘000 Kč za 40 let). Poskytovateli pojištění připadne pak 233‘000 Kč. Nabídka 3. pilíře penzijního spoření od nejatraktivnějšího švýcarského poskytovatele Penzijní připojištění? Ne děkuji. Systém spoření ve třetím pilíři, jak je nastavený v ČR očividně normální není. Je zcela zřejmé, že takovýto systém není šitý na míru zákazníkovi, nýbrž poskytovateli. Vypadá to, že snad alespoň stát na tom neprodělá. Do fondu DPS přispěje každý měsíc (celkem 40*12*230 = 110‘400 Kč) s teoretickou vidinou, že zhruba stejnou celkovou částku od vás dostane zpět na daních za 40 let (v případě očekávaného průměrného ročního zhodnocení 6.05 % to je 133‘400 Kč3). Takže nula od nuly pojde? Zdaleka ne. Tyhle dvě částky totiž vůbec nejsou ekvivalentní. Čistě orientačně, při průměrné meziroční inflaci 2.63 % (průměr za posledních 20 let) byste státu měli za 20 let (zde polovina doby spoření) vrátit 185‘000 Kč za 40 let už 315‘000 Kč (viz kalkulačka inflace). Takže stát defacto poskytuje bezúroční půjčku poskytovateli spoření, který pod vaším jménem peníze investuje a značnou část výnosů si ponechá. Kdybych byl penzijní pojišťovna tak vrním. Pro mne osobně z toho plyne jednoduchý závěr, v DPS peníze neutápět. Neberte toto však okamžitě jako doporoučení pro vás. V tomto modelovém příkladu jsem nevzal v úvahu několik věcí – díky DPS můžete dosáhnout na jisté daňové úlevy. Pokud zvolíte ve stáří výplatu penze po dobu více než 10 let, pak je tato, podle současného znění zákona (!) osvobozena od daně. Dále vám také může ke spoření přispívat zaměstnavatel a tento příspěvek na vstupu (!) nepodléhá odvodům ani zdanění (do 30‘000 Kč ročně). Pokud máte silný žaludek tak s pomocí mého spreadsheetu můžete sami vyzkoušet, jak se výsledná situace změní při různých scénářích. Možná, že ve vašem konkrétním případě se to skutečně vyplatí? Na každý pád si ale takový závazek předem dobře zvažte a každou nabídku kriticky zhodnoťte. Není co zkazit! Situace vypadá černě a je snadné utápět se v pesimismu. Myslím si ale, že bychom to měli vidět z jiného pohledu – takový fantastický potenciál pro zlepšení! Vím, že vy, kteří čtete tento blog máte kvalitní vzdělání, jste velmi inteligentní, často jste žili/pracovali/studovali v zahraničí a máte chuť realizovat se v projektech které vám osobně dávají smysl. Třeba vás anebo někoho z vašich přátel skutečně baví FinTech a chtěli byste rozjet vlastní projekt který vytvoří nějakou reálnou konkurenci zavedeným hráčům? Tohle vypadá jako dobrá příležitost. Nebo máte jen chvilku volna a je pro vás snadné doplnit onu nezávislou webovou kalkulačku o vliv poplatků, tak jak je to uděláno v mém spreadsheetu? Anebo máte nějaký úplně jiný vlastní nápad, jak změnit něco ve vašem okolí co vám v současnosti připadá přinejmenším stejně pitomé? Pak do toho a udělejte první krok dnes! Zkazit rozhodně nic nemůžete! Nejsem certifikovaný finanční poradce ani nemám ekonomické vzdělání. Zde vyjadřuji pouze své osobní názory. Jedná se jen o modelový příklad. Nemohu být zodpovědný za vaši případnou finanční ztrátu. Přestože jsem udělal vše pro to, aby zde prezentované informace byly správné, je možné že jsem někde udělal chybu. Pokud ji najdete, budu vděčný dáte-li mi vědět! ČSOB vypadá být světlou výjimkou, když alespoň jasně avizují že částka odpovídající výnosům bude při vybrání zdaněna. Protože ale neuvádí, s jakým očekávaným ročním výnosem je počítáno, není snadné ověřit, zda jsou do výsledku započítány jakékoliv poplatky. &amp;#8617; Svůj přístup jsem ověřil tím, že ze stejných vstupných hodnot dostanu stejné výsledky v spreadsheetu na webu. Pokud si chcete výpočty ověřit, doporučuji vzorečky si sami odvodit, zabere vám to jen chvilku. &amp;#8617; V případě teoretického zhodnocení 3.39 % p.a. pak daň z výnosu po 40 letech spoření činí 43‘000 Kč, tedy asi 40 % částky kterou do vás stát investoval. &amp;#8617;</summary></entry><entry><title type="html">Machine Learning - MRI Analysis Project (Part II)</title><link href="http://www.martinholub.com//projects/2017/06/05/MachineLearningPart2.html" rel="alternate" type="text/html" title="Machine Learning - MRI Analysis Project (Part II)" /><published>2017-06-05T15:22:00+02:00</published><updated>2017-06-05T15:22:00+02:00</updated><id>http://www.martinholub.com//projects/2017/06/05/MachineLearningPart2</id><content type="html" xml:base="http://www.martinholub.com//projects/2017/06/05/MachineLearningPart2.html">&lt;div class=&quot;img_row&quot; style=&quot;height: 275px;&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/MachineLearningHeader.jpg&quot; alt=&quot;&quot; title=&quot;MachineLearningHeader&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
&lt;/div&gt;

&lt;p&gt;&lt;i&gt;
&lt;em&gt;This is a second part of an introductory post on machine learning. It is based on a practical project I worked on at ETH. Here I give you an explanation of two crucial steps in machine learning pipeline – Model selection and Validation. I then wrap up with some useful takeaways from the project, that you can eventually use in your own work and concise summary. If you missed the first part of the post, or just feel you could use a refresher, you can find it &lt;a href=&quot;http://www.martinholub.com/2017/05/07/MachineLearningPart1.html&quot;&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/i&gt;&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;model-selection&quot;&gt;Model Selection&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
Although we have discussed quite few steps so far, they were only preparatory (albeit necessary and crucial) and it is only now, in model selection phase, that we actually get our hands on machine learning algorithms. We can further divide this phase into two steps – training and validation. Let’s look at training first.
In the scope of our project we needed to deal with both &lt;a href=&quot;http://www.investopedia.com/terms/r/regression.asp&quot;&gt;regression&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Statistical_classification&quot;&gt;classification&lt;/a&gt;, here I will describe the latter one as it is perhaps more intuitive and again, I will illustrate it on an example from our project. Recalling the task at hand – to disambiguate between mentally healthy and sick patients from an MRI scan, we can imagine a simplified scenario where each brain scan is described by single two-dimensional vector of features. Further, assume that they form two point-clouds that are perfectly linearly separable as show in the figure:
&lt;!---break---&gt;&lt;/p&gt;
&lt;div class=&quot;img_row&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/idealizedClassification.png&quot; alt=&quot;&quot; title=&quot;idealizedClassification&quot; style=&quot;height: 100%; width: 100%; object-fit: contain&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt; Fig. 5: Idealized example of classification task &lt;/div&gt;

&lt;div class=&quot;img_row&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/realisticClassification.png&quot; alt=&quot;&quot; title=&quot;realisticClassification&quot; style=&quot;height: 100%; width: 100%; object-fit: contain&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt; Fig. 6: More realistic example of a classification task, notice that data don't form any recognizable sub-groups &lt;/div&gt;

&lt;p&gt;We may than write down an equation of line that divides the two-dimensional space into two half-planes. Whenever we make a new observation (take an MRI of a new patient), his brain, described by two &lt;a href=&quot;https://en.wikipedia.org/wiki/Feature_vector&quot;&gt;feature vector&lt;/a&gt;, will fall to one of those two regions and we will label it accordingly as ‘healthy’ or ‘sick’.&lt;/p&gt;

&lt;p&gt;Now the situation is usually by far not that simple. First, recall that our feature vectors are n-dimensional, where n is of the order of hundreds (more precisely \(27 \times 35\ = 945\)). We may try projecting our point-clouds onto 2 dimensions, but we will likely end up with something looking like what is shown in figure above. It follows intuitively that we will have to go for something more complex than a line to separate these clusters. Nevertheless, mathematically there is no fundamental difference to how we will attempt to solve the task.&lt;/p&gt;

&lt;p&gt;In the most general terms, proceeding with the classification example, we look for a function that, given input vector, outputs a prediction, i.e. in this case either 0 or 1, which minimizes some objective. This function is defined by set of parameters. The common objective to minimize is so called &lt;a href=&quot;https://en.wikipedia.org/wiki/Loss_function&quot;&gt;loss function&lt;/a&gt; which takes our prediction, true label and outputs a value that represents a penalization for misclassification. In mathematical notation, this is expressed as follows:
&lt;script type=&quot;math/tex&quot;&gt;\mathbf{\theta^{*}} = argmin_{\theta}\mathcal{L}(f(\textbf{X}, \mathbf{\theta}); \textbf{t}),&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Where \(\mathbf{\theta^{*}}\) is the vector of optimal parameters, \(\mathcal{L}(\cdot)\) is a loss function, \(f(\cdot)\) is a function that gives us our prediction, \(X\) is a matrix of dimensions N×D, N and D being number of samples and features respectively, and \(t\) is a vector of true labels.&lt;/p&gt;

&lt;p&gt;Let’s look at an example to understand this better. If the patient is healthy and we predict 0 (0 meaning no sickness), then the loss will be zero. Contrary, when we would predict 1, meaning presence of sickness, then the loss will be some nonzero value. If we take a step back and look at the problem for a while, we will easily see that we are attempting no more than function-fitting here. Of course, the number of dimensions, accessory constraints, further elements of the pipeline and the richness of the machine learning field make it rather a fancy kind of function fitting. This is nevertheless to show, that one shouldn’t expect magic to happen when confronted with machine learning algorithms. It is just math that happens to receive a lot of hype.&lt;/p&gt;

&lt;h3 id=&quot;validation&quot;&gt;Validation&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
Let’s proceed now to the second part of model selection phase – &lt;a href=&quot;http://machinelearningmastery.com/how-to-evaluate-machine-learning-algorithms/&quot;&gt;validation&lt;/a&gt;. As you might have noticed, the ideal predictor function one would obtain from training phase is the one that gives 0 training loss, meaning that all samples were classified correctly. This appears desirable, but only to a point when one takes a look at decision boundaries of such a function. For illustration, let’s look how they may look like in such a case:&lt;/p&gt;

&lt;div class=&quot;img_row&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/overfitting.png&quot; alt=&quot;&quot; title=&quot;overfitting&quot; style=&quot;height: 100%; width: 100%; object-fit: contain&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt; Fig. 7: Class boundaries after minimizing training error, notice that although the error is zero, the result isn't satisfactory as it is a case of overfitting (&lt;a href=&quot;http://openclassroom.stanford.edu/MainFolder/courses/MachineLearning/exercises/ex8ma&quot;&gt;Image Source&lt;/a&gt;) &lt;/div&gt;

&lt;p&gt;As can be seen, even if the function is optimal in a sense of giving lowest possible training loss (exactly zero as all points are classified correctly), it is by far not a good representation of the underlying structure in our data. Imagine trying to classify a new patient (ie. datapoint in this 2D plot) that falls into a region where the blue question mark is. Intuitively we would assign him among healthy patients, contrary to the, the classifier we trained will label it as sick. In other terms, the model we have obtained from training phase does poor job &lt;a href=&quot;https://www.quora.com/What-is-generalization-in-machine-learning&quot;&gt;generalizing&lt;/a&gt; to new observations, we also say that we have “overfitted to training data”. It is such a prominent pitfall in machine learning that there is even an &lt;a href=&quot;https://www.youtube.com/watch?v=DQWI1kvmwRg&quot;&gt;Acappella song&lt;/a&gt; to help you remember it and avoid it.&lt;/p&gt;

&lt;p&gt;There are various measures one can take to address this issue. Their nature lies in estimating the &lt;a href=&quot;https://en.wikipedia.org/wiki/Generalization_error&quot;&gt;generalization error&lt;/a&gt; of a model obtained in training phase and selection of such a model that minimizes it. Thus, one would usually define several models to be trained and then evaluate their performance on unseen samples to estimate generalization error and then opt for the one that is the most consistent, i.e. that generalizes the best. Here we come back to how useful it is to have ample data. In ideal case scenario, we would train a model on part of our dataset and evaluate it on another, that wasn’t used in training. The issue with this approach is that only rarely one has enough data to do it. This is because by holding out data from training, we arrive to a model that is too simple, we also say it has a high &lt;a href=&quot;https://en.wikipedia.org/wiki/Bias_of_an_estimator&quot;&gt;bias&lt;/a&gt;. To attenuate this, we look for approaches that put aside only small portion of samples for training from dataset. To still provide good estimate of the generalization error, we do this repeatedly and track the total error.&lt;/p&gt;

&lt;p&gt;Let’s take a look at an example from our project again and let’s focus only on one type of a model to be trained. This still allows the situation at hand to be sufficiently complex as practically every model type is parametrized by a set of so called &lt;a href=&quot;https://www.quora.com/What-are-hyperparameters-in-machine-learning&quot;&gt;hyperparameters&lt;/a&gt;, effectively yielding whole family of models that are to be first trained and then validated. In the case of our project, and again, considering classification task, we most frequently used &lt;a href=&quot;https://en.wikipedia.org/wiki/Support_vector_machine&quot;&gt;Support Vector Machine&lt;/a&gt; Classifier with &lt;a href=&quot;https://en.wikipedia.org/wiki/Radial_basis_function&quot;&gt;Radial-basis function&lt;/a&gt; kernel (if you are getting lost in terminology, don’t worry, radial-basis function kernel is just a function that measures distance between points). This model has two hyperparameters, namely penalty and bandwidth (In brief these indicate how tolerant with respect to a point that gets misclassified we are and how much is our labeling of a datapoint influenced by its neighbors). We than defined range of possible values for those parameters. The rest of the job, we offloaded to off-the-shelf validation procedure &lt;a href=&quot;http://scikit-learn.org/stable/modules/grid_search.html&quot;&gt;GridSearchCV&lt;/a&gt; from &lt;a href=&quot;http://scikit-learn.org/stable/index.html&quot;&gt;scikit-learn&lt;/a&gt; (great Python module featuring wide array of tools for machine learning). This routine enables one to select combinations of hyperparameters and strategy for selecting samples for validation – for this we selected 10-fold cross validation (This means that in each run, model is trained on 9/10 of data and 1/10 is left out for validation. The data are reassigned after each run so that after 10 runs all samples were used exactly once for validation.)&lt;/p&gt;

&lt;p&gt;The GridSearch routine outputs a validation error for each model it is provided with. To increase &lt;a href=&quot;https://www.researchgate.net/post/What_is_the_definition_of_the_robustness_of_a_machine_learning_algorithm&quot;&gt;robustness&lt;/a&gt; (i.e. to make the model generalize better on unseen data), we ran it several times on randomly shuffled samples and calculated &lt;a href=&quot;http://www.robertniles.com/stats/stdev.shtml&quot;&gt;standard deviation&lt;/a&gt; among runs. As a final selection measure, we used \(mean\ error \times standard\ deviation\) among runs. The model that minimizes this metric is selected for final classification.&lt;/p&gt;

&lt;h3 id=&quot;results-and-submission&quot;&gt;Results and Submission&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
At this point, we are basically finished with the task as described above. In the case of our project this means that we can save our predictions to a file and submit it to &lt;a href=&quot;https://inclass.kaggle.com/&quot;&gt;Kaggle&lt;/a&gt; (an online platform for administering big machine learning projects and competitions that hosts also university projects) to obtain a score on how well did we fare.&lt;/p&gt;

&lt;p&gt;Although this sounds trivial, there are still some things to keep an eye on. First, the score is computed based on another portion of dataset that one isn’t allowed to access. As we are allowed to submit the solution repeatedly, it is inevitable (the less experience one has the more likely so) to try to achieve the best score. This in practice means, that there is leakage of information from the ‘hidden’ data to the model being trained. And this in turn means that we are on the best track to overfit again. This is because Kaggle uses only one half of the held-out dataset to compute the score, and usually the more we try to optimize on the available half, the worse the final score, that is based on the other half, will be. In the first two parts of the project, we made exactly this mistake, and although our predictions scored well on public leaderboard, we did poorly on the private one. For the last part of the project, we increased the robustness of model selection procedure (for example by implementing the GridSearchCV, tracking standard deviation among runs of random permutation of data, etc…) and this allowed us to perform well above average.&lt;/p&gt;

&lt;h3 id=&quot;remarks-and-takeaway&quot;&gt;Remarks and Takeaway&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
As a final part of this post, I will share with you some tips regarding the just-described procedure. Those are the things I wish I knew at the beginning at the project, because they would save us many valuable hours. My hope is that you can make use of these tips in some of your project of your own.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;In our team, we were three people that didn’t share much classes together, this means that we didn’t get to talk to each other very often in person, which made it complicated to keep everybody on the same page and contributing more or less equally to the task. Whenever I would be to go into such a project again, I would make use of some online available task/project management tool (something we unluckily didn’t do) to track individual assignments and progress. I believe that this will make the project more enjoyable and the team more effective.&lt;/li&gt;
  &lt;li&gt;As you could have noticed in Feature Selection section, getting good features is both crucial and sort of alchemy. One will often spend significant amount of time looking for good features and even an ample experience will usually not make this process straightforward. The recent developments in the field try to go in the opposite direction. Instead of laboriously engineering features, they consider them as part of a model to be learned. So called &lt;a href=&quot;http://cs231n.github.io/convolutional-networks/&quot;&gt;Convolutional Neural Networks&lt;/a&gt; have already outperformed the best approaches with manually designed features and thus represent attractive choices in this scenario. We haven’t used them in our project though, as for a good feature to be learned one needs to provide more than tens of thousands of images. Moreover, training of a neural network is usually very computationally expensive. One can, however, make use of some already &lt;a href=&quot;https://github.com/BVLC/caffe/wiki/Model-Zoo&quot;&gt;pretrained models&lt;/a&gt; and then just fine-tune them for his particular task.&lt;/li&gt;
  &lt;li&gt;We did part of our computations on cluster. As students, our submissions usually needed to wait in queue. Furthermore, once the code is evaluated, one doesn’t have access to variables created during its run. Both these facts make it time consuming to debug one’s code and try various versions of it to see which performs better. After some time, we got into practice of saving some important information during the run (like the mean errors, standard deviations, model parameters, etc..) so that we can more easily track what worked and what not. Moreover, we implemented logging routine that allows to seamlessly track progress of the code evaluation. Here I refer you to &lt;a href=&quot;https://docs.python.org/3/howto/logging-cookbook.html&quot;&gt;Logging Cookbook&lt;/a&gt; and only say that it is extremely useful tool and the extra effort of implementing pays off.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
So that was it, you should have now an idea what happens behind the scenes when Machine Learning is referred to, what are the most important parts of the learning pipeline, what is it capable of and where some bottlenecks may be. In the scope of this post, I didn’t endeavor to go into details of the mathematical background of respective parts of the pipeline, neither did I discussed how to implement them in code. Although both very interesting, it would be out of scope of an introductory post. If you would like to find out more about the former, than I recommend you to check out some &lt;a href=&quot;https://www.quora.com/What-is-the-best-MOOC-to-get-started-in-Machine-Learning&quot;&gt;MOOCs&lt;/a&gt; or get &lt;a href=&quot;https://statweb.stanford.edu/~tibs/ElemStatLearn/&quot;&gt;a book&lt;/a&gt; that approaches the topic from viewpoint of statistics. If you want to find out more on how are the algorithms implemented in code, than take a look at &lt;a href=&quot;http://scikit-learn.org/stable/index.html&quot;&gt;scikit-learn documentation&lt;/a&gt;. Combination of both is enough to get you started exploring the richness of the machine learning on your own.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;em&gt;Note:
The title image is courtesy of &lt;a href=&quot;http://brainposts.blogspot.ch/2010/11/brain-mri-white-matter-intensities.html&quot; target=&quot;blank&quot;&gt;Brain Posts blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;</content><author><name>Martin Holub</name></author><category term="Machine-Learning" /><category term="Projects" /><category term="ETHZ" /><summary type="html">This is a second part of an introductory post on machine learning. It is based on a practical project I worked on at ETH. Here I give you an explanation of two crucial steps in machine learning pipeline – Model selection and Validation. I then wrap up with some useful takeaways from the project, that you can eventually use in your own work and concise summary. If you missed the first part of the post, or just feel you could use a refresher, you can find it here. Model Selection Although we have discussed quite few steps so far, they were only preparatory (albeit necessary and crucial) and it is only now, in model selection phase, that we actually get our hands on machine learning algorithms. We can further divide this phase into two steps – training and validation. Let’s look at training first. In the scope of our project we needed to deal with both regression and classification, here I will describe the latter one as it is perhaps more intuitive and again, I will illustrate it on an example from our project. Recalling the task at hand – to disambiguate between mentally healthy and sick patients from an MRI scan, we can imagine a simplified scenario where each brain scan is described by single two-dimensional vector of features. Further, assume that they form two point-clouds that are perfectly linearly separable as show in the figure:</summary></entry><entry><title type="html">Machine Learning - MRI Analysis Project (Part I)</title><link href="http://www.martinholub.com//projects/2017/05/07/MachineLearningPart1.html" rel="alternate" type="text/html" title="Machine Learning - MRI Analysis Project (Part I)" /><published>2017-05-07T16:22:00+02:00</published><updated>2017-05-07T16:22:00+02:00</updated><id>http://www.martinholub.com//projects/2017/05/07/MachineLearningPart1</id><content type="html" xml:base="http://www.martinholub.com//projects/2017/05/07/MachineLearningPart1.html">&lt;div class=&quot;img_row&quot; style=&quot;height: 275px;&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/MachineLearningHeader.jpg&quot; alt=&quot;&quot; title=&quot;MachineLearningHeader&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
&lt;/div&gt;

&lt;p&gt;&lt;i&gt;
&lt;em&gt;This is an introductory post for those that don’t have yet any significant experience in machine learning. It is divided into two parts, in the first one, the one you are reading right now, I introduce you to a practical project I’ve worked on at ETH. Next, I use this illustrative example to explain two important elements of the machine learning pipeline, namely preprocessing and feature extraction. In the second part of the post that I will share with you later, I will catch up on this and give you an explanation of the remaining steps of the pipeline (model selection and validation). I will then wrap up with some useful takeaways from the project, that you can eventually use in your own work and concise summary.&lt;/em&gt;&lt;/i&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;i&gt;
&lt;em&gt;If you happen to be more seasoned in the field of machine learning, don’t worry, I will address follow-up posts to you that go more into depth with things I just touched upon here. Till then, stay tuned.&lt;/em&gt; &lt;/i&gt;&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;You’ve heard about it many times already. It is supposedly influencing how we cast our votes, putting people off their jobs and even making sure that the pineapples you buy in your supermarket are always fresh. Machine learning is a hot topic and you are increasingly likely to come across it not only in your work, but in your day to day life in general.&lt;/p&gt;

&lt;div class=&quot;img_row&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/MachineLearningTrend.PNG&quot; alt=&quot;&quot; title=&quot;MachineLearningTrend&quot; style=&quot;height: 100%; width: 100%; object-fit: contain&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt; Fig. 1 Popularity of 'Machine Learning' as by Google Trends &lt;/div&gt;

&lt;h3 id=&quot;warm-up&quot;&gt;Warm Up&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
I opted for the course for several reasons, one prominent being the belief that project work can very well complement an otherwise rather theoretical course. This proved to be true and I feel I have learned a lot, also thanks to the amount of time invested in it. The project itself was divided into three parts, each of which was to be submitted at the end of following month. The project was set up as a competition and carried out in teams of three. There was in total around 130 teams taking part and competing against each other.&lt;/p&gt;

&lt;p&gt;We were given great freedom in how to approach the problem as there was little to no guidance from the part of the instructors. One had to pick up information sort of ‘by-the-way’ during lectures or find it online. This indeed is quite an inefficient way how to get stuff done, especially if one is new in the field, but from the point of learning new concepts and acquiring useful skills, I felt that it did pretty good job. We were also allowed to implement the algorithms in a language of our choice. The most frequent choices being R, Python and Matlab. Our team opted for Python, as we all felt that getting better in it is something we will build on later. It is versatile, fun to work with, and many people, find it more than on-par with Matlab.&lt;/p&gt;

&lt;h3 id=&quot;data-and-assignement&quot;&gt;Data and Assignement&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
When one decides to tackle some problem with machine learning, arguably the first thing he must assure is access to data. The more of it he can get the better. Why? Well, imagine trying to complete a crossword puzzle that’s already half full versus a one that has only few words in it. In the former case, you can use the existing letters to support your thinking, whereas in the latter case you often need to do quite a lot of guesswork. Similarly, the more data you have as an input for your algorithm, the more confident will your final predictions be.
In the case of our project, we were provided with roughly 400 3D MRI scans of human brain. Each image is a three dimensional, 176×208×176  array of pixel values. The value of each pixel ranges from 0 to 4096 (ie. 2&lt;sup&gt;12&lt;/sup&gt;, corresponding to 12-bit images which are common in medical diagnostics). A slice through typical 3D image can be viewed here:&lt;/p&gt;
&lt;div class=&quot;img_row&quot; style=&quot;height: 100%;&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/mri_brain_scan_example.png&quot; alt=&quot;&quot; title=&quot;MRIexample&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt; Fig. 2: Three orthogonal cross sections from a typical image from our dataset &lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
Our task in the project was divided into three parts: 1) predict person’s age, 2) predict health status and 3) predict age, health status and gender simultaneously. Together with the image data, we were provided with correct labels for 2/3 of the images. This basically means that somebody was noting the person’s age, gender and health status when taking the scan and that we were dealing with &lt;a href=&quot;https://en.wikipedia.org/wiki/Supervised_learning&quot;&gt;supervised learning&lt;/a&gt; problem. Our task then was to make prediction on remaining 1/3 of images.&lt;/p&gt;

&lt;h3 id=&quot;preprocessing&quot;&gt;Preprocessing&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
As a first step in practically any image analysis task, one needs to assure that the images can be easily compared against each other, that they don’t include any artifacts from the imaging process and that they contain as much useful information as possible while leaving out what we are not interested in. We call this procedure preprocessing. In the case of MRI scans, the frequent steps in this process include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;brain extraction (removal of non-brain tissue),&lt;/li&gt;
  &lt;li&gt;bias-field correction (compensation intensity gradients in the image that are due to magnetic field non-uniformities during scanning),&lt;/li&gt;
  &lt;li&gt;resizing and&lt;/li&gt;
  &lt;li&gt;voxel alignment across individual scans (voxel is a pixel in 3D space)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In our project, the available data has already been preconditioned with these approaches, thus saving us quite a lot of work that normally needs to be invested in this phase.&lt;/p&gt;

&lt;h3 id=&quot;feature-extraction&quot;&gt;Feature Extraction&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
With good-quality input data one may proceed to arguably the most important part of a machine learning pipeline – the feature extraction. The nature of the process lies in transforming the data from a very high-dimensional space to a space with lower dimensions, while retaining the discriminative information and throwing out what will not help you in decision making.&lt;/p&gt;

&lt;p&gt;To relate this to the task at hand, recall that initially each image represents array of more than 6 million (176×208×176) values while, at the end, you are supposed to give it a label that consists of a single number (either age or 1/0 for healthy/sick or 1/0 for male/female). The big question here is: how does one go from the former to the latter? Intuitively, not all the voxel values will play the same role in prediction. Some regions of brain will be more telling when it comes to predicting age, other when determining health status and so on. The objective in feature extraction process is to find those pixels. There are many tactics how to approach this problem. In a crude division - one can either rely on purely statistical methods, or to include so called ‘expert knowledge’.&lt;/p&gt;

&lt;p&gt;You can better understand this with an example from the project our team was working on. Imagine having to decide whether the brain scan you are looking at belongs to a person struck by a mental illness or not. If you happen to have some knowledge on brain physiology, you may expect such disease to show up by altering the appearance of &lt;a href=&quot;https://en.wikipedia.org/wiki/Hippocampus&quot;&gt;hippocampus&lt;/a&gt;, thus you limit your features to come only from that region. (This is what the most successful teams in this part of the project did.)&lt;/p&gt;

&lt;p&gt;On the other hand, if you have little to no knowledge of where the “signal” should come from. then you will likely make use of some general method to disclose structure in your data. In the case of our project, we chose, arguably rather simplistic, method of &lt;a href=&quot;https://en.wikipedia.org/wiki/Histogram&quot;&gt;histograms&lt;/a&gt;. One clear disadvantage of histograms you could immediately think of is that they don’t preserve spatial relationships in the data (i.e. when histogram counts pixel values, it doesn’t care about where that pixel comes from). In order to partly circumvent this, we divided the large 3D scan into 27 (3×3×3) smaller cubes and only subsequently computed histograms in each of those. In this way, we retain some, although arguably very crude, information on the distribution of pixel values in space. This is illustrated in the following image:&lt;/p&gt;
&lt;div class=&quot;img_row&quot; style=&quot;height: 100%; min-height: 100% !important;&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/MLhistograms.png&quot; alt=&quot;&quot; title=&quot;MLhistograms&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt; Fig. 3: Visualization of Multi-histogram approach (Author: Viktor Wegmayr) &lt;/div&gt;
&lt;p&gt;&lt;br /&gt;
Note, that as we used 35 bins per histogram (dividing the span from 0 to 4096 into 35 equidistantly spaced intervals and counting intensity value occurrences in those), we reduced dimensionality of our problem more than 6 500× by this simple procedure.&lt;/p&gt;

&lt;p&gt;Further quasi-necessary step to be done either in the preprocessing or feature extraction stage is data conditioning. This is done mainly to improve numerical stability during subsequent steps. The common approach is to scale the data to unit variance and remove their mean, so that they are centered around zero.&lt;/p&gt;

&lt;div class=&quot;img_row&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/prepro1.jpeg&quot; alt=&quot;&quot; title=&quot;Preprocessing&quot; style=&quot;height: 100%; width: 100%; object-fit: contain&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt; Fig. 4: It is common practice to zero-center data and normalize it to unit variance (&lt;a href=&quot;http://cs231n.github.io/neural-networks-2/&quot;&gt;Image source&lt;/a&gt;) &lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;intermezzo&quot;&gt;Intermezzo&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
This has been the first of the total of two parts of introductory post on machine learning. If you enjoyed reading it and want to find out about other crucial elements of the pipeline including model selection and validation, stay tuned for the second part that is to come in just a few weeks!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;em&gt;Note:
The title image is courtesy of &lt;a href=&quot;http://brainposts.blogspot.ch/2010/11/brain-mri-white-matter-intensities.html&quot; target=&quot;blank&quot;&gt;Brain Posts blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;</content><author><name>Martin Holub</name></author><category term="Machine-Learning" /><category term="Projects" /><category term="ETHZ" /><summary type="html">This is an introductory post for those that don’t have yet any significant experience in machine learning. It is divided into two parts, in the first one, the one you are reading right now, I introduce you to a practical project I’ve worked on at ETH. Next, I use this illustrative example to explain two important elements of the machine learning pipeline, namely preprocessing and feature extraction. In the second part of the post that I will share with you later, I will catch up on this and give you an explanation of the remaining steps of the pipeline (model selection and validation). I will then wrap up with some useful takeaways from the project, that you can eventually use in your own work and concise summary. If you happen to be more seasoned in the field of machine learning, don’t worry, I will address follow-up posts to you that go more into depth with things I just touched upon here. Till then, stay tuned. You’ve heard about it many times already. It is supposedly influencing how we cast our votes, putting people off their jobs and even making sure that the pineapples you buy in your supermarket are always fresh. Machine learning is a hot topic and you are increasingly likely to come across it not only in your work, but in your day to day life in general. Fig. 1 Popularity of 'Machine Learning' as by Google Trends Warm Up I opted for the course for several reasons, one prominent being the belief that project work can very well complement an otherwise rather theoretical course. This proved to be true and I feel I have learned a lot, also thanks to the amount of time invested in it. The project itself was divided into three parts, each of which was to be submitted at the end of following month. The project was set up as a competition and carried out in teams of three. There was in total around 130 teams taking part and competing against each other. We were given great freedom in how to approach the problem as there was little to no guidance from the part of the instructors. One had to pick up information sort of ‘by-the-way’ during lectures or find it online. This indeed is quite an inefficient way how to get stuff done, especially if one is new in the field, but from the point of learning new concepts and acquiring useful skills, I felt that it did pretty good job. We were also allowed to implement the algorithms in a language of our choice. The most frequent choices being R, Python and Matlab. Our team opted for Python, as we all felt that getting better in it is something we will build on later. It is versatile, fun to work with, and many people, find it more than on-par with Matlab. Data and Assignement When one decides to tackle some problem with machine learning, arguably the first thing he must assure is access to data. The more of it he can get the better. Why? Well, imagine trying to complete a crossword puzzle that’s already half full versus a one that has only few words in it. In the former case, you can use the existing letters to support your thinking, whereas in the latter case you often need to do quite a lot of guesswork. Similarly, the more data you have as an input for your algorithm, the more confident will your final predictions be. In the case of our project, we were provided with roughly 400 3D MRI scans of human brain. Each image is a three dimensional, 176×208×176 array of pixel values. The value of each pixel ranges from 0 to 4096 (ie. 212, corresponding to 12-bit images which are common in medical diagnostics). A slice through typical 3D image can be viewed here: Fig. 2: Three orthogonal cross sections from a typical image from our dataset Our task in the project was divided into three parts: 1) predict person’s age, 2) predict health status and 3) predict age, health status and gender simultaneously. Together with the image data, we were provided with correct labels for 2/3 of the images. This basically means that somebody was noting the person’s age, gender and health status when taking the scan and that we were dealing with supervised learning problem. Our task then was to make prediction on remaining 1/3 of images. Preprocessing As a first step in practically any image analysis task, one needs to assure that the images can be easily compared against each other, that they don’t include any artifacts from the imaging process and that they contain as much useful information as possible while leaving out what we are not interested in. We call this procedure preprocessing. In the case of MRI scans, the frequent steps in this process include: brain extraction (removal of non-brain tissue), bias-field correction (compensation intensity gradients in the image that are due to magnetic field non-uniformities during scanning), resizing and voxel alignment across individual scans (voxel is a pixel in 3D space) In our project, the available data has already been preconditioned with these approaches, thus saving us quite a lot of work that normally needs to be invested in this phase. Feature Extraction With good-quality input data one may proceed to arguably the most important part of a machine learning pipeline – the feature extraction. The nature of the process lies in transforming the data from a very high-dimensional space to a space with lower dimensions, while retaining the discriminative information and throwing out what will not help you in decision making. To relate this to the task at hand, recall that initially each image represents array of more than 6 million (176×208×176) values while, at the end, you are supposed to give it a label that consists of a single number (either age or 1/0 for healthy/sick or 1/0 for male/female). The big question here is: how does one go from the former to the latter? Intuitively, not all the voxel values will play the same role in prediction. Some regions of brain will be more telling when it comes to predicting age, other when determining health status and so on. The objective in feature extraction process is to find those pixels. There are many tactics how to approach this problem. In a crude division - one can either rely on purely statistical methods, or to include so called ‘expert knowledge’. You can better understand this with an example from the project our team was working on. Imagine having to decide whether the brain scan you are looking at belongs to a person struck by a mental illness or not. If you happen to have some knowledge on brain physiology, you may expect such disease to show up by altering the appearance of hippocampus, thus you limit your features to come only from that region. (This is what the most successful teams in this part of the project did.) On the other hand, if you have little to no knowledge of where the “signal” should come from. then you will likely make use of some general method to disclose structure in your data. In the case of our project, we chose, arguably rather simplistic, method of histograms. One clear disadvantage of histograms you could immediately think of is that they don’t preserve spatial relationships in the data (i.e. when histogram counts pixel values, it doesn’t care about where that pixel comes from). In order to partly circumvent this, we divided the large 3D scan into 27 (3×3×3) smaller cubes and only subsequently computed histograms in each of those. In this way, we retain some, although arguably very crude, information on the distribution of pixel values in space. This is illustrated in the following image: Fig. 3: Visualization of Multi-histogram approach (Author: Viktor Wegmayr) Note, that as we used 35 bins per histogram (dividing the span from 0 to 4096 into 35 equidistantly spaced intervals and counting intensity value occurrences in those), we reduced dimensionality of our problem more than 6 500× by this simple procedure. Further quasi-necessary step to be done either in the preprocessing or feature extraction stage is data conditioning. This is done mainly to improve numerical stability during subsequent steps. The common approach is to scale the data to unit variance and remove their mean, so that they are centered around zero. Fig. 4: It is common practice to zero-center data and normalize it to unit variance (Image source) Intermezzo This has been the first of the total of two parts of introductory post on machine learning. If you enjoyed reading it and want to find out about other crucial elements of the pipeline including model selection and validation, stay tuned for the second part that is to come in just a few weeks! Note: The title image is courtesy of Brain Posts blog.</summary></entry><entry><title type="html">Projects, Cows and Apéros. What Was the Semester at ETH Like?</title><link href="http://www.martinholub.com//tristium/turicum/2017/02/25/ProjectsCowsAperos.html" rel="alternate" type="text/html" title="Projects, Cows and Apéros. What Was the Semester at ETH Like?" /><published>2017-02-25T18:42:00+01:00</published><updated>2017-02-25T18:42:00+01:00</updated><id>http://www.martinholub.com//tristium/turicum/2017/02/25/ProjectsCowsAperos</id><content type="html" xml:base="http://www.martinholub.com//tristium/turicum/2017/02/25/ProjectsCowsAperos.html">&lt;div class=&quot;img_row&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/ETH_cow5.png&quot; alt=&quot;&quot; title=&quot;ETH_cow&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
&lt;/div&gt;

&lt;p&gt;Hello everybody, after more than a two-months break I am getting back to you with already fourth blog post. Do you know what this means? Don’t worry it doesn’t mean that I decided to bore you with a post of several times the normal length (although, truth be told, this one is bit meatier than the usual fare), rather it means that my exam period is over. It is exactly at this time that I want to share with you a concise summary of what a semester at ETH is like. A summary enriched by my personal impressions and experiences. And if you are not a student anymore, don’t worry, on top of offering you a view on Swiss education and ETH, I will give you a sneak-peak into what the Swiss are like and how does this play out in one’s day-to-day life.
&lt;!---break---&gt;
The post is structured into three main sections: Studies, People and Place and after reading it, you should be able to assess the qualities of these three in comparison to where you happen to live and work or study. Are you ready for some generalizations and stereotypes? Let’s dive in then.&lt;/p&gt;

&lt;h3 id=&quot;studies&quot;&gt;Studies&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
As already mentioned in my previous post, one can select courses quite ‘randomly’ here at ETH. Some would like it, some not, luckily it suits me well. After initial 4-week exploratory period I settled for 8 courses. Two of which were German classes, one of which I later dropped. The remaining six were: &lt;a href=&quot;http://www.vvz.ethz.ch/Vorlesungsverzeichnis/lerneinheitPre.do?lerneinheitId=107983&amp;amp;semkez=2016W&amp;amp;lang=en&quot; target=&quot;blank&quot;&gt;Surfaces, Interfaces and their Applications&lt;/a&gt;, &lt;a href=&quot;http://www.vvz.ethz.ch/Vorlesungsverzeichnis/lerneinheitPre.do?lerneinheitId=110911&amp;amp;semkez=2016W&amp;amp;lang=en&quot; target=&quot;blank&quot;&gt;Bioelectronics and Biosensors&lt;/a&gt;, &lt;a href=&quot;http://www.vvz.ethz.ch/Vorlesungsverzeichnis/lerneinheitPre.do?lerneinheitId=109387&amp;amp;semkez=2016W&amp;amp;lang=en&quot; target=&quot;blank&quot;&gt;Energy Conversion and Transport in Biosystems&lt;/a&gt;, &lt;a href=&quot;http://www.vvz.ethz.ch/Vorlesungsverzeichnis/lerneinheitPre.do?lerneinheitId=109366&amp;amp;semkez=2016W&amp;amp;lang=en&quot; target=&quot;blank&quot;&gt;Quantitative Flow Visualization&lt;/a&gt;, &lt;a href=&quot;http://www.vvz.ethz.ch/Vorlesungsverzeichnis/lerneinheitPre.do?lerneinheitId=109266&amp;amp;semkez=2016W&amp;amp;lang=en&quot; target=&quot;blank&quot;&gt;Machine Learning&lt;/a&gt; and &lt;a href=&quot;http://www.vvz.ethz.ch/Vorlesungsverzeichnis/lerneinheitPre.do?lerneinheitId=108180&amp;amp;semkez=2016W&amp;amp;lang=en&quot; target=&quot;blank&quot;&gt;Image Analysis and Computer Vision&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Of course, each of them was specific. In order to offer you concise yet representative view I will share with you solely that, which can be generalized among more courses.&lt;/p&gt;

&lt;h1 id=&quot;teaching-style-and-performance-assessment&quot;&gt;Teaching Style and Performance Assessment&lt;/h1&gt;
&lt;p&gt;&lt;br /&gt;
Overall, I admit that I am slightly disappointed by the quality of teaching in most of the courses I took. In most cases, it was just the usual model of a professor that is talking more to his computer and his slides than to the students. In such cases, there was very little interaction in classes, which made them difficult to follow and not very enjoyable.&lt;/p&gt;

&lt;p&gt;That being said, another thing that I noticed (and that is understandable, considering that one is taking courses of several departments given by people with very different backgrounds) is that the style of teaching can greatly vary from one course to another. Therefore, although on average the quality of teaching was lower than I initially expected, one can easily optimize his choice of courses so that it features mostly courses that are doing much better on this aspect. This is what I will try to do in upcoming semesters. Fortunately, I had few of those courses in past semester as well.&lt;/p&gt;

&lt;p&gt;One course, for example, featured two computational projects and one ‘study project’ done in groups during which we were preparing a poster by reviewing recent papers on given topic and which we eventually presented to other students and members of the lab that the lecturer comes from. This form of teaching was something I experienced for the first time and I found it refreshing. Moreover, we spent one lecture in the lab acquiring microscopy images for one of our projects and for the very last lecture there was a small party with foods and drinks where we had time to discuss our impressions from the course with lecturers and chat with other students.&lt;/p&gt;

&lt;p&gt;Another two courses offered projects during semester, usually programming or computational assignments which were of a great help in acquiring some skills on top of purely theoretical knowledge. One course was organized with help of &lt;a href=&quot;https://piazza.com/&quot; target=&quot;blank&quot;&gt;Piazza platform&lt;/a&gt; (basically an online discussion forum for education purposes) which I was initially sceptic about but that turned out to be very helpful. You can informally interact with other students and Teaching Assistants (TAs), giving the process of learning more of a ‘community’ feeling. Not only you receive answers to your questions in close to real time, but you yourself can help others and practice your skills by answering questions.
To get a quick and concise overview of major features of each course I took &lt;a href=&quot;/img/CoursesTableHTML.html&quot; target=&quot;blank&quot;&gt;just follow this link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Notice that the tutorials in courses I attended were of two basic forms:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;TA’s presentation of the content of lecture and exercise (which was then to be solved independently),&lt;/li&gt;
  &lt;li&gt;independent work in presence of TA(s).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In contrast, at my former university, most of the tutorials were basically rehearsals of problem-solving, something I would describe as ‘filling one’s cookbook with recipes’. All approaches will have their ups and downs, but my overall impression is that the ones practiced here at ETH are more effective in terms of acquiring understanding and independence in problem solving. Whereas the ones at my former university allow you to solve arguably more complex problems and drill you in flawless outputting of numbers. I personally appreciate the independent approach more, although I must admit that it can become quite frustrating (like if you don’t make one assumption which costs you several hours of time down the line).&lt;/p&gt;

&lt;p&gt;Last thing I bring to your attention is the form of performance assessment (aka exam) usually practiced here at ETH. From the linked table, you will notice that your final grades are usually determined solely by your final exam results. Taking into consideration that you have only one try per year to pass, this can make your exam period relatively stressful. Furthermore, you would most likely agree that one exam, (especially if it is oral one of 30 minutes) is quite a poor assessment of what you have learned and how you worked throughout the semester. Luckily, this is already something that ETH is
&lt;a href=&quot;https://www.ethz.ch/services/en/news-and-events/internal-news/archive/2016/12/a-future-without-attendance-certificates.html&quot; target=&quot;blank&quot;&gt;working on adjusting in the future&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;people&quot;&gt;People&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
No matter where you live and work or in which stage of life you are currently in, your life and work and the way you feel about them is influenced by the people you interact with. Some of them you get to choose, like your friends, some of them are ‘given’ to you with your work or your studies. In the following section I will not attempt to give you an overview of what Swiss are like, that would necessitate time you don’t have, rather I will share with you few major impressions I had while interacting with people during my studies, that is mainly with professors and doctorate and other master students.&lt;/p&gt;

&lt;p&gt;First thing that comes to my mind is that they are all unexpectedly humble. In a good way. I never had a feeling that somebody needed to show off his superiority in knowledge or position to me. Even professors with great renown have no problems discussing with you on equal grounds. I recall one occasion that is a very good example of this. I had once very hard time following a lecture as the professor decided to put, at least what appeared to me, as way too much material into his slides. Me, being rather inpatient which often comes off as disrespect, I approached him during the break and almost accused him for teaching ineffectively. I suggested that focusing on what is really important would allow him to teach at slower pace and this in turn would make it possible for students to retain higher proportion of the knowledge he wants to transmit (look, I am not proud of doing that, but that’s what I did). Not only he immediately apologized for the amount of information, but he also explained why he decided to do so and agreed to try to make upcoming lectures less dense. It was only later that I found out that this guy was on Technology Review Magazine’s list &lt;a href=&quot;http://www2.technologyreview.com/tr35/?year=2007&quot; target=&quot;blank&quot;&gt;‘35 innovators under 35’&lt;/a&gt; and has already received surprising amount of awards and grants for his work in several fields including microfluidics and neurotechnology. (Besides, during preparation for the exam, I found his slides to be the best, exactly because they had a lot of information and were thus easier to follow.)&lt;/p&gt;

&lt;p&gt;I face similar approach when interacting with other professors and TAs and this is definitely one of the things that makes my time spent at university and work enjoyable. It is mainly due to the fact that workplace culture here in Switzerland is extremely flat, almost lacking any kind of hierarchy. Swiss also tend to spend more time at their work and thus have found many ways how to make this time more enjoyable (some examples can be found under following keywords: &lt;a href=&quot;https://answers.yahoo.com/question/index?qid=20100121042208AA9qFRs&quot; target=&quot;blank&quot;&gt;Znüni, Zvieri&lt;/a&gt; and &lt;a href=&quot;http://www.dicconbewes.com/2010/03/11/getting-to-know-you-the-swiss-way/&quot; target=&quot;blank&quot;&gt;Apéro&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;While thinking about making one’s workplace (or study-place for that matter) more enjoyable, I also immediately think of &lt;a href=&quot;https://www.amiv.ethz.ch/&quot; target=&quot;blank&quot;&gt;AMIV (Akademische Maschinen- und Elektro-Ingenieur Verein)&lt;/a&gt;. Among many activities they do (career fairs, collecting study materials for downloads, issuing monthly newspaper, organizing social events, etc.), I was personally the most delighted by Weihnachtsmorgenessen (‘Christmas Breakfast). Just take a look at few pictures from the event while imagining that there are Christmas carols playing on top of that.&lt;/p&gt;

&lt;div class=&quot;img_row&quot;&gt;
	&lt;img class=&quot;col one&quot; src=&quot;/img/AMIV3.jpg&quot; /&gt;
	&lt;img class=&quot;col two&quot; src=&quot;/img/AMIV2.jpg&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
Photos from Weihnachtsmorgenessen 2017 at Clausiusbar. (Excuse poor picture quality, taken by phone.)
&lt;/div&gt;
&lt;p&gt;Imagine morning just few days before holiday break and hundreds of students slowing down to eat a breakfast together. Getting into chat with people they don’t yet know and wishing each other Merry Christmas afterwards.  Wouldn’t this make for a great start of day?&lt;/p&gt;

&lt;h3 id=&quot;place&quot;&gt;Place&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
Last thing that is of major influence on how you feel about your day to day life and also work is the quality of spaces and buildings you spend time at. This is why I will share with you in this last section some impressions on this topic.&lt;/p&gt;

&lt;p&gt;ETH has two main locations in Zürich – Zentrum and Hönggerberg. The one in Zentrum is within 10 minutes of walking distance from the main train station and equally nearby is the Zürichsee. In spite of being so centrally located, ETH still manages to innovate the infrastructure here, for example there is currently construction of whole new building, which should be finished in 2020, under way. Moreover, the main building is literally just across the street from the University Hospital of Zurich (Universitätsspital Zürich) which facilitates cooperation of doctors, scientists and engineers. All this wouldn’t be possible without great support from and cooperation with local government (just imagine – what developer wouldn’t want to have a building in this location). On the other hand, the Hönggeberg campus lies, as you might have guessed, on a hill that is located towards the edge of the city grounds. This one was built more recently and has more of a campus feeling to it. The first time I visited it, these are some of the views I enjoyed:&lt;/p&gt;

&lt;div class=&quot;img_row&quot;&gt;
	&lt;img class=&quot;col two&quot; src=&quot;/img/Honggerberg-view.jpg&quot; /&gt;
	&lt;img class=&quot;col one&quot; src=&quot;/img/ETH_cow1.png&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
Views from ETH Hönggerberg campus. (Sources &lt;a href=&quot;https://www.caitelliott.co.uk&quot; target=&quot;blank&quot;&gt;caitelliott.co.uk&lt;/a&gt; and &lt;a href=&quot;http://www.aw.ias.ethz.ch&quot; target=&quot;blank&quot;&gt;aw.ias.ethz.ch&lt;/a&gt;.)
&lt;/div&gt;

&lt;div class=&quot;img_row&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/ETH_cow2.png&quot; alt=&quot;&quot; title=&quot;ETH_cow&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
View from ETH Hönggerberg campus. (Source &lt;a href=&quot;https://www.wiedenmeier.ch&quot; target=&quot;blank&quot;&gt;wiedenmeier.ch&lt;/a&gt;.)
&lt;/div&gt;

&lt;p&gt;Especially the fact cows are freely grazing within few meters from campus (and sometimes they wander through it as well) made me laugh and appreciate how well does Zürich ‘combine excellence in science and quality of life. The quality of life comes at cost though, both financial and in terms of getting all-too comfortable with it which can impede progress in today’s fast moving world.&lt;/p&gt;

&lt;p&gt;That being said, ETH still manages, at least in my eyes, to act amazingly dynamically considering how big institution it is. Take the following events, all of which occurred in past 4 months (!), as examples:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Opening of the &lt;a href=&quot;https://www.ethz.ch/en/news-and-events/eth-news/news/2017/02/bridge-the-divide.html&quot; target=&quot;blank&quot;&gt;Swiss Data Science Center (SDSC)&lt;/a&gt;,&lt;/li&gt;
  &lt;li&gt;ETH Board announcement of strategic plan for following three years. In line with the opening of the SDSC, one of its focal points is data science. The other major field of focus is medicine. This statement is supported by opening of a master track in  &lt;a href=&quot;https://www.inf.ethz.ch/studies/master/master-ds.html&quot; target=&quot;blank&quot;&gt;Data Science&lt;/a&gt; and &lt;a href=&quot;https://www.ethz.ch/en/news-and-events/eth-news/news/2016/09/studying-medicine-at-eth.html&quot; target=&quot;blank&quot;&gt;bachelor track in Medicine&lt;/a&gt; as of September 2017. (Yes, Federal Institute of Technology will educate doctors. My personal opinion is that this both bold and very smart step to take.)&lt;/li&gt;
  &lt;li&gt;Investment into continuing education programs, as acknowledgement that the future of work is quite different from what we have been used to
&lt;a href=&quot;https://www.ethz.ch/en/news-and-events/eth-news/news/2017/01/work-in-the-year-2050.html&quot; target=&quot;blank&quot;&gt;quite different from what we have been used to&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;wrap-up-and-overall-impressions&quot;&gt;Wrap-up and Overall Impressions&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
In reading this post, you had the opportunity to view major characteristics of the just-elapsed semester through my eyes. You had also the opportunity to form your own opinion by drawing comparisons with your daily experiences. You will have likely noticed that my overall impression is a positive one and I consider myself lucky to enjoy studying and living here. I will not try to argue that ETH and Zürich is the #1 place in the world to work and study, that wouldn’t be true. On the other hand, I would argue that #1 place to be in the world is exactly the one you are at right now. For me it is here and I will keep trying to make most of it. And what about you?&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;em&gt;Note:
The title image is courtesy of &lt;a href=&quot;https://www.radiochem.pharma.ethz.ch&quot; target=&quot;blank&quot;&gt;radiochem.pharma.ethz.ch&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;</content><author><name>Martin Holub</name></author><category term="ETH" /><category term="study" /><summary type="html">Hello everybody, after more than a two-months break I am getting back to you with already fourth blog post. Do you know what this means? Don’t worry it doesn’t mean that I decided to bore you with a post of several times the normal length (although, truth be told, this one is bit meatier than the usual fare), rather it means that my exam period is over. It is exactly at this time that I want to share with you a concise summary of what a semester at ETH is like. A summary enriched by my personal impressions and experiences. And if you are not a student anymore, don’t worry, on top of offering you a view on Swiss education and ETH, I will give you a sneak-peak into what the Swiss are like and how does this play out in one’s day-to-day life.</summary></entry><entry><title type="html">One Tip on How to Become More Satisfied With Your Studies</title><link href="http://www.martinholub.com//tristium%20turicum/2016/11/24/OneTip.html" rel="alternate" type="text/html" title="One Tip on How to Become More Satisfied With Your Studies" /><published>2016-11-24T20:17:00+01:00</published><updated>2016-11-24T20:17:00+01:00</updated><id>http://www.martinholub.com//tristium%20turicum/2016/11/24/OneTip</id><content type="html" xml:base="http://www.martinholub.com//tristium%20turicum/2016/11/24/OneTip.html">&lt;div class=&quot;img_row&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/education.jpeg&quot; alt=&quot;&quot; title=&quot;Education&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
&lt;/div&gt;

&lt;p&gt;We are nearing the end of November. For most of us this means that the Christmas mood is slowly finding way into our minds. And if you are so lucky to orient yourself still mainly by academic calendar, this also means that you are well into the second half of your autumn semester. The initial enthusiasm may be well extinguished by the sheer amount of workload. Things that were supposed to be fun are becoming an annoying routine and you are starting to wonder if you are interested in what you are supposed to learn in the first place.&lt;/p&gt;

&lt;p&gt;This doesn’t feel good so you rack your brains for possible solutions. The ones you come up with seem all too radical – taking a year off, changing course of your studies or even dropping out altogether so you do nothing, foolishly hoping that next semester things will change.&lt;/p&gt;

&lt;h3 id=&quot;freedom-to-explore&quot;&gt;Freedom to Explore&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
Of course, this may not be the way you feel about your studies, but more often than not, it will be. This is how I usually felt and this is also one of the main reasons why I decided to give a studying at ETH a try. I wanted a change and this one appeared radical enough. Now you probably wish to hear that studying here is completely unlike to what I just described, that the courses are huge fun and hands-on and that lectures really help you to understand the topic. But this is not true. My studies here don’t differ too much from my studies back home. Except for one thing. And funnily enough, this one thing is nothing that couldn’t be adopted by practically any of you at any university. What I am talking about is the freedom I have in what I decide to study.&lt;/p&gt;

&lt;p&gt;Most of us will go through higher studies being told which courses we have to take and in which semester to do so. Many pages could be probably written about whether this is a good or bad thing and I am by now means a qualified person to do that. I just know how it felt in my case. It mainly sucked. In the age of personalized education, when the internet abounds with online courses about thousands of topics, I felt I had no decisive power over what my curriculum will look like. It was only thanks to seeing things from different perspective that I realized that this feeling was erroneous.&lt;/p&gt;

&lt;p&gt;At ETH my study program is surprisingly flexible. Take a look at it:&lt;/p&gt;
&lt;div class=&quot;img_row&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/program.PNG&quot; alt=&quot;&quot; title=&quot;MasterStudyProgram&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
Curriculum of Master in Mechanical Engineering Program at ETh.
&lt;/div&gt;

&lt;p&gt;Yep it is right. It doesn’t have a single fixed course in it. Where will you do your project or an industrial internship? Up to you to decide. Do you want to write your thesis at a university abroad? Just do it. How long is your program going to be? Anything you wish as long as it doesn’t exceed 3 years. Which courses will you compose your program of? Any you and your tutor mutually agree upon. In which order you take those? The one that suits your preferences and schedule. And I personally totally enjoy this gamut of choices, the feeling of ownership of my studies. Never mind some sub-optimal choices that I will inevitably make, these would arise in in any case.&lt;/p&gt;

&lt;h3 id=&quot;from-being-a-passenger-to-becoming-a-driver&quot;&gt;From Being a Passenger to Becoming a Driver&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
I dare to guess that the described freedom is somewhat attractive to you. And now here comes my point: You can have it. And there is no need for radical solutions to achieve it. Although it may seem there is a sharp contrast between studying at ETH and your university, most of this contrast can be smeared away by pure change of perspective. The only difference lies in what people tend to do. And your opportunity is in doing something bit different.&lt;/p&gt;

&lt;div class=&quot;img_row&quot;&gt;
	&lt;img class=&quot;col one&quot; src=&quot;/img/passenger1.jpg&quot; /&gt;
	&lt;img class=&quot;col two&quot; src=&quot;/img/driver2.jpeg&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Let me give you an example, my former university: Brno University of Technology, has roughly the same amount of students as ETH has. It offers hundreds of courses and hundreds of square meters of labs and workshops. The situation will look quite a like for any other university. And you know what? You can take advantage of those opportunities. Are you in civil engineering but it’s been some time you are wondering whether you would enjoy coding? There are various ways how to find out and signing up for a course at your university is one of the easiest ones. You get the structure, you get the support, you get to know other like-minded people and you get the necessary motivational boost from assignments and exams. And it is for free.  I mean, how is it possible that we mostly totally overlook it?&lt;/p&gt;

&lt;h3 id=&quot;what-really-matters&quot;&gt;What really matters?&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
Of course, we like to see hurdles even where there are none and so you immediately see problems with this proposal. You won’t have time for your usual study duties and you will just do a poor job coding compared to people who gathered experience in it over several semesters. But this is totally irrelevant. You may fail few of your usual courses (let’s face it, you probably won’t). So what, you can sign up for them next year. Your grades will suffer. So what, no one really cares (except you perhaps). You will not ace the additional course you signed up for. So what, that was not your goal in the first place. Your goal was finding out what is it that you enjoy. This experience will move you fast forward on this track. Besides, from my personal experience, I know that that if you will find the topic really intriguing than you will manage to catch up.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Your goal was finding out what is it that you enjoy. This experience will move you fast forward on this track.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And the same logic applies also for practical lab and project work. Do your studies feel too little hands-on? That’s what I often complained about and that’s you probably complain about quite often. The chances are that you have already realized that this is no solution to your problem. Take this as reminder and try something different this time - join a lab or local student’s workshop. Look for a part time job. Does the offer of thesis topics at your faculty seem dull? Than take a look someplace else, be it a different faculty, university or a company. Not only will you then find a project that interests you but you will get to tackle it in an unusual setting. This will be challenging but there will be people to support you, people you otherwise wouldn’t even meet. And it is from them, you can learn the most. There are opportunities out there and your best bet is probing many and absorbing all the new experiences before you settle for something that suits you.&lt;/p&gt;

&lt;h3 id=&quot;the-take-away&quot;&gt;The take-away&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
By writing this post I wanted to point out to you my main positive impression from being a student at ETH, namely the freedom in organizing my master studies. It turns out that it is nothing that you yourself couldn’t make a use of. In your case it boils down to exploring paths seldom taken and taking advantage what your current environment has to offer. Thus I encourage you to take more ownership of your studies. You will inevitable face some hurdles but more often than not you will surmount them just fine. And in doing so you will grow as a person, make new friends and have a blast at the same time.
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note:
The view I offer here can by no means be complete. However, its usefulness lies exactly in this fact. Being new at ETH I can easily spot out differences between how studies are approached here and in the Czech Republic. I encourage you to take a critical approach when considering my opinions, because it is in this way, that you can make some use of them for your particular case.
Furthermore, in this post I focused on just one of the initial impressions I have from being a student at ETH. Of course, there is more and some of them are also negative. I will focus on some of these in upcoming posts. Stay tuned!&lt;/em&gt;&lt;/p&gt;</content><author><name>Martin Holub</name></author><category term="Tristium Turicum" /><category term="ETH" /><category term="study" /><summary type="html">We are nearing the end of November. For most of us this means that the Christmas mood is slowly finding way into our minds. And if you are so lucky to orient yourself still mainly by academic calendar, this also means that you are well into the second half of your autumn semester. The initial enthusiasm may be well extinguished by the sheer amount of workload. Things that were supposed to be fun are becoming an annoying routine and you are starting to wonder if you are interested in what you are supposed to learn in the first place. This doesn’t feel good so you rack your brains for possible solutions. The ones you come up with seem all too radical – taking a year off, changing course of your studies or even dropping out altogether so you do nothing, foolishly hoping that next semester things will change. Freedom to Explore Of course, this may not be the way you feel about your studies, but more often than not, it will be. This is how I usually felt and this is also one of the main reasons why I decided to give a studying at ETH a try. I wanted a change and this one appeared radical enough. Now you probably wish to hear that studying here is completely unlike to what I just described, that the courses are huge fun and hands-on and that lectures really help you to understand the topic. But this is not true. My studies here don’t differ too much from my studies back home. Except for one thing. And funnily enough, this one thing is nothing that couldn’t be adopted by practically any of you at any university. What I am talking about is the freedom I have in what I decide to study. Most of us will go through higher studies being told which courses we have to take and in which semester to do so. Many pages could be probably written about whether this is a good or bad thing and I am by now means a qualified person to do that. I just know how it felt in my case. It mainly sucked. In the age of personalized education, when the internet abounds with online courses about thousands of topics, I felt I had no decisive power over what my curriculum will look like. It was only thanks to seeing things from different perspective that I realized that this feeling was erroneous. At ETH my study program is surprisingly flexible. Take a look at it: Curriculum of Master in Mechanical Engineering Program at ETh. Yep it is right. It doesn’t have a single fixed course in it. Where will you do your project or an industrial internship? Up to you to decide. Do you want to write your thesis at a university abroad? Just do it. How long is your program going to be? Anything you wish as long as it doesn’t exceed 3 years. Which courses will you compose your program of? Any you and your tutor mutually agree upon. In which order you take those? The one that suits your preferences and schedule. And I personally totally enjoy this gamut of choices, the feeling of ownership of my studies. Never mind some sub-optimal choices that I will inevitably make, these would arise in in any case. From Being a Passenger to Becoming a Driver I dare to guess that the described freedom is somewhat attractive to you. And now here comes my point: You can have it. And there is no need for radical solutions to achieve it. Although it may seem there is a sharp contrast between studying at ETH and your university, most of this contrast can be smeared away by pure change of perspective. The only difference lies in what people tend to do. And your opportunity is in doing something bit different. Let me give you an example, my former university: Brno University of Technology, has roughly the same amount of students as ETH has. It offers hundreds of courses and hundreds of square meters of labs and workshops. The situation will look quite a like for any other university. And you know what? You can take advantage of those opportunities. Are you in civil engineering but it’s been some time you are wondering whether you would enjoy coding? There are various ways how to find out and signing up for a course at your university is one of the easiest ones. You get the structure, you get the support, you get to know other like-minded people and you get the necessary motivational boost from assignments and exams. And it is for free. I mean, how is it possible that we mostly totally overlook it? What really matters? Of course, we like to see hurdles even where there are none and so you immediately see problems with this proposal. You won’t have time for your usual study duties and you will just do a poor job coding compared to people who gathered experience in it over several semesters. But this is totally irrelevant. You may fail few of your usual courses (let’s face it, you probably won’t). So what, you can sign up for them next year. Your grades will suffer. So what, no one really cares (except you perhaps). You will not ace the additional course you signed up for. So what, that was not your goal in the first place. Your goal was finding out what is it that you enjoy. This experience will move you fast forward on this track. Besides, from my personal experience, I know that that if you will find the topic really intriguing than you will manage to catch up. “Your goal was finding out what is it that you enjoy. This experience will move you fast forward on this track.” And the same logic applies also for practical lab and project work. Do your studies feel too little hands-on? That’s what I often complained about and that’s you probably complain about quite often. The chances are that you have already realized that this is no solution to your problem. Take this as reminder and try something different this time - join a lab or local student’s workshop. Look for a part time job. Does the offer of thesis topics at your faculty seem dull? Than take a look someplace else, be it a different faculty, university or a company. Not only will you then find a project that interests you but you will get to tackle it in an unusual setting. This will be challenging but there will be people to support you, people you otherwise wouldn’t even meet. And it is from them, you can learn the most. There are opportunities out there and your best bet is probing many and absorbing all the new experiences before you settle for something that suits you. The take-away By writing this post I wanted to point out to you my main positive impression from being a student at ETH, namely the freedom in organizing my master studies. It turns out that it is nothing that you yourself couldn’t make a use of. In your case it boils down to exploring paths seldom taken and taking advantage what your current environment has to offer. Thus I encourage you to take more ownership of your studies. You will inevitable face some hurdles but more often than not you will surmount them just fine. And in doing so you will grow as a person, make new friends and have a blast at the same time. Note: The view I offer here can by no means be complete. However, its usefulness lies exactly in this fact. Being new at ETH I can easily spot out differences between how studies are approached here and in the Czech Republic. I encourage you to take a critical approach when considering my opinions, because it is in this way, that you can make some use of them for your particular case. Furthermore, in this post I focused on just one of the initial impressions I have from being a student at ETH. Of course, there is more and some of them are also negative. I will focus on some of these in upcoming posts. Stay tuned!</summary></entry><entry><title type="html">ETHWeek - Challenging Water</title><link href="http://www.martinholub.com//eth/2016/10/22/ETHWeekChallengingWater.html" rel="alternate" type="text/html" title="ETHWeek - Challenging Water" /><published>2016-10-22T18:49:00+02:00</published><updated>2016-10-22T18:49:00+02:00</updated><id>http://www.martinholub.com//eth/2016/10/22/ETHWeekChallengingWater</id><content type="html" xml:base="http://www.martinholub.com//eth/2016/10/22/ETHWeekChallengingWater.html">&lt;div class=&quot;img_row&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/shower.jpg&quot; alt=&quot;&quot; title=&quot;shower&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
&lt;/div&gt;

&lt;p&gt;How did you start your day this morning? First, I hope that well. Second, I guess that you did at least one of these: made yourself a coffee, brushed your teeth or took a shower. And to assume this, I don’t have to be particularly good in guessing. This is how millions of people start their day. But these activities have more in common. All of them would be either significantly different or even impossible without water running out of our taps. Luckily, clean drinking water is an infinite resource. Or isn’t it?&lt;/p&gt;

&lt;p&gt;Just three days after having moved to Zurich, I moved again, this time only within city borders. I left a friend’s couch for a hostel to participate in ETHWeek. This 6-days event is a part of ETH Critical Thinking Initiative and made for very intensive start of my semester. Each year, it has a different theme, last year this was food, and this year it was all about water: the ways how it challenges us and also the ways how we can challenge the current status-quo.&lt;/p&gt;

&lt;p&gt;The first two days of the program were concentrated on acquiring information, making sense of it and building our own perspective. Several inspiring speakers from research institutes and NGOs made their appearance on stage in rapid succession, highlighting five key challenges, one of which we were to address. During the first day we also visited sites of local agents that are, in one way or other, dealing with water and trying to offer their solutions to protect the environment or save costs. Ideally both at the same time, of course.&lt;/p&gt;

&lt;p&gt;Having got the feel of what the current problems locally and globally are, we were ready to start working on solving them. In a team where none of us had any significant previous knowledge of the topic and in only three days. It felt like a sequel to Mission Impossible and failure was guaranteed. This was on one hand discouraging, on the other hand, it offered and unexpected freedom. We were not trying to save the world nor beat the other 18 teams anymore. We were just working hard and having fun.&lt;/p&gt;

&lt;p&gt;At the end of the week our team came up with an idea how to save roughly 20% of clean water that gets used in a common household. This would be enabled by using so called “grey water” from your shower for flushing your toilet. Because, and this was shocking to us, an average European uses 50 liters of clean drinking water for showering and another 50 liters for flushing the toilet every day. This amounts to 2/3 of her direct daily water consumption.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“… an average European uses 50 liters of clean drinking water for showering and another 50 liters for flushing the toilet every day.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Does flushing with used water sound like a trivial idea to you? Well that’s because it is. And don’t you wonder now why you still flush your toilet with drinking water? It is because innovating our bathrooms is extremely challenging. It is a very constrained environment; moreover, it may well be one of the first things ever to get “connected”. The water and sanitation system we use these days is conceptually almost identical with the one that was put into use more than 2500 years ago in ancient Rome. And therefore any change that is to be made must take into account the way it may affect the whole system.&lt;/p&gt;

&lt;p&gt;These all are important hurdles, but there may be one even more significant. We may be willing to give a new smartphone a try, we may spend a month in a different country every summer, but we are generally very reluctant to make significant changes to something so personal as our bathroom. Moreover, it somehow goes without saying for us that water is an infinite resource and there is also no important financial rationale that would persuade more consumers to rethink the way they use water.&lt;/p&gt;

&lt;div class=&quot;img_row&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/fountain.jpg&quot; alt=&quot;&quot; title=&quot;Fountain in Zürich&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
In Zürich there is more than 1200 public fountains and all of them offer drinking water during whole year.
&lt;/div&gt;

&lt;p&gt;The idea that technical progress is going to offer solutions to many of our problems is widely accepted. Of course we may not have the solutions right now, but they are well on their way! Don’t worry! This corresponds well with how much effort gets invested into pursuing technical innovations. And these are, more often than not, only very incremental. But when it comes to something so ordinary as our bathrooms we already have all the means to start rethinking it. But we don’t, because it is uncomfortable. In this case, more than new technical solutions, we need to find a new perspective.&lt;/p&gt;

&lt;p&gt;Being an engineering student, this was the most important personal outcome of the week. Something that will probably influence the way I think about where I put my time and effort in the future. And how about you? How much you are confident of engineering or scientific solutions? Do you have some doubts? And if you do, does this get to play out in your actions?&lt;/p&gt;

&lt;p&gt;I am not asking to make you feel awkward. Rather to spur your interest and get you thinking. It may very well be you who helps a needed new perspective to take off, be it in your family, among your friends or anywhere else.&lt;/p&gt;

&lt;p&gt;Martin&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;In the next blog post you can look forward to the impressions after my first month of studies at ETH. What makes one feel good here? Which things are annoying, and most importantly is it fun?.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Here you can find out &lt;a href=&quot;/about&quot; target=&quot;blank&quot;&gt;more about me&lt;/a&gt;.&lt;/p&gt;</content><author><name>Martin Holub</name></author><category term="projects" /><category term="reflections" /><category term="eth" /><summary type="html">How did you start your day this morning? First, I hope that well. Second, I guess that you did at least one of these: made yourself a coffee, brushed your teeth or took a shower. And to assume this, I don’t have to be particularly good in guessing. This is how millions of people start their day. But these activities have more in common. All of them would be either significantly different or even impossible without water running out of our taps. Luckily, clean drinking water is an infinite resource. Or isn’t it? Just three days after having moved to Zurich, I moved again, this time only within city borders. I left a friend’s couch for a hostel to participate in ETHWeek. This 6-days event is a part of ETH Critical Thinking Initiative and made for very intensive start of my semester. Each year, it has a different theme, last year this was food, and this year it was all about water: the ways how it challenges us and also the ways how we can challenge the current status-quo. The first two days of the program were concentrated on acquiring information, making sense of it and building our own perspective. Several inspiring speakers from research institutes and NGOs made their appearance on stage in rapid succession, highlighting five key challenges, one of which we were to address. During the first day we also visited sites of local agents that are, in one way or other, dealing with water and trying to offer their solutions to protect the environment or save costs. Ideally both at the same time, of course. Having got the feel of what the current problems locally and globally are, we were ready to start working on solving them. In a team where none of us had any significant previous knowledge of the topic and in only three days. It felt like a sequel to Mission Impossible and failure was guaranteed. This was on one hand discouraging, on the other hand, it offered and unexpected freedom. We were not trying to save the world nor beat the other 18 teams anymore. We were just working hard and having fun. At the end of the week our team came up with an idea how to save roughly 20% of clean water that gets used in a common household. This would be enabled by using so called “grey water” from your shower for flushing your toilet. Because, and this was shocking to us, an average European uses 50 liters of clean drinking water for showering and another 50 liters for flushing the toilet every day. This amounts to 2/3 of her direct daily water consumption. “… an average European uses 50 liters of clean drinking water for showering and another 50 liters for flushing the toilet every day.” Does flushing with used water sound like a trivial idea to you? Well that’s because it is. And don’t you wonder now why you still flush your toilet with drinking water? It is because innovating our bathrooms is extremely challenging. It is a very constrained environment; moreover, it may well be one of the first things ever to get “connected”. The water and sanitation system we use these days is conceptually almost identical with the one that was put into use more than 2500 years ago in ancient Rome. And therefore any change that is to be made must take into account the way it may affect the whole system. These all are important hurdles, but there may be one even more significant. We may be willing to give a new smartphone a try, we may spend a month in a different country every summer, but we are generally very reluctant to make significant changes to something so personal as our bathroom. Moreover, it somehow goes without saying for us that water is an infinite resource and there is also no important financial rationale that would persuade more consumers to rethink the way they use water. In Zürich there is more than 1200 public fountains and all of them offer drinking water during whole year. The idea that technical progress is going to offer solutions to many of our problems is widely accepted. Of course we may not have the solutions right now, but they are well on their way! Don’t worry! This corresponds well with how much effort gets invested into pursuing technical innovations. And these are, more often than not, only very incremental. But when it comes to something so ordinary as our bathrooms we already have all the means to start rethinking it. But we don’t, because it is uncomfortable. In this case, more than new technical solutions, we need to find a new perspective. Being an engineering student, this was the most important personal outcome of the week. Something that will probably influence the way I think about where I put my time and effort in the future. And how about you? How much you are confident of engineering or scientific solutions? Do you have some doubts? And if you do, does this get to play out in your actions? I am not asking to make you feel awkward. Rather to spur your interest and get you thinking. It may very well be you who helps a needed new perspective to take off, be it in your family, among your friends or anywhere else. Martin Note: In the next blog post you can look forward to the impressions after my first month of studies at ETH. What makes one feel good here? Which things are annoying, and most importantly is it fun?. Here you can find out more about me.</summary></entry><entry><title type="html">To accept or not to accept, that is the question</title><link href="http://www.martinholub.com//tristium%20turicum/2016/10/01/ToAcceptOrNotToAccept.html" rel="alternate" type="text/html" title="To accept or not to accept, that is the question" /><published>2016-10-01T19:49:00+02:00</published><updated>2016-10-01T19:49:00+02:00</updated><id>http://www.martinholub.com//tristium%20turicum/2016/10/01/ToAcceptOrNotToAccept</id><content type="html" xml:base="http://www.martinholub.com//tristium%20turicum/2016/10/01/ToAcceptOrNotToAccept.html">&lt;div class=&quot;img_row&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/package.jpg&quot; alt=&quot;&quot; title=&quot;package&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
&lt;/div&gt;

&lt;p&gt;Imagine that one day someone knocks on your door. A stranger. And at his feet, there lies a package. A package so big that he had to put it down to free his hands to knock. It is wrapped to impress - in bright colors with a shiny ribbon. You immediately wonder about the contents. And the stranger says to you: “I offer you this present but I don’t know what is inside. It is possible that it will be entirely good for you, it may also be entirely bad. But most likely there is both of those, mixed at unknown ratio.” Would you be tempted to open this package? Almost certainly you would. And would you open it?&lt;/p&gt;

&lt;p&gt;I faced such situation this winter. The present I got was a letter of acceptance to master’s program at ETH in Zürich. It came in an ordinary envelope, but like the package with shiny ribbon, it made an extraordinary first impression. ETH is ranked as the 9th best university in the world. In Europe only Oxford, Cambridge and UCL appear higher in rankings. It has long record of excellence in education and research. Besides, it doesn’t charge exorbitant tuition fees as similarly ranked universities do. All this makes it for many students and also scientist the place #1 to be. My reaction to the letter aligned with this image. I was over the moon and within few days I replied that I accept the opportunity.&lt;/p&gt;

&lt;p&gt;However, this joyful feeling was soon over. Better consideration revealed that this present indeed contains a mixture of good and bad things. I was already aware of some of the disadvantages, like the price of living in Switzerland, but I kept finding more. For example, just finding a room to live in Zürich was a task that occupied all my free time for two weeks. That represents quite a lot of effort for something so ordinary! I also started seeing many things I will miss when not being in my home country like friends, mentors but also the peace of mind and effectivity that one usually finds in his comfort zone.&lt;/p&gt;

&lt;p&gt;At one point I almost changed my mind. The present I received appeared to contain too much of bad stuff, the ratio of the mixture looked unfavorable. At that point I ran across a quote: “When facing a challenge, don’t think about what you stand to lose, but rather about what you stand to gain.” This dramatically changed my take on things and I am very glad it did. Because benefits of accepting the present are manifold.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“When facing a challenge, don’t think about what you stand to lose, but rather about what you stand to gain.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Whole new hoist of opportunities opens up ETH. For example, the projects I can participate in as part of my studies are often tremendously interesting. Same goes for possible job openings. Moreover, the university and the city attract talent from all over the world and I just can’t wait to start literally bumping to great and diverse people! But if there is something that really tilted the scales towards accepting the offered present, it was my curiosity. Because I wonder how does the approach to education differ at top-notch and average university. I wonder how does one’s life changes when lived in a city that boasts one of the highest qualities of life in the world. I wonder what was it in the first place that made the country so attractive. Is it the relentless work ethics of its people, geographical position or the enduring tradition?&lt;/p&gt;

&lt;div class=&quot;img_row&quot;&gt;
	&lt;img class=&quot;col three&quot; src=&quot;/img/eth_gebaeude.jpg&quot; alt=&quot;&quot; title=&quot;die ETH&quot; /&gt;
&lt;/div&gt;
&lt;div class=&quot;col three caption&quot;&gt;
ETH main building in the center of Zürich (&amp;copy; ethz.ch)
&lt;/div&gt;

&lt;p&gt;I have few friends that were offered a similar or even more impressively packed present and decided to refuse it. They turned down offers from the best US universities. I used to have very little understanding for them but now, once I lived through similar decision process myself, I see their point. Their mixture just appeared to have too much of a bad stuff. But, I decided, and I hope that luckily, to accept the present and open the package.
On this blog I will share with you what I find inside. Which of my expectations will prove right and which utterly wrong? What surprises await me? And at what ratio are the good and bad things in the present really mixed? Stay tuned for answers to those questions and much more!&lt;/p&gt;

&lt;p&gt;Martin&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Here you can find out &lt;a href=&quot;/about&quot; target=&quot;blank&quot;&gt;more about me&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Footnote:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The tag Tristium Turicum (“Zürich Sorrows”) is a reference to the collection of poems called Tristium Vindobona (“Vienna Sorrows”) written by Josef Svatopluk Machar at the end of 18th century. This Czech poet and essayist wrote them during his exile in Vienna, city which, when founded by Romans, was knonw as Vindobona. Similarly, Zürich, was named Turicum in Latin.&lt;/em&gt;&lt;/p&gt;</content><author><name>Martin Holub</name></author><category term="Tristium Turicum" /><category term="ETH" /><category term="study" /><summary type="html">Imagine that one day someone knocks on your door. A stranger. And at his feet, there lies a package. A package so big that he had to put it down to free his hands to knock. It is wrapped to impress - in bright colors with a shiny ribbon. You immediately wonder about the contents. And the stranger says to you: “I offer you this present but I don’t know what is inside. It is possible that it will be entirely good for you, it may also be entirely bad. But most likely there is both of those, mixed at unknown ratio.” Would you be tempted to open this package? Almost certainly you would. And would you open it? I faced such situation this winter. The present I got was a letter of acceptance to master’s program at ETH in Zürich. It came in an ordinary envelope, but like the package with shiny ribbon, it made an extraordinary first impression. ETH is ranked as the 9th best university in the world. In Europe only Oxford, Cambridge and UCL appear higher in rankings. It has long record of excellence in education and research. Besides, it doesn’t charge exorbitant tuition fees as similarly ranked universities do. All this makes it for many students and also scientist the place #1 to be. My reaction to the letter aligned with this image. I was over the moon and within few days I replied that I accept the opportunity. However, this joyful feeling was soon over. Better consideration revealed that this present indeed contains a mixture of good and bad things. I was already aware of some of the disadvantages, like the price of living in Switzerland, but I kept finding more. For example, just finding a room to live in Zürich was a task that occupied all my free time for two weeks. That represents quite a lot of effort for something so ordinary! I also started seeing many things I will miss when not being in my home country like friends, mentors but also the peace of mind and effectivity that one usually finds in his comfort zone. At one point I almost changed my mind. The present I received appeared to contain too much of bad stuff, the ratio of the mixture looked unfavorable. At that point I ran across a quote: “When facing a challenge, don’t think about what you stand to lose, but rather about what you stand to gain.” This dramatically changed my take on things and I am very glad it did. Because benefits of accepting the present are manifold. “When facing a challenge, don’t think about what you stand to lose, but rather about what you stand to gain.” Whole new hoist of opportunities opens up ETH. For example, the projects I can participate in as part of my studies are often tremendously interesting. Same goes for possible job openings. Moreover, the university and the city attract talent from all over the world and I just can’t wait to start literally bumping to great and diverse people! But if there is something that really tilted the scales towards accepting the offered present, it was my curiosity. Because I wonder how does the approach to education differ at top-notch and average university. I wonder how does one’s life changes when lived in a city that boasts one of the highest qualities of life in the world. I wonder what was it in the first place that made the country so attractive. Is it the relentless work ethics of its people, geographical position or the enduring tradition? ETH main building in the center of Zürich (&amp;copy; ethz.ch) I have few friends that were offered a similar or even more impressively packed present and decided to refuse it. They turned down offers from the best US universities. I used to have very little understanding for them but now, once I lived through similar decision process myself, I see their point. Their mixture just appeared to have too much of a bad stuff. But, I decided, and I hope that luckily, to accept the present and open the package. On this blog I will share with you what I find inside. Which of my expectations will prove right and which utterly wrong? What surprises await me? And at what ratio are the good and bad things in the present really mixed? Stay tuned for answers to those questions and much more! Martin Here you can find out more about me. Footnote: The tag Tristium Turicum (“Zürich Sorrows”) is a reference to the collection of poems called Tristium Vindobona (“Vienna Sorrows”) written by Josef Svatopluk Machar at the end of 18th century. This Czech poet and essayist wrote them during his exile in Vienna, city which, when founded by Romans, was knonw as Vindobona. Similarly, Zürich, was named Turicum in Latin.</summary></entry></feed>